DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=40)
           2	LOAD_FAST(arg=0, lineno=53)
           4	LOAD_CONST(arg=1, lineno=53)
           6	BINARY_SUBSCR(arg=None, lineno=53)
           8	LOAD_CONST(arg=2, lineno=53)
          10	BINARY_AND(arg=None, lineno=53)
          12	LOAD_CONST(arg=3, lineno=53)
          14	BINARY_LSHIFT(arg=None, lineno=53)
          16	LOAD_CONST(arg=4, lineno=53)
          18	BINARY_AND(arg=None, lineno=53)
          20	LOAD_FAST(arg=0, lineno=54)
          22	LOAD_CONST(arg=1, lineno=54)
          24	BINARY_SUBSCR(arg=None, lineno=54)
          26	LOAD_CONST(arg=5, lineno=54)
          28	BINARY_LSHIFT(arg=None, lineno=54)
          30	LOAD_CONST(arg=4, lineno=54)
          32	BINARY_AND(arg=None, lineno=54)
          34	LOAD_FAST(arg=0, lineno=54)
          36	LOAD_CONST(arg=1, lineno=54)
          38	BINARY_SUBSCR(arg=None, lineno=54)
          40	BINARY_XOR(arg=None, lineno=54)
          42	LOAD_CONST(arg=6, lineno=54)
          44	BINARY_RSHIFT(arg=None, lineno=54)
          46	BINARY_XOR(arg=None, lineno=53)
          48	LOAD_FAST(arg=0, lineno=53)
          50	LOAD_CONST(arg=1, lineno=53)
          52	STORE_SUBSCR(arg=None, lineno=53)
          54	LOAD_FAST(arg=0, lineno=56)
          56	LOAD_CONST(arg=7, lineno=56)
          58	BINARY_SUBSCR(arg=None, lineno=56)
          60	LOAD_CONST(arg=8, lineno=56)
          62	BINARY_AND(arg=None, lineno=56)
          64	LOAD_CONST(arg=9, lineno=56)
          66	BINARY_LSHIFT(arg=None, lineno=56)
          68	LOAD_CONST(arg=4, lineno=56)
          70	BINARY_AND(arg=None, lineno=56)
          72	LOAD_FAST(arg=0, lineno=57)
          74	LOAD_CONST(arg=7, lineno=57)
          76	BINARY_SUBSCR(arg=None, lineno=57)
          78	LOAD_CONST(arg=10, lineno=57)
          80	BINARY_LSHIFT(arg=None, lineno=57)
          82	LOAD_CONST(arg=4, lineno=57)
          84	BINARY_AND(arg=None, lineno=57)
          86	LOAD_FAST(arg=0, lineno=57)
          88	LOAD_CONST(arg=7, lineno=57)
          90	BINARY_SUBSCR(arg=None, lineno=57)
          92	BINARY_XOR(arg=None, lineno=57)
          94	LOAD_CONST(arg=11, lineno=57)
          96	BINARY_RSHIFT(arg=None, lineno=57)
          98	BINARY_XOR(arg=None, lineno=56)
         100	LOAD_FAST(arg=0, lineno=56)
         102	LOAD_CONST(arg=7, lineno=56)
         104	STORE_SUBSCR(arg=None, lineno=56)
         106	LOAD_FAST(arg=0, lineno=59)
         108	LOAD_CONST(arg=10, lineno=59)
         110	BINARY_SUBSCR(arg=None, lineno=59)
         112	LOAD_CONST(arg=12, lineno=59)
         114	BINARY_AND(arg=None, lineno=59)
         116	LOAD_CONST(arg=13, lineno=59)
         118	BINARY_LSHIFT(arg=None, lineno=59)
         120	LOAD_CONST(arg=4, lineno=59)
         122	BINARY_AND(arg=None, lineno=59)
         124	LOAD_FAST(arg=0, lineno=60)
         126	LOAD_CONST(arg=10, lineno=60)
         128	BINARY_SUBSCR(arg=None, lineno=60)
         130	LOAD_CONST(arg=14, lineno=60)
         132	BINARY_LSHIFT(arg=None, lineno=60)
         134	LOAD_CONST(arg=4, lineno=60)
         136	BINARY_AND(arg=None, lineno=60)
         138	LOAD_FAST(arg=0, lineno=60)
         140	LOAD_CONST(arg=10, lineno=60)
         142	BINARY_SUBSCR(arg=None, lineno=60)
         144	BINARY_XOR(arg=None, lineno=60)
         146	LOAD_CONST(arg=15, lineno=60)
         148	BINARY_RSHIFT(arg=None, lineno=60)
         150	BINARY_XOR(arg=None, lineno=59)
         152	LOAD_FAST(arg=0, lineno=59)
         154	LOAD_CONST(arg=10, lineno=59)
         156	STORE_SUBSCR(arg=None, lineno=59)
         158	LOAD_FAST(arg=0, lineno=63)
         160	LOAD_CONST(arg=1, lineno=63)
         162	BINARY_SUBSCR(arg=None, lineno=63)
         164	LOAD_FAST(arg=0, lineno=63)
         166	LOAD_CONST(arg=7, lineno=63)
         168	BINARY_SUBSCR(arg=None, lineno=63)
         170	BINARY_XOR(arg=None, lineno=63)
         172	LOAD_FAST(arg=0, lineno=63)
         174	LOAD_CONST(arg=10, lineno=63)
         176	BINARY_SUBSCR(arg=None, lineno=63)
         178	BINARY_XOR(arg=None, lineno=63)
         180	RETURN_VALUE(arg=None, lineno=63)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=40)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=53)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=53)
DEBUG:numba.core.byteflow:stack ['$state2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$state2.0', '$const4.1.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=2, lineno=53)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_AND(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2', '$const8.3.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=3, lineno=53)
DEBUG:numba.core.byteflow:stack ['$10binary_and.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_LSHIFT(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$10binary_and.4', '$const12.5.3']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_CONST(arg=4, lineno=53)
DEBUG:numba.core.byteflow:stack ['$14binary_lshift.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=BINARY_AND(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$14binary_lshift.6', '$const16.7.4']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=1, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$state20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_SUBSCR(arg=None, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$state20.9', '$const22.10.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=5, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$24binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_LSHIFT(arg=None, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$24binary_subscr.11', '$const26.12.5']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$28binary_lshift.13']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BINARY_AND(arg=None, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$28binary_lshift.13', '$const30.14.4']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$32binary_and.15']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$32binary_and.15', '$state34.16']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$32binary_and.15', '$state34.16', '$const36.17.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_XOR(arg=None, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$32binary_and.15', '$38binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_CONST(arg=6, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$40binary_xor.19']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_RSHIFT(arg=None, lineno=54)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$40binary_xor.19', '$const42.20.6']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_XOR(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$18binary_and.8', '$44binary_rshift.21']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=53)
DEBUG:numba.core.byteflow:stack ['$46binary_xor.22']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=1, lineno=53)
DEBUG:numba.core.byteflow:stack ['$46binary_xor.22', '$state48.23']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=STORE_SUBSCR(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$46binary_xor.22', '$state48.23', '$const50.24.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=56)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=7, lineno=56)
DEBUG:numba.core.byteflow:stack ['$state54.25']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=56)
DEBUG:numba.core.byteflow:stack ['$state54.25', '$const56.26.7']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=8, lineno=56)
DEBUG:numba.core.byteflow:stack ['$58binary_subscr.27']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=BINARY_AND(arg=None, lineno=56)
DEBUG:numba.core.byteflow:stack ['$58binary_subscr.27', '$const60.28.8']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=9, lineno=56)
DEBUG:numba.core.byteflow:stack ['$62binary_and.29']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=BINARY_LSHIFT(arg=None, lineno=56)
DEBUG:numba.core.byteflow:stack ['$62binary_and.29', '$const64.30.9']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=4, lineno=56)
DEBUG:numba.core.byteflow:stack ['$66binary_lshift.31']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BINARY_AND(arg=None, lineno=56)
DEBUG:numba.core.byteflow:stack ['$66binary_lshift.31', '$const68.32.4']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=0, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=7, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$state72.34']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$state72.34', '$const74.35.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_CONST(arg=10, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$76binary_subscr.36']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=BINARY_LSHIFT(arg=None, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$76binary_subscr.36', '$const78.37.10']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_CONST(arg=4, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$80binary_lshift.38']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=BINARY_AND(arg=None, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$80binary_lshift.38', '$const82.39.4']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$84binary_and.40']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_CONST(arg=7, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$84binary_and.40', '$state86.41']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=BINARY_SUBSCR(arg=None, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$84binary_and.40', '$state86.41', '$const88.42.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=BINARY_XOR(arg=None, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$84binary_and.40', '$90binary_subscr.43']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=11, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$92binary_xor.44']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=BINARY_RSHIFT(arg=None, lineno=57)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$92binary_xor.44', '$const94.45.11']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=BINARY_XOR(arg=None, lineno=56)
DEBUG:numba.core.byteflow:stack ['$70binary_and.33', '$96binary_rshift.46']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=0, lineno=56)
DEBUG:numba.core.byteflow:stack ['$98binary_xor.47']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_CONST(arg=7, lineno=56)
DEBUG:numba.core.byteflow:stack ['$98binary_xor.47', '$state100.48']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=56)
DEBUG:numba.core.byteflow:stack ['$98binary_xor.47', '$state100.48', '$const102.49.7']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=0, lineno=59)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=10, lineno=59)
DEBUG:numba.core.byteflow:stack ['$state106.50']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=BINARY_SUBSCR(arg=None, lineno=59)
DEBUG:numba.core.byteflow:stack ['$state106.50', '$const108.51.10']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=12, lineno=59)
DEBUG:numba.core.byteflow:stack ['$110binary_subscr.52']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=BINARY_AND(arg=None, lineno=59)
DEBUG:numba.core.byteflow:stack ['$110binary_subscr.52', '$const112.53.12']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_CONST(arg=13, lineno=59)
DEBUG:numba.core.byteflow:stack ['$114binary_and.54']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=BINARY_LSHIFT(arg=None, lineno=59)
DEBUG:numba.core.byteflow:stack ['$114binary_and.54', '$const116.55.13']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_CONST(arg=4, lineno=59)
DEBUG:numba.core.byteflow:stack ['$118binary_lshift.56']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=BINARY_AND(arg=None, lineno=59)
DEBUG:numba.core.byteflow:stack ['$118binary_lshift.56', '$const120.57.4']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=0, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_CONST(arg=10, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$state124.59']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$state124.59', '$const126.60.10']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_CONST(arg=14, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$128binary_subscr.61']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=BINARY_LSHIFT(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$128binary_subscr.61', '$const130.62.14']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_CONST(arg=4, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$132binary_lshift.63']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=BINARY_AND(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$132binary_lshift.63', '$const134.64.4']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$136binary_and.65']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_CONST(arg=10, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$136binary_and.65', '$state138.66']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=BINARY_SUBSCR(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$136binary_and.65', '$state138.66', '$const140.67.10']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=BINARY_XOR(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$136binary_and.65', '$142binary_subscr.68']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=15, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$144binary_xor.69']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=BINARY_RSHIFT(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$144binary_xor.69', '$const146.70.15']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=BINARY_XOR(arg=None, lineno=59)
DEBUG:numba.core.byteflow:stack ['$122binary_and.58', '$148binary_rshift.71']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=59)
DEBUG:numba.core.byteflow:stack ['$150binary_xor.72']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_CONST(arg=10, lineno=59)
DEBUG:numba.core.byteflow:stack ['$150binary_xor.72', '$state152.73']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=STORE_SUBSCR(arg=None, lineno=59)
DEBUG:numba.core.byteflow:stack ['$150binary_xor.72', '$state152.73', '$const154.74.10']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_FAST(arg=0, lineno=63)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_CONST(arg=1, lineno=63)
DEBUG:numba.core.byteflow:stack ['$state158.75']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=BINARY_SUBSCR(arg=None, lineno=63)
DEBUG:numba.core.byteflow:stack ['$state158.75', '$const160.76.1']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=63)
DEBUG:numba.core.byteflow:stack ['$162binary_subscr.77']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=7, lineno=63)
DEBUG:numba.core.byteflow:stack ['$162binary_subscr.77', '$state164.78']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=BINARY_SUBSCR(arg=None, lineno=63)
DEBUG:numba.core.byteflow:stack ['$162binary_subscr.77', '$state164.78', '$const166.79.7']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_XOR(arg=None, lineno=63)
DEBUG:numba.core.byteflow:stack ['$162binary_subscr.77', '$168binary_subscr.80']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=0, lineno=63)
DEBUG:numba.core.byteflow:stack ['$170binary_xor.81']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_CONST(arg=10, lineno=63)
DEBUG:numba.core.byteflow:stack ['$170binary_xor.81', '$state172.82']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=BINARY_SUBSCR(arg=None, lineno=63)
DEBUG:numba.core.byteflow:stack ['$170binary_xor.81', '$state172.82', '$const174.83.10']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=BINARY_XOR(arg=None, lineno=63)
DEBUG:numba.core.byteflow:stack ['$170binary_xor.81', '$176binary_subscr.84']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=RETURN_VALUE(arg=None, lineno=63)
DEBUG:numba.core.byteflow:stack ['$178binary_xor.85']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$state2.0'}), (4, {'res': '$const4.1.1'}), (6, {'index': '$const4.1.1', 'target': '$state2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$const8.3.2'}), (10, {'lhs': '$6binary_subscr.2', 'rhs': '$const8.3.2', 'res': '$10binary_and.4'}), (12, {'res': '$const12.5.3'}), (14, {'lhs': '$10binary_and.4', 'rhs': '$const12.5.3', 'res': '$14binary_lshift.6'}), (16, {'res': '$const16.7.4'}), (18, {'lhs': '$14binary_lshift.6', 'rhs': '$const16.7.4', 'res': '$18binary_and.8'}), (20, {'res': '$state20.9'}), (22, {'res': '$const22.10.1'}), (24, {'index': '$const22.10.1', 'target': '$state20.9', 'res': '$24binary_subscr.11'}), (26, {'res': '$const26.12.5'}), (28, {'lhs': '$24binary_subscr.11', 'rhs': '$const26.12.5', 'res': '$28binary_lshift.13'}), (30, {'res': '$const30.14.4'}), (32, {'lhs': '$28binary_lshift.13', 'rhs': '$const30.14.4', 'res': '$32binary_and.15'}), (34, {'res': '$state34.16'}), (36, {'res': '$const36.17.1'}), (38, {'index': '$const36.17.1', 'target': '$state34.16', 'res': '$38binary_subscr.18'}), (40, {'lhs': '$32binary_and.15', 'rhs': '$38binary_subscr.18', 'res': '$40binary_xor.19'}), (42, {'res': '$const42.20.6'}), (44, {'lhs': '$40binary_xor.19', 'rhs': '$const42.20.6', 'res': '$44binary_rshift.21'}), (46, {'lhs': '$18binary_and.8', 'rhs': '$44binary_rshift.21', 'res': '$46binary_xor.22'}), (48, {'res': '$state48.23'}), (50, {'res': '$const50.24.1'}), (52, {'target': '$state48.23', 'index': '$const50.24.1', 'value': '$46binary_xor.22'}), (54, {'res': '$state54.25'}), (56, {'res': '$const56.26.7'}), (58, {'index': '$const56.26.7', 'target': '$state54.25', 'res': '$58binary_subscr.27'}), (60, {'res': '$const60.28.8'}), (62, {'lhs': '$58binary_subscr.27', 'rhs': '$const60.28.8', 'res': '$62binary_and.29'}), (64, {'res': '$const64.30.9'}), (66, {'lhs': '$62binary_and.29', 'rhs': '$const64.30.9', 'res': '$66binary_lshift.31'}), (68, {'res': '$const68.32.4'}), (70, {'lhs': '$66binary_lshift.31', 'rhs': '$const68.32.4', 'res': '$70binary_and.33'}), (72, {'res': '$state72.34'}), (74, {'res': '$const74.35.7'}), (76, {'index': '$const74.35.7', 'target': '$state72.34', 'res': '$76binary_subscr.36'}), (78, {'res': '$const78.37.10'}), (80, {'lhs': '$76binary_subscr.36', 'rhs': '$const78.37.10', 'res': '$80binary_lshift.38'}), (82, {'res': '$const82.39.4'}), (84, {'lhs': '$80binary_lshift.38', 'rhs': '$const82.39.4', 'res': '$84binary_and.40'}), (86, {'res': '$state86.41'}), (88, {'res': '$const88.42.7'}), (90, {'index': '$const88.42.7', 'target': '$state86.41', 'res': '$90binary_subscr.43'}), (92, {'lhs': '$84binary_and.40', 'rhs': '$90binary_subscr.43', 'res': '$92binary_xor.44'}), (94, {'res': '$const94.45.11'}), (96, {'lhs': '$92binary_xor.44', 'rhs': '$const94.45.11', 'res': '$96binary_rshift.46'}), (98, {'lhs': '$70binary_and.33', 'rhs': '$96binary_rshift.46', 'res': '$98binary_xor.47'}), (100, {'res': '$state100.48'}), (102, {'res': '$const102.49.7'}), (104, {'target': '$state100.48', 'index': '$const102.49.7', 'value': '$98binary_xor.47'}), (106, {'res': '$state106.50'}), (108, {'res': '$const108.51.10'}), (110, {'index': '$const108.51.10', 'target': '$state106.50', 'res': '$110binary_subscr.52'}), (112, {'res': '$const112.53.12'}), (114, {'lhs': '$110binary_subscr.52', 'rhs': '$const112.53.12', 'res': '$114binary_and.54'}), (116, {'res': '$const116.55.13'}), (118, {'lhs': '$114binary_and.54', 'rhs': '$const116.55.13', 'res': '$118binary_lshift.56'}), (120, {'res': '$const120.57.4'}), (122, {'lhs': '$118binary_lshift.56', 'rhs': '$const120.57.4', 'res': '$122binary_and.58'}), (124, {'res': '$state124.59'}), (126, {'res': '$const126.60.10'}), (128, {'index': '$const126.60.10', 'target': '$state124.59', 'res': '$128binary_subscr.61'}), (130, {'res': '$const130.62.14'}), (132, {'lhs': '$128binary_subscr.61', 'rhs': '$const130.62.14', 'res': '$132binary_lshift.63'}), (134, {'res': '$const134.64.4'}), (136, {'lhs': '$132binary_lshift.63', 'rhs': '$const134.64.4', 'res': '$136binary_and.65'}), (138, {'res': '$state138.66'}), (140, {'res': '$const140.67.10'}), (142, {'index': '$const140.67.10', 'target': '$state138.66', 'res': '$142binary_subscr.68'}), (144, {'lhs': '$136binary_and.65', 'rhs': '$142binary_subscr.68', 'res': '$144binary_xor.69'}), (146, {'res': '$const146.70.15'}), (148, {'lhs': '$144binary_xor.69', 'rhs': '$const146.70.15', 'res': '$148binary_rshift.71'}), (150, {'lhs': '$122binary_and.58', 'rhs': '$148binary_rshift.71', 'res': '$150binary_xor.72'}), (152, {'res': '$state152.73'}), (154, {'res': '$const154.74.10'}), (156, {'target': '$state152.73', 'index': '$const154.74.10', 'value': '$150binary_xor.72'}), (158, {'res': '$state158.75'}), (160, {'res': '$const160.76.1'}), (162, {'index': '$const160.76.1', 'target': '$state158.75', 'res': '$162binary_subscr.77'}), (164, {'res': '$state164.78'}), (166, {'res': '$const166.79.7'}), (168, {'index': '$const166.79.7', 'target': '$state164.78', 'res': '$168binary_subscr.80'}), (170, {'lhs': '$162binary_subscr.77', 'rhs': '$168binary_subscr.80', 'res': '$170binary_xor.81'}), (172, {'res': '$state172.82'}), (174, {'res': '$const174.83.10'}), (176, {'index': '$const174.83.10', 'target': '$state172.82', 'res': '$176binary_subscr.84'}), (178, {'lhs': '$170binary_xor.81', 'rhs': '$176binary_subscr.84', 'res': '$178binary_xor.85'}), (180, {'retval': '$178binary_xor.85', 'castval': '$180return_value.86'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    state = arg(0, name=state)               ['state']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=state, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'state']
    $const8.3.2 = const(int, 4294967294)     ['$const8.3.2']
    $10binary_and.4 = $6binary_subscr.2 & $const8.3.2 ['$10binary_and.4', '$6binary_subscr.2', '$const8.3.2']
    $const12.5.3 = const(int, 12)            ['$const12.5.3']
    $14binary_lshift.6 = $10binary_and.4 << $const12.5.3 ['$10binary_and.4', '$14binary_lshift.6', '$const12.5.3']
    $const16.7.4 = const(int, 4294967295)    ['$const16.7.4']
    $18binary_and.8 = $14binary_lshift.6 & $const16.7.4 ['$14binary_lshift.6', '$18binary_and.8', '$const16.7.4']
    $const22.10.1 = const(int, 0)            ['$const22.10.1']
    $24binary_subscr.11 = getitem(value=state, index=$const22.10.1, fn=<built-in function getitem>) ['$24binary_subscr.11', '$const22.10.1', 'state']
    $const26.12.5 = const(int, 13)           ['$const26.12.5']
    $28binary_lshift.13 = $24binary_subscr.11 << $const26.12.5 ['$24binary_subscr.11', '$28binary_lshift.13', '$const26.12.5']
    $const30.14.4 = const(int, 4294967295)   ['$const30.14.4']
    $32binary_and.15 = $28binary_lshift.13 & $const30.14.4 ['$28binary_lshift.13', '$32binary_and.15', '$const30.14.4']
    $const36.17.1 = const(int, 0)            ['$const36.17.1']
    $38binary_subscr.18 = getitem(value=state, index=$const36.17.1, fn=<built-in function getitem>) ['$38binary_subscr.18', '$const36.17.1', 'state']
    $40binary_xor.19 = $32binary_and.15 ^ $38binary_subscr.18 ['$32binary_and.15', '$38binary_subscr.18', '$40binary_xor.19']
    $const42.20.6 = const(int, 19)           ['$const42.20.6']
    $44binary_rshift.21 = $40binary_xor.19 >> $const42.20.6 ['$40binary_xor.19', '$44binary_rshift.21', '$const42.20.6']
    $46binary_xor.22 = $18binary_and.8 ^ $44binary_rshift.21 ['$18binary_and.8', '$44binary_rshift.21', '$46binary_xor.22']
    $const50.24.1 = const(int, 0)            ['$const50.24.1']
    state[$const50.24.1] = $46binary_xor.22  ['$46binary_xor.22', '$const50.24.1', 'state']
    $const56.26.7 = const(int, 1)            ['$const56.26.7']
    $58binary_subscr.27 = getitem(value=state, index=$const56.26.7, fn=<built-in function getitem>) ['$58binary_subscr.27', '$const56.26.7', 'state']
    $const60.28.8 = const(int, 4294967288)   ['$const60.28.8']
    $62binary_and.29 = $58binary_subscr.27 & $const60.28.8 ['$58binary_subscr.27', '$62binary_and.29', '$const60.28.8']
    $const64.30.9 = const(int, 4)            ['$const64.30.9']
    $66binary_lshift.31 = $62binary_and.29 << $const64.30.9 ['$62binary_and.29', '$66binary_lshift.31', '$const64.30.9']
    $const68.32.4 = const(int, 4294967295)   ['$const68.32.4']
    $70binary_and.33 = $66binary_lshift.31 & $const68.32.4 ['$66binary_lshift.31', '$70binary_and.33', '$const68.32.4']
    $const74.35.7 = const(int, 1)            ['$const74.35.7']
    $76binary_subscr.36 = getitem(value=state, index=$const74.35.7, fn=<built-in function getitem>) ['$76binary_subscr.36', '$const74.35.7', 'state']
    $const78.37.10 = const(int, 2)           ['$const78.37.10']
    $80binary_lshift.38 = $76binary_subscr.36 << $const78.37.10 ['$76binary_subscr.36', '$80binary_lshift.38', '$const78.37.10']
    $const82.39.4 = const(int, 4294967295)   ['$const82.39.4']
    $84binary_and.40 = $80binary_lshift.38 & $const82.39.4 ['$80binary_lshift.38', '$84binary_and.40', '$const82.39.4']
    $const88.42.7 = const(int, 1)            ['$const88.42.7']
    $90binary_subscr.43 = getitem(value=state, index=$const88.42.7, fn=<built-in function getitem>) ['$90binary_subscr.43', '$const88.42.7', 'state']
    $92binary_xor.44 = $84binary_and.40 ^ $90binary_subscr.43 ['$84binary_and.40', '$90binary_subscr.43', '$92binary_xor.44']
    $const94.45.11 = const(int, 25)          ['$const94.45.11']
    $96binary_rshift.46 = $92binary_xor.44 >> $const94.45.11 ['$92binary_xor.44', '$96binary_rshift.46', '$const94.45.11']
    $98binary_xor.47 = $70binary_and.33 ^ $96binary_rshift.46 ['$70binary_and.33', '$96binary_rshift.46', '$98binary_xor.47']
    $const102.49.7 = const(int, 1)           ['$const102.49.7']
    state[$const102.49.7] = $98binary_xor.47 ['$98binary_xor.47', '$const102.49.7', 'state']
    $const108.51.10 = const(int, 2)          ['$const108.51.10']
    $110binary_subscr.52 = getitem(value=state, index=$const108.51.10, fn=<built-in function getitem>) ['$110binary_subscr.52', '$const108.51.10', 'state']
    $const112.53.12 = const(int, 4294967280) ['$const112.53.12']
    $114binary_and.54 = $110binary_subscr.52 & $const112.53.12 ['$110binary_subscr.52', '$114binary_and.54', '$const112.53.12']
    $const116.55.13 = const(int, 17)         ['$const116.55.13']
    $118binary_lshift.56 = $114binary_and.54 << $const116.55.13 ['$114binary_and.54', '$118binary_lshift.56', '$const116.55.13']
    $const120.57.4 = const(int, 4294967295)  ['$const120.57.4']
    $122binary_and.58 = $118binary_lshift.56 & $const120.57.4 ['$118binary_lshift.56', '$122binary_and.58', '$const120.57.4']
    $const126.60.10 = const(int, 2)          ['$const126.60.10']
    $128binary_subscr.61 = getitem(value=state, index=$const126.60.10, fn=<built-in function getitem>) ['$128binary_subscr.61', '$const126.60.10', 'state']
    $const130.62.14 = const(int, 3)          ['$const130.62.14']
    $132binary_lshift.63 = $128binary_subscr.61 << $const130.62.14 ['$128binary_subscr.61', '$132binary_lshift.63', '$const130.62.14']
    $const134.64.4 = const(int, 4294967295)  ['$const134.64.4']
    $136binary_and.65 = $132binary_lshift.63 & $const134.64.4 ['$132binary_lshift.63', '$136binary_and.65', '$const134.64.4']
    $const140.67.10 = const(int, 2)          ['$const140.67.10']
    $142binary_subscr.68 = getitem(value=state, index=$const140.67.10, fn=<built-in function getitem>) ['$142binary_subscr.68', '$const140.67.10', 'state']
    $144binary_xor.69 = $136binary_and.65 ^ $142binary_subscr.68 ['$136binary_and.65', '$142binary_subscr.68', '$144binary_xor.69']
    $const146.70.15 = const(int, 11)         ['$const146.70.15']
    $148binary_rshift.71 = $144binary_xor.69 >> $const146.70.15 ['$144binary_xor.69', '$148binary_rshift.71', '$const146.70.15']
    $150binary_xor.72 = $122binary_and.58 ^ $148binary_rshift.71 ['$122binary_and.58', '$148binary_rshift.71', '$150binary_xor.72']
    $const154.74.10 = const(int, 2)          ['$const154.74.10']
    state[$const154.74.10] = $150binary_xor.72 ['$150binary_xor.72', '$const154.74.10', 'state']
    $const160.76.1 = const(int, 0)           ['$const160.76.1']
    $162binary_subscr.77 = getitem(value=state, index=$const160.76.1, fn=<built-in function getitem>) ['$162binary_subscr.77', '$const160.76.1', 'state']
    $const166.79.7 = const(int, 1)           ['$const166.79.7']
    $168binary_subscr.80 = getitem(value=state, index=$const166.79.7, fn=<built-in function getitem>) ['$168binary_subscr.80', '$const166.79.7', 'state']
    $170binary_xor.81 = $162binary_subscr.77 ^ $168binary_subscr.80 ['$162binary_subscr.77', '$168binary_subscr.80', '$170binary_xor.81']
    $const174.83.10 = const(int, 2)          ['$const174.83.10']
    $176binary_subscr.84 = getitem(value=state, index=$const174.83.10, fn=<built-in function getitem>) ['$176binary_subscr.84', '$const174.83.10', 'state']
    $178binary_xor.85 = $170binary_xor.81 ^ $176binary_subscr.84 ['$170binary_xor.81', '$176binary_subscr.84', '$178binary_xor.85']
    $180return_value.86 = cast(value=$178binary_xor.85) ['$178binary_xor.85', '$180return_value.86']
    return $180return_value.86               ['$180return_value.86']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159188f670>
DEBUG:numba.core.ssa:on stmt: state = arg(0, name=state)
DEBUG:numba.core.ssa:on stmt: $const4.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $6binary_subscr.2 = static_getitem(value=state, index=0, index_var=$const4.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const8.3.2 = const(int, 4294967294)
DEBUG:numba.core.ssa:on stmt: $10binary_and.4 = $6binary_subscr.2 & $const8.3.2
DEBUG:numba.core.ssa:on stmt: $const12.5.3 = const(int, 12)
DEBUG:numba.core.ssa:on stmt: $14binary_lshift.6 = $10binary_and.4 << $const12.5.3
DEBUG:numba.core.ssa:on stmt: $const16.7.4 = const(int, 4294967295)
DEBUG:numba.core.ssa:on stmt: $18binary_and.8 = $14binary_lshift.6 & $const16.7.4
DEBUG:numba.core.ssa:on stmt: $const22.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $24binary_subscr.11 = static_getitem(value=state, index=0, index_var=$const22.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const26.12.5 = const(int, 13)
DEBUG:numba.core.ssa:on stmt: $28binary_lshift.13 = $24binary_subscr.11 << $const26.12.5
DEBUG:numba.core.ssa:on stmt: $const30.14.4 = const(int, 4294967295)
DEBUG:numba.core.ssa:on stmt: $32binary_and.15 = $28binary_lshift.13 & $const30.14.4
DEBUG:numba.core.ssa:on stmt: $const36.17.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.18 = static_getitem(value=state, index=0, index_var=$const36.17.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40binary_xor.19 = $32binary_and.15 ^ $38binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $const42.20.6 = const(int, 19)
DEBUG:numba.core.ssa:on stmt: $44binary_rshift.21 = $40binary_xor.19 >> $const42.20.6
DEBUG:numba.core.ssa:on stmt: $46binary_xor.22 = $18binary_and.8 ^ $44binary_rshift.21
DEBUG:numba.core.ssa:on stmt: $const50.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: state[0] = $46binary_xor.22
DEBUG:numba.core.ssa:on stmt: $const56.26.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.27 = static_getitem(value=state, index=1, index_var=$const56.26.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const60.28.8 = const(int, 4294967288)
DEBUG:numba.core.ssa:on stmt: $62binary_and.29 = $58binary_subscr.27 & $const60.28.8
DEBUG:numba.core.ssa:on stmt: $const64.30.9 = const(int, 4)
DEBUG:numba.core.ssa:on stmt: $66binary_lshift.31 = $62binary_and.29 << $const64.30.9
DEBUG:numba.core.ssa:on stmt: $const68.32.4 = const(int, 4294967295)
DEBUG:numba.core.ssa:on stmt: $70binary_and.33 = $66binary_lshift.31 & $const68.32.4
DEBUG:numba.core.ssa:on stmt: $const74.35.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $76binary_subscr.36 = static_getitem(value=state, index=1, index_var=$const74.35.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const78.37.10 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $80binary_lshift.38 = $76binary_subscr.36 << $const78.37.10
DEBUG:numba.core.ssa:on stmt: $const82.39.4 = const(int, 4294967295)
DEBUG:numba.core.ssa:on stmt: $84binary_and.40 = $80binary_lshift.38 & $const82.39.4
DEBUG:numba.core.ssa:on stmt: $const88.42.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90binary_subscr.43 = static_getitem(value=state, index=1, index_var=$const88.42.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92binary_xor.44 = $84binary_and.40 ^ $90binary_subscr.43
DEBUG:numba.core.ssa:on stmt: $const94.45.11 = const(int, 25)
DEBUG:numba.core.ssa:on stmt: $96binary_rshift.46 = $92binary_xor.44 >> $const94.45.11
DEBUG:numba.core.ssa:on stmt: $98binary_xor.47 = $70binary_and.33 ^ $96binary_rshift.46
DEBUG:numba.core.ssa:on stmt: $const102.49.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: state[1] = $98binary_xor.47
DEBUG:numba.core.ssa:on stmt: $const108.51.10 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $110binary_subscr.52 = static_getitem(value=state, index=2, index_var=$const108.51.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const112.53.12 = const(int, 4294967280)
DEBUG:numba.core.ssa:on stmt: $114binary_and.54 = $110binary_subscr.52 & $const112.53.12
DEBUG:numba.core.ssa:on stmt: $const116.55.13 = const(int, 17)
DEBUG:numba.core.ssa:on stmt: $118binary_lshift.56 = $114binary_and.54 << $const116.55.13
DEBUG:numba.core.ssa:on stmt: $const120.57.4 = const(int, 4294967295)
DEBUG:numba.core.ssa:on stmt: $122binary_and.58 = $118binary_lshift.56 & $const120.57.4
DEBUG:numba.core.ssa:on stmt: $const126.60.10 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $128binary_subscr.61 = static_getitem(value=state, index=2, index_var=$const126.60.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const130.62.14 = const(int, 3)
DEBUG:numba.core.ssa:on stmt: $132binary_lshift.63 = $128binary_subscr.61 << $const130.62.14
DEBUG:numba.core.ssa:on stmt: $const134.64.4 = const(int, 4294967295)
DEBUG:numba.core.ssa:on stmt: $136binary_and.65 = $132binary_lshift.63 & $const134.64.4
DEBUG:numba.core.ssa:on stmt: $const140.67.10 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $142binary_subscr.68 = static_getitem(value=state, index=2, index_var=$const140.67.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $144binary_xor.69 = $136binary_and.65 ^ $142binary_subscr.68
DEBUG:numba.core.ssa:on stmt: $const146.70.15 = const(int, 11)
DEBUG:numba.core.ssa:on stmt: $148binary_rshift.71 = $144binary_xor.69 >> $const146.70.15
DEBUG:numba.core.ssa:on stmt: $150binary_xor.72 = $122binary_and.58 ^ $148binary_rshift.71
DEBUG:numba.core.ssa:on stmt: $const154.74.10 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: state[2] = $150binary_xor.72
DEBUG:numba.core.ssa:on stmt: $const160.76.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $162binary_subscr.77 = static_getitem(value=state, index=0, index_var=$const160.76.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const166.79.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $168binary_subscr.80 = static_getitem(value=state, index=1, index_var=$const166.79.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $170binary_xor.81 = $162binary_subscr.77 ^ $168binary_subscr.80
DEBUG:numba.core.ssa:on stmt: $const174.83.10 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $176binary_subscr.84 = static_getitem(value=state, index=2, index_var=$const174.83.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $178binary_xor.85 = $170binary_xor.81 ^ $176binary_subscr.84
DEBUG:numba.core.ssa:on stmt: $180return_value.86 = cast(value=$178binary_xor.85)
DEBUG:numba.core.ssa:on stmt: return $180return_value.86
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_and.4': [(<numba.core.ir.Assign object at 0x7f159188e770>,
                                  0)],
             '$110binary_subscr.52': [(<numba.core.ir.Assign object at 0x7f15918ebb80>,
                                       0)],
             '$114binary_and.54': [(<numba.core.ir.Assign object at 0x7f15918e8910>,
                                    0)],
             '$118binary_lshift.56': [(<numba.core.ir.Assign object at 0x7f15918e8c10>,
                                       0)],
             '$122binary_and.58': [(<numba.core.ir.Assign object at 0x7f15918e8f10>,
                                    0)],
             '$128binary_subscr.61': [(<numba.core.ir.Assign object at 0x7f15918ebc40>,
                                       0)],
             '$132binary_lshift.63': [(<numba.core.ir.Assign object at 0x7f15918e9630>,
                                       0)],
             '$136binary_and.65': [(<numba.core.ir.Assign object at 0x7f15918e9930>,
                                    0)],
             '$142binary_subscr.68': [(<numba.core.ir.Assign object at 0x7f15918ebd00>,
                                       0)],
             '$144binary_xor.69': [(<numba.core.ir.Assign object at 0x7f15918e9ed0>,
                                    0)],
             '$148binary_rshift.71': [(<numba.core.ir.Assign object at 0x7f15918ea1d0>,
                                       0)],
             '$14binary_lshift.6': [(<numba.core.ir.Assign object at 0x7f15918a4250>,
                                     0)],
             '$150binary_xor.72': [(<numba.core.ir.Assign object at 0x7f15918ea350>,
                                    0)],
             '$162binary_subscr.77': [(<numba.core.ir.Assign object at 0x7f15918ebdc0>,
                                       0)],
             '$168binary_subscr.80': [(<numba.core.ir.Assign object at 0x7f15918ebe80>,
                                       0)],
             '$170binary_xor.81': [(<numba.core.ir.Assign object at 0x7f15918eb070>,
                                    0)],
             '$176binary_subscr.84': [(<numba.core.ir.Assign object at 0x7f15918ebf40>,
                                       0)],
             '$178binary_xor.85': [(<numba.core.ir.Assign object at 0x7f15918eb610>,
                                    0)],
             '$180return_value.86': [(<numba.core.ir.Assign object at 0x7f15918eb760>,
                                      0)],
             '$18binary_and.8': [(<numba.core.ir.Assign object at 0x7f15918a4550>,
                                  0)],
             '$24binary_subscr.11': [(<numba.core.ir.Assign object at 0x7f15918eac50>,
                                      0)],
             '$28binary_lshift.13': [(<numba.core.ir.Assign object at 0x7f15918a4c70>,
                                      0)],
             '$32binary_and.15': [(<numba.core.ir.Assign object at 0x7f15918a4f70>,
                                   0)],
             '$38binary_subscr.18': [(<numba.core.ir.Assign object at 0x7f15918eb880>,
                                      0)],
             '$40binary_xor.19': [(<numba.core.ir.Assign object at 0x7f15918a5510>,
                                   0)],
             '$44binary_rshift.21': [(<numba.core.ir.Assign object at 0x7f15918a5810>,
                                      0)],
             '$46binary_xor.22': [(<numba.core.ir.Assign object at 0x7f15918a5990>,
                                   0)],
             '$58binary_subscr.27': [(<numba.core.ir.Assign object at 0x7f15918eb940>,
                                      0)],
             '$62binary_and.29': [(<numba.core.ir.Assign object at 0x7f15918a6410>,
                                   0)],
             '$66binary_lshift.31': [(<numba.core.ir.Assign object at 0x7f15918a6710>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7f15918ea4d0>,
                                    0)],
             '$70binary_and.33': [(<numba.core.ir.Assign object at 0x7f15918a6a10>,
                                   0)],
             '$76binary_subscr.36': [(<numba.core.ir.Assign object at 0x7f15918eba00>,
                                      0)],
             '$80binary_lshift.38': [(<numba.core.ir.Assign object at 0x7f15918a7130>,
                                      0)],
             '$84binary_and.40': [(<numba.core.ir.Assign object at 0x7f15918a7430>,
                                   0)],
             '$90binary_subscr.43': [(<numba.core.ir.Assign object at 0x7f15918ebac0>,
                                      0)],
             '$92binary_xor.44': [(<numba.core.ir.Assign object at 0x7f15918a79d0>,
                                   0)],
             '$96binary_rshift.46': [(<numba.core.ir.Assign object at 0x7f15918a7cd0>,
                                      0)],
             '$98binary_xor.47': [(<numba.core.ir.Assign object at 0x7f15918a7e50>,
                                   0)],
             '$const102.49.7': [(<numba.core.ir.Assign object at 0x7f15918e8100>,
                                 0)],
             '$const108.51.10': [(<numba.core.ir.Assign object at 0x7f15918e8460>,
                                  0)],
             '$const112.53.12': [(<numba.core.ir.Assign object at 0x7f15918e8760>,
                                  0)],
             '$const116.55.13': [(<numba.core.ir.Assign object at 0x7f15918e8a60>,
                                  0)],
             '$const12.5.3': [(<numba.core.ir.Assign object at 0x7f159188e6e0>,
                               0)],
             '$const120.57.4': [(<numba.core.ir.Assign object at 0x7f15918e8d60>,
                                 0)],
             '$const126.60.10': [(<numba.core.ir.Assign object at 0x7f15918e9180>,
                                  0)],
             '$const130.62.14': [(<numba.core.ir.Assign object at 0x7f15918e9480>,
                                  0)],
             '$const134.64.4': [(<numba.core.ir.Assign object at 0x7f15918e9780>,
                                 0)],
             '$const140.67.10': [(<numba.core.ir.Assign object at 0x7f15918e9ba0>,
                                  0)],
             '$const146.70.15': [(<numba.core.ir.Assign object at 0x7f15918ea020>,
                                  0)],
             '$const154.74.10': [(<numba.core.ir.Assign object at 0x7f15918ea5c0>,
                                  0)],
             '$const16.7.4': [(<numba.core.ir.Assign object at 0x7f15918a43a0>,
                               0)],
             '$const160.76.1': [(<numba.core.ir.Assign object at 0x7f15918ea920>,
                                 0)],
             '$const166.79.7': [(<numba.core.ir.Assign object at 0x7f15918ead40>,
                                 0)],
             '$const174.83.10': [(<numba.core.ir.Assign object at 0x7f15918eb2e0>,
                                  0)],
             '$const22.10.1': [(<numba.core.ir.Assign object at 0x7f15918a47c0>,
                                0)],
             '$const26.12.5': [(<numba.core.ir.Assign object at 0x7f15918a4ac0>,
                                0)],
             '$const30.14.4': [(<numba.core.ir.Assign object at 0x7f15918a4dc0>,
                                0)],
             '$const36.17.1': [(<numba.core.ir.Assign object at 0x7f15918a51e0>,
                                0)],
             '$const4.1.1': [(<numba.core.ir.Assign object at 0x7f159188ea10>,
                              0)],
             '$const42.20.6': [(<numba.core.ir.Assign object at 0x7f15918a5660>,
                                0)],
             '$const50.24.1': [(<numba.core.ir.Assign object at 0x7f15918a5c00>,
                                0)],
             '$const56.26.7': [(<numba.core.ir.Assign object at 0x7f15918a5f60>,
                                0)],
             '$const60.28.8': [(<numba.core.ir.Assign object at 0x7f15918a6260>,
                                0)],
             '$const64.30.9': [(<numba.core.ir.Assign object at 0x7f15918a6560>,
                                0)],
             '$const68.32.4': [(<numba.core.ir.Assign object at 0x7f15918a6860>,
                                0)],
             '$const74.35.7': [(<numba.core.ir.Assign object at 0x7f15918a6c80>,
                                0)],
             '$const78.37.10': [(<numba.core.ir.Assign object at 0x7f15918a6f80>,
                                 0)],
             '$const8.3.2': [(<numba.core.ir.Assign object at 0x7f159188f1c0>,
                              0)],
             '$const82.39.4': [(<numba.core.ir.Assign object at 0x7f15918a7280>,
                                0)],
             '$const88.42.7': [(<numba.core.ir.Assign object at 0x7f15918a76a0>,
                                0)],
             '$const94.45.11': [(<numba.core.ir.Assign object at 0x7f15918a7b20>,
                                 0)],
             'state': [(<numba.core.ir.Assign object at 0x7f159188f910>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f159188f670>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=66)
           2	LOAD_GLOBAL(arg=0, lineno=79)
           4	LOAD_FAST(arg=0, lineno=79)
           6	CALL_FUNCTION(arg=1, lineno=79)
           8	STORE_FAST(arg=1, lineno=79)
          10	LOAD_GLOBAL(arg=1, lineno=80)
          12	LOAD_GLOBAL(arg=2, lineno=80)
          14	LOAD_FAST(arg=1, lineno=80)
          16	CALL_FUNCTION(arg=1, lineno=80)
          18	LOAD_CONST(arg=1, lineno=80)
          20	BINARY_TRUE_DIVIDE(arg=None, lineno=80)
          22	CALL_FUNCTION(arg=1, lineno=80)
          24	RETURN_VALUE(arg=None, lineno=80)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=66)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=79)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=79)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=79)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$state4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=79)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=2, lineno=80)
DEBUG:numba.core.byteflow:stack ['$10load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack ['$10load_global.3', '$12load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack ['$10load_global.3', '$12load_global.4', '$integer14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack ['$10load_global.3', '$16call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=80)
DEBUG:numba.core.byteflow:stack ['$10load_global.3', '$16call_function.6', '$const18.7.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL_FUNCTION(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack ['$10load_global.3', '$20binary_true_divide.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=80)
DEBUG:numba.core.byteflow:stack ['$22call_function.9']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$state4.1'}), (6, {'func': '$2load_global.0', 'args': ['$state4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$12load_global.4'}), (14, {'res': '$integer14.5'}), (16, {'func': '$12load_global.4', 'args': ['$integer14.5'], 'res': '$16call_function.6'}), (18, {'res': '$const18.7.1'}), (20, {'lhs': '$16call_function.6', 'rhs': '$const18.7.1', 'res': '$20binary_true_divide.8'}), (22, {'func': '$10load_global.3', 'args': ['$20binary_true_divide.8'], 'res': '$22call_function.9'}), (24, {'retval': '$22call_function.9', 'castval': '$24return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    state = arg(0, name=state)               ['state']
    $2load_global.0 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x7f15922d4a60>)) ['$2load_global.0']
    integer = call $2load_global.0(state, func=$2load_global.0, args=[Var(state, utils.py:66)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'integer', 'state']
    $10load_global.3 = global(abs: <built-in function abs>) ['$10load_global.3']
    $12load_global.4 = global(float: <class 'float'>) ['$12load_global.4']
    $16call_function.6 = call $12load_global.4(integer, func=$12load_global.4, args=[Var(integer, utils.py:79)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.4', '$16call_function.6', 'integer']
    $const18.7.1 = const(int, 2147483647)    ['$const18.7.1']
    $20binary_true_divide.8 = $16call_function.6 / $const18.7.1 ['$16call_function.6', '$20binary_true_divide.8', '$const18.7.1']
    $22call_function.9 = call $10load_global.3($20binary_true_divide.8, func=$10load_global.3, args=[Var($20binary_true_divide.8, utils.py:80)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$20binary_true_divide.8', '$22call_function.9']
    $24return_value.10 = cast(value=$22call_function.9) ['$22call_function.9', '$24return_value.10']
    return $24return_value.10                ['$24return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159174ec50>
DEBUG:numba.core.ssa:on stmt: state = arg(0, name=state)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x7f15922d4a60>))
DEBUG:numba.core.ssa:on stmt: integer = call $2load_global.0(state, func=$2load_global.0, args=[Var(state, utils.py:66)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(abs: <built-in function abs>)
DEBUG:numba.core.ssa:on stmt: $12load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $16call_function.6 = call $12load_global.4(integer, func=$12load_global.4, args=[Var(integer, utils.py:79)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const18.7.1 = const(int, 2147483647)
DEBUG:numba.core.ssa:on stmt: $20binary_true_divide.8 = $16call_function.6 / $const18.7.1
DEBUG:numba.core.ssa:on stmt: $22call_function.9 = call $10load_global.3($20binary_true_divide.8, func=$10load_global.3, args=[Var($20binary_true_divide.8, utils.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $24return_value.10 = cast(value=$22call_function.9)
DEBUG:numba.core.ssa:on stmt: return $24return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10load_global.3': [(<numba.core.ir.Assign object at 0x7f1591903c10>,
                                   0)],
             '$12load_global.4': [(<numba.core.ir.Assign object at 0x7f15917a5990>,
                                   0)],
             '$16call_function.6': [(<numba.core.ir.Assign object at 0x7f15918e9d50>,
                                     0)],
             '$20binary_true_divide.8': [(<numba.core.ir.Assign object at 0x7f159167b310>,
                                          0)],
             '$22call_function.9': [(<numba.core.ir.Assign object at 0x7f159167bc70>,
                                     0)],
             '$24return_value.10': [(<numba.core.ir.Assign object at 0x7f159167bd90>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7f159167b790>,
                                  0)],
             '$const18.7.1': [(<numba.core.ir.Assign object at 0x7f15918eae90>,
                               0)],
             'integer': [(<numba.core.ir.Assign object at 0x7f159167ba90>, 0)],
             'state': [(<numba.core.ir.Assign object at 0x7f159167b610>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f159174ec50>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=44)
           2	LOAD_CONST(arg=1, lineno=66)
           4	STORE_FAST(arg=2, lineno=66)
           6	LOAD_FAST(arg=0, lineno=67)
           8	LOAD_ATTR(arg=0, lineno=67)
          10	LOAD_CONST(arg=2, lineno=67)
          12	BINARY_SUBSCR(arg=None, lineno=67)
          14	STORE_FAST(arg=3, lineno=67)
          16	LOAD_GLOBAL(arg=1, lineno=68)
          18	LOAD_FAST(arg=3, lineno=68)
          20	CALL_FUNCTION(arg=1, lineno=68)
          22	GET_ITER(arg=None, lineno=68)
>         24	FOR_ITER(arg=16, lineno=68)
          26	STORE_FAST(arg=4, lineno=68)
          28	LOAD_FAST(arg=0, lineno=69)
          30	LOAD_FAST(arg=4, lineno=69)
          32	BINARY_SUBSCR(arg=None, lineno=69)
          34	LOAD_FAST(arg=1, lineno=69)
          36	LOAD_FAST(arg=4, lineno=69)
          38	BINARY_SUBSCR(arg=None, lineno=69)
          40	BINARY_SUBTRACT(arg=None, lineno=69)
          42	STORE_FAST(arg=5, lineno=69)
          44	LOAD_FAST(arg=2, lineno=70)
          46	LOAD_FAST(arg=5, lineno=70)
          48	LOAD_FAST(arg=5, lineno=70)
          50	BINARY_MULTIPLY(arg=None, lineno=70)
          52	INPLACE_ADD(arg=None, lineno=70)
          54	STORE_FAST(arg=2, lineno=70)
          56	JUMP_ABSOLUTE(arg=13, lineno=70)
>         58	LOAD_FAST(arg=2, lineno=72)
          60	RETURN_VALUE(arg=None, lineno=72)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=44)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=66)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=66)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=67)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=67)
DEBUG:numba.core.byteflow:stack ['$x6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=67)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=67)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2', '$const10.3.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=STORE_FAST(arg=3, lineno=67)
DEBUG:numba.core.byteflow:stack ['$12binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=68)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=68)
DEBUG:numba.core.byteflow:stack ['$16load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_FUNCTION(arg=1, lineno=68)
DEBUG:numba.core.byteflow:stack ['$16load_global.5', '$dim18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=GET_ITER(arg=None, lineno=68)
DEBUG:numba.core.byteflow:stack ['$20call_function.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$22get_iter.8',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi24.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=24 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=24, inst=FOR_ITER(arg=16, lineno=68)
DEBUG:numba.core.byteflow:stack ['$phi24.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=('$phi24.0', '$24for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=26 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=72)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=RETURN_VALUE(arg=None, lineno=72)
DEBUG:numba.core.byteflow:stack ['$result58.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=4, lineno=68)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=4, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$x28.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$x28.2', '$i30.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4', '$y34.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4', '$y34.5', '$i36.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_SUBTRACT(arg=None, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4', '$38binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=5, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$40binary_subtract.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=2, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=5, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=5, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9', '$diff46.10']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_MULTIPLY(arg=None, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9', '$diff46.10', '$diff48.11']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=INPLACE_ADD(arg=None, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9', '$50binary_multiply.12']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=2, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$52inplace_add.13']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=JUMP_ABSOLUTE(arg=13, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$phi26.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=26 nstack_initial=2): {'$phi26.1'},
             State(pc_initial=58 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi26.1': State(pc_initial=24 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi26.0': {('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi24.0': {('$22get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi26.1': {('$24for_iter.2', State(pc_initial=24 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$22get_iter.8'},
             State(pc_initial=24 nstack_initial=1): {'$phi26.1': '$24for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$x6.1'}), (8, {'item': '$x6.1', 'res': '$8load_attr.2'}), (10, {'res': '$const10.3.2'}), (12, {'index': '$const10.3.2', 'target': '$8load_attr.2', 'res': '$12binary_subscr.4'}), (14, {'value': '$12binary_subscr.4'}), (16, {'res': '$16load_global.5'}), (18, {'res': '$dim18.6'}), (20, {'func': '$16load_global.5', 'args': ['$dim18.6'], 'res': '$20call_function.7'}), (22, {'value': '$20call_function.7', 'res': '$22get_iter.8'})), outgoing_phis={'$phi24.0': '$22get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$22get_iter.8',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'iterator': '$phi24.0', 'pair': '$24for_iter.1', 'indval': '$24for_iter.2', 'pred': '$24for_iter.3'}),), outgoing_phis={'$phi26.1': '$24for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 26: ('$phi24.0', '$24for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=2):
AdaptBlockInfo(insts=((26, {'value': '$phi26.1'}), (28, {'res': '$x28.2'}), (30, {'res': '$i30.3'}), (32, {'index': '$i30.3', 'target': '$x28.2', 'res': '$32binary_subscr.4'}), (34, {'res': '$y34.5'}), (36, {'res': '$i36.6'}), (38, {'index': '$i36.6', 'target': '$y34.5', 'res': '$38binary_subscr.7'}), (40, {'lhs': '$32binary_subscr.4', 'rhs': '$38binary_subscr.7', 'res': '$40binary_subtract.8'}), (42, {'value': '$40binary_subtract.8'}), (44, {'res': '$result44.9'}), (46, {'res': '$diff46.10'}), (48, {'res': '$diff48.11'}), (50, {'lhs': '$diff46.10', 'rhs': '$diff48.11', 'res': '$50binary_multiply.12'}), (52, {'lhs': '$result44.9', 'rhs': '$50binary_multiply.12', 'res': '$52inplace_add.13'}), (54, {'value': '$52inplace_add.13'}), (56, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$phi26.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$result58.0'}), (60, {'retval': '$result58.0', 'castval': '$60return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    $8load_attr.2 = getattr(value=x, attr=shape) ['$8load_attr.2', 'x']
    $const10.3.2 = const(int, 0)             ['$const10.3.2']
    dim = getitem(value=$8load_attr.2, index=$const10.3.2, fn=<built-in function getitem>) ['$8load_attr.2', '$const10.3.2', 'dim']
    $16load_global.5 = global(range: <class 'range'>) ['$16load_global.5']
    $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:67)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.5', '$20call_function.7', 'dim']
    $22get_iter.8 = getiter(value=$20call_function.7) ['$20call_function.7', '$22get_iter.8']
    $phi24.0 = $22get_iter.8                 ['$22get_iter.8', '$phi24.0']
    jump 24                                  []
label 24:
    $24for_iter.1 = iternext(value=$phi24.0) ['$24for_iter.1', '$phi24.0']
    $24for_iter.2 = pair_first(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.2']
    $24for_iter.3 = pair_second(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.3']
    $phi26.1 = $24for_iter.2                 ['$24for_iter.2', '$phi26.1']
    branch $24for_iter.3, 26, 58             ['$24for_iter.3']
label 26:
    i = $phi26.1                             ['$phi26.1', 'i']
    $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$32binary_subscr.4', 'i', 'x']
    $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$38binary_subscr.7', 'i', 'y']
    diff = $32binary_subscr.4 - $38binary_subscr.7 ['$32binary_subscr.4', '$38binary_subscr.7', 'diff']
    $50binary_multiply.12 = diff * diff      ['$50binary_multiply.12', 'diff', 'diff']
    $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.12, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_multiply.12', '$52inplace_add.13', 'result']
    result = $52inplace_add.13               ['$52inplace_add.13', 'result']
    jump 24                                  []
label 58:
    $60return_value.1 = cast(value=result)   ['$60return_value.1', 'result']
    return $60return_value.1                 ['$60return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591565bd0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:67)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591565bd0>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591565bd0>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: diff = $32binary_subscr.4 - $38binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.12 = diff * diff
DEBUG:numba.core.ssa:on stmt: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $52inplace_add.13
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591565bd0>
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16load_global.5': [(<numba.core.ir.Assign object at 0x7f1591566b00>,
                                   0)],
             '$20call_function.7': [(<numba.core.ir.Assign object at 0x7f1591566e00>,
                                     0)],
             '$22get_iter.8': [(<numba.core.ir.Assign object at 0x7f1591566f20>,
                                0)],
             '$24for_iter.1': [(<numba.core.ir.Assign object at 0x7f1591567130>,
                                24)],
             '$24for_iter.2': [(<numba.core.ir.Assign object at 0x7f1591567250>,
                                24)],
             '$24for_iter.3': [(<numba.core.ir.Assign object at 0x7f1591567370>,
                                24)],
             '$32binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f1591567a30>,
                                     26)],
             '$38binary_subscr.7': [(<numba.core.ir.Assign object at 0x7f1591567df0>,
                                     26)],
             '$50binary_multiply.12': [(<numba.core.ir.Assign object at 0x7f15915805b0>,
                                        26)],
             '$52inplace_add.13': [(<numba.core.ir.Assign object at 0x7f1591580730>,
                                    26)],
             '$60return_value.1': [(<numba.core.ir.Assign object at 0x7f1591580490>,
                                    58)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f1591565210>,
                                0)],
             '$const10.3.2': [(<numba.core.ir.Assign object at 0x7f1591564730>,
                               0)],
             '$phi24.0': [(<numba.core.ir.Assign object at 0x7f1591564cd0>, 0)],
             '$phi26.1': [(<numba.core.ir.Assign object at 0x7f1591567070>,
                           24)],
             'diff': [(<numba.core.ir.Assign object at 0x7f1591567f70>, 26)],
             'dim': [(<numba.core.ir.Assign object at 0x7f1591581240>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f1591567640>, 26)],
             'result': [(<numba.core.ir.Assign object at 0x7f1591565db0>, 0),
                        (<numba.core.ir.Assign object at 0x7f15915807f0>, 26)],
             'x': [(<numba.core.ir.Assign object at 0x7f15915662f0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f15915660b0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1591565bd0>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591565a20>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:67)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591565a20>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591565a20>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: diff = $32binary_subscr.4 - $38binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.12 = diff * diff
DEBUG:numba.core.ssa:on stmt: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $52inplace_add.13
DEBUG:numba.core.ssa:replaced with: result.1 = $52inplace_add.13
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591565a20>
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1591564ee0>],
             26: [<numba.core.ir.Assign object at 0x7f1591580d90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591565a20>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:67)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591565a20>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591565a20>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: diff = $32binary_subscr.4 - $38binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.12 = diff * diff
DEBUG:numba.core.ssa:on stmt: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 26
DEBUG:numba.core.ssa:idom 24 from label 26
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:find_def_from_top label 24
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 24
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:incoming_def result.1 = $52inplace_add.13
DEBUG:numba.core.ssa:replaced with: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$50binary_multiply.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.13
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591565a20>
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def var='result' stmt=$60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 24 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:replaced with: $60return_value.1 = cast(value=result.2)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=44)
           2	LOAD_CONST(arg=1, lineno=66)
           4	STORE_FAST(arg=2, lineno=66)
           6	LOAD_FAST(arg=0, lineno=67)
           8	LOAD_ATTR(arg=0, lineno=67)
          10	LOAD_CONST(arg=2, lineno=67)
          12	BINARY_SUBSCR(arg=None, lineno=67)
          14	STORE_FAST(arg=3, lineno=67)
          16	LOAD_GLOBAL(arg=1, lineno=68)
          18	LOAD_FAST(arg=3, lineno=68)
          20	CALL_FUNCTION(arg=1, lineno=68)
          22	GET_ITER(arg=None, lineno=68)
>         24	FOR_ITER(arg=16, lineno=68)
          26	STORE_FAST(arg=4, lineno=68)
          28	LOAD_FAST(arg=0, lineno=69)
          30	LOAD_FAST(arg=4, lineno=69)
          32	BINARY_SUBSCR(arg=None, lineno=69)
          34	LOAD_FAST(arg=1, lineno=69)
          36	LOAD_FAST(arg=4, lineno=69)
          38	BINARY_SUBSCR(arg=None, lineno=69)
          40	BINARY_SUBTRACT(arg=None, lineno=69)
          42	STORE_FAST(arg=5, lineno=69)
          44	LOAD_FAST(arg=2, lineno=70)
          46	LOAD_FAST(arg=5, lineno=70)
          48	LOAD_FAST(arg=5, lineno=70)
          50	BINARY_MULTIPLY(arg=None, lineno=70)
          52	INPLACE_ADD(arg=None, lineno=70)
          54	STORE_FAST(arg=2, lineno=70)
          56	JUMP_ABSOLUTE(arg=13, lineno=70)
>         58	LOAD_FAST(arg=2, lineno=72)
          60	RETURN_VALUE(arg=None, lineno=72)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=44)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=66)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=66)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=67)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=67)
DEBUG:numba.core.byteflow:stack ['$x6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=67)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=67)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2', '$const10.3.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=STORE_FAST(arg=3, lineno=67)
DEBUG:numba.core.byteflow:stack ['$12binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=68)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=68)
DEBUG:numba.core.byteflow:stack ['$16load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_FUNCTION(arg=1, lineno=68)
DEBUG:numba.core.byteflow:stack ['$16load_global.5', '$dim18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=GET_ITER(arg=None, lineno=68)
DEBUG:numba.core.byteflow:stack ['$20call_function.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$22get_iter.8',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi24.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=24 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=24, inst=FOR_ITER(arg=16, lineno=68)
DEBUG:numba.core.byteflow:stack ['$phi24.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=('$phi24.0', '$24for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=26 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=72)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=RETURN_VALUE(arg=None, lineno=72)
DEBUG:numba.core.byteflow:stack ['$result58.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=4, lineno=68)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=4, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$x28.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$x28.2', '$i30.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4', '$y34.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4', '$y34.5', '$i36.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_SUBTRACT(arg=None, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4', '$38binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=5, lineno=69)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$40binary_subtract.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=2, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=5, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=5, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9', '$diff46.10']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_MULTIPLY(arg=None, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9', '$diff46.10', '$diff48.11']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=INPLACE_ADD(arg=None, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9', '$50binary_multiply.12']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=2, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$52inplace_add.13']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=JUMP_ABSOLUTE(arg=13, lineno=70)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$phi26.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=26 nstack_initial=2): {'$phi26.1'},
             State(pc_initial=58 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi26.1': State(pc_initial=24 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi26.0': {('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi24.0': {('$22get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi26.1': {('$24for_iter.2', State(pc_initial=24 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$22get_iter.8'},
             State(pc_initial=24 nstack_initial=1): {'$phi26.1': '$24for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$x6.1'}), (8, {'item': '$x6.1', 'res': '$8load_attr.2'}), (10, {'res': '$const10.3.2'}), (12, {'index': '$const10.3.2', 'target': '$8load_attr.2', 'res': '$12binary_subscr.4'}), (14, {'value': '$12binary_subscr.4'}), (16, {'res': '$16load_global.5'}), (18, {'res': '$dim18.6'}), (20, {'func': '$16load_global.5', 'args': ['$dim18.6'], 'res': '$20call_function.7'}), (22, {'value': '$20call_function.7', 'res': '$22get_iter.8'})), outgoing_phis={'$phi24.0': '$22get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$22get_iter.8',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'iterator': '$phi24.0', 'pair': '$24for_iter.1', 'indval': '$24for_iter.2', 'pred': '$24for_iter.3'}),), outgoing_phis={'$phi26.1': '$24for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 26: ('$phi24.0', '$24for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=2):
AdaptBlockInfo(insts=((26, {'value': '$phi26.1'}), (28, {'res': '$x28.2'}), (30, {'res': '$i30.3'}), (32, {'index': '$i30.3', 'target': '$x28.2', 'res': '$32binary_subscr.4'}), (34, {'res': '$y34.5'}), (36, {'res': '$i36.6'}), (38, {'index': '$i36.6', 'target': '$y34.5', 'res': '$38binary_subscr.7'}), (40, {'lhs': '$32binary_subscr.4', 'rhs': '$38binary_subscr.7', 'res': '$40binary_subtract.8'}), (42, {'value': '$40binary_subtract.8'}), (44, {'res': '$result44.9'}), (46, {'res': '$diff46.10'}), (48, {'res': '$diff48.11'}), (50, {'lhs': '$diff46.10', 'rhs': '$diff48.11', 'res': '$50binary_multiply.12'}), (52, {'lhs': '$result44.9', 'rhs': '$50binary_multiply.12', 'res': '$52inplace_add.13'}), (54, {'value': '$52inplace_add.13'}), (56, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$phi26.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$result58.0'}), (60, {'retval': '$result58.0', 'castval': '$60return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    $8load_attr.2 = getattr(value=x, attr=shape) ['$8load_attr.2', 'x']
    $const10.3.2 = const(int, 0)             ['$const10.3.2']
    dim = getitem(value=$8load_attr.2, index=$const10.3.2, fn=<built-in function getitem>) ['$8load_attr.2', '$const10.3.2', 'dim']
    $16load_global.5 = global(range: <class 'range'>) ['$16load_global.5']
    $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:67)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.5', '$20call_function.7', 'dim']
    $22get_iter.8 = getiter(value=$20call_function.7) ['$20call_function.7', '$22get_iter.8']
    $phi24.0 = $22get_iter.8                 ['$22get_iter.8', '$phi24.0']
    jump 24                                  []
label 24:
    $24for_iter.1 = iternext(value=$phi24.0) ['$24for_iter.1', '$phi24.0']
    $24for_iter.2 = pair_first(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.2']
    $24for_iter.3 = pair_second(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.3']
    $phi26.1 = $24for_iter.2                 ['$24for_iter.2', '$phi26.1']
    branch $24for_iter.3, 26, 58             ['$24for_iter.3']
label 26:
    i = $phi26.1                             ['$phi26.1', 'i']
    $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$32binary_subscr.4', 'i', 'x']
    $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$38binary_subscr.7', 'i', 'y']
    diff = $32binary_subscr.4 - $38binary_subscr.7 ['$32binary_subscr.4', '$38binary_subscr.7', 'diff']
    $50binary_multiply.12 = diff * diff      ['$50binary_multiply.12', 'diff', 'diff']
    $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.12, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_multiply.12', '$52inplace_add.13', 'result']
    result = $52inplace_add.13               ['$52inplace_add.13', 'result']
    jump 24                                  []
label 58:
    $60return_value.1 = cast(value=result)   ['$60return_value.1', 'result']
    return $60return_value.1                 ['$60return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591580730>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:67)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591580730>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591580730>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: diff = $32binary_subscr.4 - $38binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.12 = diff * diff
DEBUG:numba.core.ssa:on stmt: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $52inplace_add.13
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591580730>
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16load_global.5': [(<numba.core.ir.Assign object at 0x7f15914578e0>,
                                   0)],
             '$20call_function.7': [(<numba.core.ir.Assign object at 0x7f1591457be0>,
                                     0)],
             '$22get_iter.8': [(<numba.core.ir.Assign object at 0x7f1591457d00>,
                                0)],
             '$24for_iter.1': [(<numba.core.ir.Assign object at 0x7f1591457f10>,
                                24)],
             '$24for_iter.2': [(<numba.core.ir.Assign object at 0x7f1591474070>,
                                24)],
             '$24for_iter.3': [(<numba.core.ir.Assign object at 0x7f1591474190>,
                                24)],
             '$32binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f1591474850>,
                                     26)],
             '$38binary_subscr.7': [(<numba.core.ir.Assign object at 0x7f1591474c10>,
                                     26)],
             '$50binary_multiply.12': [(<numba.core.ir.Assign object at 0x7f1591475390>,
                                        26)],
             '$52inplace_add.13': [(<numba.core.ir.Assign object at 0x7f1591475510>,
                                    26)],
             '$60return_value.1': [(<numba.core.ir.Assign object at 0x7f1591475270>,
                                    58)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f1591456c80>,
                                0)],
             '$const10.3.2': [(<numba.core.ir.Assign object at 0x7f15914574c0>,
                               0)],
             '$phi24.0': [(<numba.core.ir.Assign object at 0x7f15914571c0>, 0)],
             '$phi26.1': [(<numba.core.ir.Assign object at 0x7f1591457e50>,
                           24)],
             'diff': [(<numba.core.ir.Assign object at 0x7f1591474d90>, 26)],
             'dim': [(<numba.core.ir.Assign object at 0x7f1591476020>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f1591474460>, 26)],
             'result': [(<numba.core.ir.Assign object at 0x7f15914573d0>, 0),
                        (<numba.core.ir.Assign object at 0x7f15914755d0>, 26)],
             'x': [(<numba.core.ir.Assign object at 0x7f15915647f0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f15914569e0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1591580730>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15914761a0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:67)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15914761a0>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15914761a0>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: diff = $32binary_subscr.4 - $38binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.12 = diff * diff
DEBUG:numba.core.ssa:on stmt: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $52inplace_add.13
DEBUG:numba.core.ssa:replaced with: result.1 = $52inplace_add.13
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15914761a0>
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15914760b0>],
             26: [<numba.core.ir.Assign object at 0x7f1591476410>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15914761a0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:67)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15914761a0>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15914761a0>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: diff = $32binary_subscr.4 - $38binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.12 = diff * diff
DEBUG:numba.core.ssa:on stmt: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 26
DEBUG:numba.core.ssa:idom 24 from label 26
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:find_def_from_top label 24
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 24
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:incoming_def result.1 = $52inplace_add.13
DEBUG:numba.core.ssa:replaced with: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$50binary_multiply.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.13
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15914761a0>
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def var='result' stmt=$60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 24 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:replaced with: $60return_value.1 = cast(value=result.2)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=224)
           2	LOAD_CONST(arg=1, lineno=244)
           4	STORE_FAST(arg=2, lineno=244)
           6	LOAD_CONST(arg=1, lineno=245)
           8	STORE_FAST(arg=3, lineno=245)
          10	LOAD_FAST(arg=0, lineno=246)
          12	LOAD_ATTR(arg=0, lineno=246)
          14	LOAD_CONST(arg=2, lineno=246)
          16	BINARY_SUBSCR(arg=None, lineno=246)
          18	STORE_FAST(arg=4, lineno=246)
          20	LOAD_GLOBAL(arg=1, lineno=247)
          22	LOAD_FAST(arg=4, lineno=247)
          24	CALL_FUNCTION(arg=1, lineno=247)
          26	GET_ITER(arg=None, lineno=247)
>         28	FOR_ITER(arg=26, lineno=247)
          30	STORE_FAST(arg=5, lineno=247)
          32	LOAD_FAST(arg=0, lineno=248)
          34	LOAD_FAST(arg=5, lineno=248)
          36	BINARY_SUBSCR(arg=None, lineno=248)
          38	LOAD_CONST(arg=2, lineno=248)
          40	COMPARE_OP(arg=3, lineno=248)
          42	STORE_FAST(arg=6, lineno=248)
          44	LOAD_FAST(arg=1, lineno=249)
          46	LOAD_FAST(arg=5, lineno=249)
          48	BINARY_SUBSCR(arg=None, lineno=249)
          50	LOAD_CONST(arg=2, lineno=249)
          52	COMPARE_OP(arg=3, lineno=249)
          54	STORE_FAST(arg=7, lineno=249)
          56	LOAD_FAST(arg=2, lineno=250)
          58	LOAD_FAST(arg=6, lineno=250)
          60	JUMP_IF_TRUE_OR_POP(arg=33, lineno=250)
          62	LOAD_FAST(arg=7, lineno=250)
>         64	INPLACE_ADD(arg=None, lineno=250)
          66	STORE_FAST(arg=2, lineno=250)
          68	LOAD_FAST(arg=3, lineno=251)
          70	LOAD_FAST(arg=6, lineno=251)
          72	JUMP_IF_FALSE_OR_POP(arg=39, lineno=251)
          74	LOAD_FAST(arg=7, lineno=251)
>         76	INPLACE_ADD(arg=None, lineno=251)
          78	STORE_FAST(arg=3, lineno=251)
          80	JUMP_ABSOLUTE(arg=15, lineno=251)
>         82	LOAD_FAST(arg=2, lineno=253)
          84	LOAD_CONST(arg=1, lineno=253)
          86	COMPARE_OP(arg=2, lineno=253)
          88	POP_JUMP_IF_FALSE(arg=48, lineno=253)
          90	LOAD_CONST(arg=1, lineno=254)
          92	RETURN_VALUE(arg=None, lineno=254)
>         94	LOAD_GLOBAL(arg=2, lineno=256)
          96	LOAD_METHOD(arg=3, lineno=256)
          98	LOAD_FAST(arg=3, lineno=256)
         100	LOAD_FAST(arg=2, lineno=256)
         102	BINARY_TRUE_DIVIDE(arg=None, lineno=256)
         104	CALL_METHOD(arg=1, lineno=256)
         106	UNARY_NEGATIVE(arg=None, lineno=256)
         108	RETURN_VALUE(arg=None, lineno=256)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=244)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=244)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=245)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=245)
DEBUG:numba.core.byteflow:stack ['$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=246)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_ATTR(arg=0, lineno=246)
DEBUG:numba.core.byteflow:stack ['$x10.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=246)
DEBUG:numba.core.byteflow:stack ['$12load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=246)
DEBUG:numba.core.byteflow:stack ['$12load_attr.3', '$const14.4.2']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=4, lineno=246)
DEBUG:numba.core.byteflow:stack ['$16binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=247)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=4, lineno=247)
DEBUG:numba.core.byteflow:stack ['$20load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_FUNCTION(arg=1, lineno=247)
DEBUG:numba.core.byteflow:stack ['$20load_global.6', '$dim22.7']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=GET_ITER(arg=None, lineno=247)
DEBUG:numba.core.byteflow:stack ['$24call_function.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=('$26get_iter.9',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi28.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=28 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=28, inst=FOR_ITER(arg=26, lineno=247)
DEBUG:numba.core.byteflow:stack ['$phi28.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=('$phi28.0', '$28for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=30 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=82 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=2, lineno=253)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=1, lineno=253)
DEBUG:numba.core.byteflow:stack ['$num_non_zero82.0']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=COMPARE_OP(arg=2, lineno=253)
DEBUG:numba.core.byteflow:stack ['$num_non_zero82.0', '$const84.1.1']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=POP_JUMP_IF_FALSE(arg=48, lineno=253)
DEBUG:numba.core.byteflow:stack ['$86compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=94, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=2), State(pc_initial=90 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0', '$phi30.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=5, lineno=247)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$phi30.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=5, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$x32.2']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$x32.2', '$i34.3']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$36binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=3, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$36binary_subscr.4', '$const38.5.2']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=6, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$40compare_op.6']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=5, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$y44.7']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$y44.7', '$i46.8']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=2, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$48binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=COMPARE_OP(arg=3, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$48binary_subscr.9', '$const50.10.2']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=7, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$52compare_op.11']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=6, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$num_non_zero56.12']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=JUMP_IF_TRUE_OR_POP(arg=33, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$num_non_zero56.12', '$x_true58.13']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=62, stack=('$phi30.0', '$num_non_zero56.12'), blockstack=(), npush=0), Edge(pc=64, stack=('$phi30.0', '$num_non_zero56.12', '$x_true58.13'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=62 nstack_initial=2), State(pc_initial=64 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=90 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=254)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=254)
DEBUG:numba.core.byteflow:stack ['$const90.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=62 nstack_initial=2), State(pc_initial=64 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=94 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_GLOBAL(arg=2, lineno=256)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_METHOD(arg=3, lineno=256)
DEBUG:numba.core.byteflow:stack ['$94load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=3, lineno=256)
DEBUG:numba.core.byteflow:stack ['$96load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=256)
DEBUG:numba.core.byteflow:stack ['$96load_method.1', '$num_equal98.2']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=256)
DEBUG:numba.core.byteflow:stack ['$96load_method.1', '$num_equal98.2', '$num_non_zero100.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=CALL_METHOD(arg=1, lineno=256)
DEBUG:numba.core.byteflow:stack ['$96load_method.1', '$102binary_true_divide.4']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=UNARY_NEGATIVE(arg=None, lineno=256)
DEBUG:numba.core.byteflow:stack ['$104call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=RETURN_VALUE(arg=None, lineno=256)
DEBUG:numba.core.byteflow:stack ['$106unary_negative.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=2), State(pc_initial=64 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi62.0', '$phi62.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=62 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=7, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$phi62.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=64, stack=('$phi62.0', '$phi62.1', '$y_true62.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=3), State(pc_initial=64 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi64.0', '$phi64.1', '$phi64.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=64 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=64, inst=INPLACE_ADD(arg=None, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$phi64.2']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=STORE_FAST(arg=2, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$64inplace_add.3']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=3, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi64.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=6, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$num_equal68.4']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=JUMP_IF_FALSE_OR_POP(arg=39, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$num_equal68.4', '$x_true70.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=74, stack=('$phi64.0', '$num_equal68.4'), blockstack=(), npush=0), Edge(pc=76, stack=('$phi64.0', '$num_equal68.4', '$x_true70.5'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=3), State(pc_initial=74 nstack_initial=2), State(pc_initial=76 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=74 nstack_initial=2), State(pc_initial=76 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi74.0', '$phi74.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=74 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=7, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi74.0', '$phi74.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=76, stack=('$phi74.0', '$phi74.1', '$y_true74.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=76 nstack_initial=3), State(pc_initial=76 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi76.0', '$phi76.1', '$phi76.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=76 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=76, inst=INPLACE_ADD(arg=None, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi76.0', '$phi76.1', '$phi76.2']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=STORE_FAST(arg=3, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi76.0', '$76inplace_add.3']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=JUMP_ABSOLUTE(arg=15, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi76.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=('$phi76.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=76 nstack_initial=3), State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=1): {'$phi28.0'},
             State(pc_initial=30 nstack_initial=2): {'$phi30.1'},
             State(pc_initial=62 nstack_initial=2): set(),
             State(pc_initial=64 nstack_initial=3): {'$phi64.2', '$phi64.1'},
             State(pc_initial=74 nstack_initial=2): set(),
             State(pc_initial=76 nstack_initial=3): {'$phi76.1', '$phi76.2'},
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi28.0': State(pc_initial=0 nstack_initial=0),
 '$phi30.1': State(pc_initial=28 nstack_initial=1),
 '$phi62.1': State(pc_initial=30 nstack_initial=2),
 '$phi64.1': State(pc_initial=30 nstack_initial=2),
 '$phi64.2': State(pc_initial=30 nstack_initial=2),
 '$phi74.1': State(pc_initial=64 nstack_initial=3),
 '$phi76.1': State(pc_initial=64 nstack_initial=3),
 '$phi76.2': State(pc_initial=74 nstack_initial=2)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi76.0', State(pc_initial=76 nstack_initial=3))},
             '$phi30.0': {('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))},
             '$phi62.0': {('$phi30.0', State(pc_initial=30 nstack_initial=2))},
             '$phi62.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.0': {('$phi30.0', State(pc_initial=30 nstack_initial=2)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi64.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2)),
                          ('$phi62.1', State(pc_initial=62 nstack_initial=2))},
             '$phi64.2': {('$x_true58.13',
                           State(pc_initial=30 nstack_initial=2)),
                          ('$y_true62.2',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi74.0': {('$phi64.0', State(pc_initial=64 nstack_initial=3))},
             '$phi74.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.0': {('$phi64.0', State(pc_initial=64 nstack_initial=3)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi76.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3)),
                          ('$phi74.1', State(pc_initial=74 nstack_initial=2))},
             '$phi76.2': {('$x_true70.5',
                           State(pc_initial=64 nstack_initial=3)),
                          ('$y_true74.2',
                           State(pc_initial=74 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=3)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=3)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))},
             '$phi62.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=3)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi62.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=3)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi64.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.2': {('$x_true58.13',
                           State(pc_initial=30 nstack_initial=2)),
                          ('$y_true62.2',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi74.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi74.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi76.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.2': {('$x_true70.5',
                           State(pc_initial=64 nstack_initial=3)),
                          ('$y_true74.2',
                           State(pc_initial=74 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))},
             '$phi62.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi64.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.2': {('$x_true58.13',
                           State(pc_initial=30 nstack_initial=2)),
                          ('$y_true62.2',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi74.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi74.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi76.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.2': {('$x_true70.5',
                           State(pc_initial=64 nstack_initial=3)),
                          ('$y_true74.2',
                           State(pc_initial=74 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))},
             '$phi62.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi64.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.2': {('$x_true58.13',
                           State(pc_initial=30 nstack_initial=2)),
                          ('$y_true62.2',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi74.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi74.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi76.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.2': {('$x_true70.5',
                           State(pc_initial=64 nstack_initial=3)),
                          ('$y_true74.2',
                           State(pc_initial=74 nstack_initial=2))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi28.0': {('$26get_iter.9', State(pc_initial=0 nstack_initial=0))},
 '$phi30.1': {('$28for_iter.2', State(pc_initial=28 nstack_initial=1))},
 '$phi64.1': {('$num_non_zero56.12', State(pc_initial=30 nstack_initial=2))},
 '$phi64.2': {('$x_true58.13', State(pc_initial=30 nstack_initial=2)),
              ('$y_true62.2', State(pc_initial=62 nstack_initial=2))},
 '$phi76.1': {('$num_equal68.4', State(pc_initial=64 nstack_initial=3))},
 '$phi76.2': {('$x_true70.5', State(pc_initial=64 nstack_initial=3)),
              ('$y_true74.2', State(pc_initial=74 nstack_initial=2))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi28.0': '$26get_iter.9'},
             State(pc_initial=28 nstack_initial=1): {'$phi30.1': '$28for_iter.2'},
             State(pc_initial=30 nstack_initial=2): {'$phi64.1': '$num_non_zero56.12',
                                                     '$phi64.2': '$x_true58.13'},
             State(pc_initial=62 nstack_initial=2): {'$phi64.2': '$y_true62.2'},
             State(pc_initial=64 nstack_initial=3): {'$phi76.1': '$num_equal68.4',
                                                     '$phi76.2': '$x_true70.5'},
             State(pc_initial=74 nstack_initial=2): {'$phi76.2': '$y_true74.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$const6.1.1'}), (8, {'value': '$const6.1.1'}), (10, {'res': '$x10.2'}), (12, {'item': '$x10.2', 'res': '$12load_attr.3'}), (14, {'res': '$const14.4.2'}), (16, {'index': '$const14.4.2', 'target': '$12load_attr.3', 'res': '$16binary_subscr.5'}), (18, {'value': '$16binary_subscr.5'}), (20, {'res': '$20load_global.6'}), (22, {'res': '$dim22.7'}), (24, {'func': '$20load_global.6', 'args': ['$dim22.7'], 'res': '$24call_function.8'}), (26, {'value': '$24call_function.8', 'res': '$26get_iter.9'})), outgoing_phis={'$phi28.0': '$26get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$26get_iter.9',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=1):
AdaptBlockInfo(insts=((28, {'iterator': '$phi28.0', 'pair': '$28for_iter.1', 'indval': '$28for_iter.2', 'pred': '$28for_iter.3'}),), outgoing_phis={'$phi30.1': '$28for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 30: ('$phi28.0', '$28for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=2):
AdaptBlockInfo(insts=((30, {'value': '$phi30.1'}), (32, {'res': '$x32.2'}), (34, {'res': '$i34.3'}), (36, {'index': '$i34.3', 'target': '$x32.2', 'res': '$36binary_subscr.4'}), (38, {'res': '$const38.5.2'}), (40, {'lhs': '$36binary_subscr.4', 'rhs': '$const38.5.2', 'res': '$40compare_op.6'}), (42, {'value': '$40compare_op.6'}), (44, {'res': '$y44.7'}), (46, {'res': '$i46.8'}), (48, {'index': '$i46.8', 'target': '$y44.7', 'res': '$48binary_subscr.9'}), (50, {'res': '$const50.10.2'}), (52, {'lhs': '$48binary_subscr.9', 'rhs': '$const50.10.2', 'res': '$52compare_op.11'}), (54, {'value': '$52compare_op.11'}), (56, {'res': '$num_non_zero56.12'}), (58, {'res': '$x_true58.13'}), (60, {'pred': '$x_true58.13'})), outgoing_phis={'$phi64.2': '$x_true58.13', '$phi64.1': '$num_non_zero56.12'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$phi30.0', '$num_non_zero56.12'), 64: ('$phi30.0', '$num_non_zero56.12', '$x_true58.13')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'res': '$y_true62.2'}),), outgoing_phis={'$phi64.2': '$y_true62.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi62.0', '$phi62.1', '$y_true62.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=64 nstack_initial=3):
AdaptBlockInfo(insts=((64, {'lhs': '$phi64.1', 'rhs': '$phi64.2', 'res': '$64inplace_add.3'}), (66, {'value': '$64inplace_add.3'}), (68, {'res': '$num_equal68.4'}), (70, {'res': '$x_true70.5'}), (72, {'pred': '$x_true70.5'})), outgoing_phis={'$phi76.1': '$num_equal68.4', '$phi76.2': '$x_true70.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi64.0', '$num_equal68.4'), 76: ('$phi64.0', '$num_equal68.4', '$x_true70.5')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=74 nstack_initial=2):
AdaptBlockInfo(insts=((74, {'res': '$y_true74.2'}),), outgoing_phis={'$phi76.2': '$y_true74.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={76: ('$phi74.0', '$phi74.1', '$y_true74.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=76 nstack_initial=3):
AdaptBlockInfo(insts=((76, {'lhs': '$phi76.1', 'rhs': '$phi76.2', 'res': '$76inplace_add.3'}), (78, {'value': '$76inplace_add.3'}), (80, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$phi76.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$num_non_zero82.0'}), (84, {'res': '$const84.1.1'}), (86, {'lhs': '$num_non_zero82.0', 'rhs': '$const84.1.1', 'res': '$86compare_op.2'}), (88, {'pred': '$86compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 94: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$const90.0.1'}), (92, {'retval': '$const90.0.1', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$94load_global.0'}), (96, {'item': '$94load_global.0', 'res': '$96load_method.1'}), (98, {'res': '$num_equal98.2'}), (100, {'res': '$num_non_zero100.3'}), (102, {'lhs': '$num_equal98.2', 'rhs': '$num_non_zero100.3', 'res': '$102binary_true_divide.4'}), (104, {'func': '$96load_method.1', 'args': ['$102binary_true_divide.4'], 'res': '$104call_method.5'}), (106, {'value': '$104call_method.5', 'res': '$106unary_negative.6'}), (108, {'retval': '$106unary_negative.6', 'castval': '$108return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    num_non_zero = const(float, 0.0)         ['num_non_zero']
    num_equal = const(float, 0.0)            ['num_equal']
    $12load_attr.3 = getattr(value=x, attr=shape) ['$12load_attr.3', 'x']
    $const14.4.2 = const(int, 0)             ['$const14.4.2']
    dim = getitem(value=$12load_attr.3, index=$const14.4.2, fn=<built-in function getitem>) ['$12load_attr.3', '$const14.4.2', 'dim']
    $20load_global.6 = global(range: <class 'range'>) ['$20load_global.6']
    $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.6', '$24call_function.8', 'dim']
    $26get_iter.9 = getiter(value=$24call_function.8) ['$24call_function.8', '$26get_iter.9']
    $phi28.0 = $26get_iter.9                 ['$26get_iter.9', '$phi28.0']
    jump 28                                  []
label 28:
    $28for_iter.1 = iternext(value=$phi28.0) ['$28for_iter.1', '$phi28.0']
    $28for_iter.2 = pair_first(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.2']
    $28for_iter.3 = pair_second(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.3']
    $phi30.1 = $28for_iter.2                 ['$28for_iter.2', '$phi30.1']
    branch $28for_iter.3, 30, 82             ['$28for_iter.3']
label 30:
    i = $phi30.1                             ['$phi30.1', 'i']
    $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$36binary_subscr.4', 'i', 'x']
    $const38.5.2 = const(int, 0)             ['$const38.5.2']
    x_true = $36binary_subscr.4 != $const38.5.2 ['$36binary_subscr.4', '$const38.5.2', 'x_true']
    $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$48binary_subscr.9', 'i', 'y']
    $const50.10.2 = const(int, 0)            ['$const50.10.2']
    y_true = $48binary_subscr.9 != $const50.10.2 ['$48binary_subscr.9', '$const50.10.2', 'y_true']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None) ['$60pred', 'bool60', 'x_true']
    $phi64.2 = x_true                        ['$phi64.2', 'x_true']
    $phi64.1 = num_non_zero                  ['$phi64.1', 'num_non_zero']
    branch $60pred, 64, 62                   ['$60pred']
label 62:
    $phi64.2 = y_true                        ['$phi64.2', 'y_true']
    jump 64                                  []
label 64:
    num_non_zero = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined) ['$phi64.1', '$phi64.2', 'num_non_zero']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None) ['$72pred', 'bool72', 'x_true']
    $phi76.1 = num_equal                     ['$phi76.1', 'num_equal']
    $phi76.2 = x_true                        ['$phi76.2', 'x_true']
    branch $72pred, 74, 76                   ['$72pred']
label 74:
    $phi76.2 = y_true                        ['$phi76.2', 'y_true']
    jump 76                                  []
label 76:
    num_equal = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined) ['$phi76.1', '$phi76.2', 'num_equal']
    jump 28                                  []
label 82:
    $const84.1.1 = const(float, 0.0)         ['$const84.1.1']
    $86compare_op.2 = num_non_zero == $const84.1.1 ['$86compare_op.2', '$const84.1.1', 'num_non_zero']
    bool88 = global(bool: <class 'bool'>)    ['bool88']
    $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None) ['$86compare_op.2', '$88pred', 'bool88']
    branch $88pred, 90, 94                   ['$88pred']
label 90:
    $const90.0.1 = const(float, 0.0)         ['$const90.0.1']
    $92return_value.1 = cast(value=$const90.0.1) ['$92return_value.1', '$const90.0.1']
    return $92return_value.1                 ['$92return_value.1']
label 94:
    $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$94load_global.0']
    $96load_method.1 = getattr(value=$94load_global.0, attr=log2) ['$94load_global.0', '$96load_method.1']
    $102binary_true_divide.4 = num_equal / num_non_zero ['$102binary_true_divide.4', 'num_equal', 'num_non_zero']
    $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_true_divide.4', '$104call_method.5', '$96load_method.1']
    $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5) ['$104call_method.5', '$106unary_negative.6']
    $108return_value.7 = cast(value=$106unary_negative.6) ['$106unary_negative.6', '$108return_value.7']
    return $108return_value.7                ['$108return_value.7']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914293f0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914293f0>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914293f0>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914293f0>
DEBUG:numba.core.ssa:on stmt: $phi64.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block analysis pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914293f0>
DEBUG:numba.core.ssa:on stmt: num_non_zero = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block analysis pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914293f0>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block analysis pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914293f0>
DEBUG:numba.core.ssa:on stmt: num_equal = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914293f0>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block analysis pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914293f0>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914293f0>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal / num_non_zero
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102binary_true_divide.4': [(<numba.core.ir.Assign object at 0x7f15914295a0>,
                                           94)],
             '$104call_method.5': [(<numba.core.ir.Assign object at 0x7f1591429780>,
                                    94)],
             '$106unary_negative.6': [(<numba.core.ir.Assign object at 0x7f1591429870>,
                                       94)],
             '$108return_value.7': [(<numba.core.ir.Assign object at 0x7f15914299f0>,
                                     94)],
             '$12load_attr.3': [(<numba.core.ir.Assign object at 0x7f15916091b0>,
                                 0)],
             '$20load_global.6': [(<numba.core.ir.Assign object at 0x7f1591609750>,
                                   0)],
             '$24call_function.8': [(<numba.core.ir.Assign object at 0x7f1591609a50>,
                                     0)],
             '$26get_iter.9': [(<numba.core.ir.Assign object at 0x7f1591609b70>,
                                0)],
             '$28for_iter.1': [(<numba.core.ir.Assign object at 0x7f1591609d20>,
                                28)],
             '$28for_iter.2': [(<numba.core.ir.Assign object at 0x7f1591609e40>,
                                28)],
             '$28for_iter.3': [(<numba.core.ir.Assign object at 0x7f1591609f60>,
                                28)],
             '$36binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f159160a620>,
                                     30)],
             '$48binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f159160ae00>,
                                     30)],
             '$60pred': [(<numba.core.ir.Assign object at 0x7f159160b6d0>, 30)],
             '$72pred': [(<numba.core.ir.Assign object at 0x7f159160bfd0>, 64)],
             '$86compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591428760>,
                                  82)],
             '$88pred': [(<numba.core.ir.Assign object at 0x7f15914289d0>, 82)],
             '$92return_value.1': [(<numba.core.ir.Assign object at 0x7f1591428d90>,
                                    90)],
             '$94load_global.0': [(<numba.core.ir.Assign object at 0x7f1591429030>,
                                   94)],
             '$96load_method.1': [(<numba.core.ir.Assign object at 0x7f15914291b0>,
                                   94)],
             '$const14.4.2': [(<numba.core.ir.Assign object at 0x7f1591609330>,
                               0)],
             '$const38.5.2': [(<numba.core.ir.Assign object at 0x7f159160a770>,
                               30)],
             '$const50.10.2': [(<numba.core.ir.Assign object at 0x7f159160af50>,
                                30)],
             '$const84.1.1': [(<numba.core.ir.Assign object at 0x7f1591428580>,
                               82)],
             '$const90.0.1': [(<numba.core.ir.Assign object at 0x7f1591428c10>,
                               90)],
             '$phi28.0': [(<numba.core.ir.Assign object at 0x7f1591608d00>, 0)],
             '$phi30.1': [(<numba.core.ir.Assign object at 0x7f1591609c60>,
                           28)],
             '$phi64.1': [(<numba.core.ir.Assign object at 0x7f159160aaa0>,
                           30)],
             '$phi64.2': [(<numba.core.ir.Assign object at 0x7f159160a3e0>, 30),
                          (<numba.core.ir.Assign object at 0x7f15916088b0>,
                           62)],
             '$phi76.1': [(<numba.core.ir.Assign object at 0x7f159160bb80>,
                           64)],
             '$phi76.2': [(<numba.core.ir.Assign object at 0x7f159160bca0>, 64),
                          (<numba.core.ir.Assign object at 0x7f159160b910>,
                           74)],
             'bool60': [(<numba.core.ir.Assign object at 0x7f159160b5b0>, 30)],
             'bool72': [(<numba.core.ir.Assign object at 0x7f159160beb0>, 64)],
             'bool88': [(<numba.core.ir.Assign object at 0x7f15914288b0>, 82)],
             'dim': [(<numba.core.ir.Assign object at 0x7f159142a2f0>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f159160a230>, 30)],
             'num_equal': [(<numba.core.ir.Assign object at 0x7f1591608df0>, 0),
                           (<numba.core.ir.Assign object at 0x7f1591428520>,
                            76)],
             'num_non_zero': [(<numba.core.ir.Assign object at 0x7f1591608b50>,
                               0),
                              (<numba.core.ir.Assign object at 0x7f159160ba60>,
                               64)],
             'x': [(<numba.core.ir.Assign object at 0x7f1591608910>, 0)],
             'x_true': [(<numba.core.ir.Assign object at 0x7f159160a920>, 30)],
             'y': [(<numba.core.ir.Assign object at 0x7f15916089d0>, 0)],
             'y_true': [(<numba.core.ir.Assign object at 0x7f159160b100>, 30)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15914293f0>
DEBUG:numba.core.ssa:Fix SSA violator on var num_non_zero
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: num_non_zero
DEBUG:numba.core.ssa:replaced with: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: $phi64.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: num_non_zero = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: num_equal = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal / num_non_zero
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f159142aa40>],
             64: [<numba.core.ir.Assign object at 0x7f159142afb0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero
DEBUG:numba.core.ssa:find_def var='num_non_zero' stmt=$phi64.1 = num_non_zero
DEBUG:numba.core.ssa:find_def_from_top label 30
DEBUG:numba.core.ssa:idom 28 from label 30
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:find_def_from_top label 28
DEBUG:numba.core.ssa:insert phi node num_non_zero.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 76
DEBUG:numba.core.ssa:find_def_from_top label 76
DEBUG:numba.core.ssa:idom 64 from label 76
DEBUG:numba.core.ssa:find_def_from_bottom label 64
DEBUG:numba.core.ssa:incoming_def num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: $phi64.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: num_equal = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero == $const84.1.1
DEBUG:numba.core.ssa:find_def var='num_non_zero' stmt=$86compare_op.2 = num_non_zero == $const84.1.1
DEBUG:numba.core.ssa:find_def_from_top label 82
DEBUG:numba.core.ssa:idom 28 from label 82
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429d80>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal / num_non_zero
DEBUG:numba.core.ssa:find_def var='num_non_zero' stmt=$102binary_true_divide.4 = num_equal / num_non_zero
DEBUG:numba.core.ssa:find_def_from_top label 94
DEBUG:numba.core.ssa:idom 82 from label 94
DEBUG:numba.core.ssa:find_def_from_bottom label 82
DEBUG:numba.core.ssa:find_def_from_top label 82
DEBUG:numba.core.ssa:idom 28 from label 82
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $102binary_true_divide.4 = num_equal / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Fix SSA violator on var num_equal
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: num_equal
DEBUG:numba.core.ssa:replaced with: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: num_non_zero.2 = phi(incoming_values=[Var(num_non_zero, distances.py:244), Var(num_non_zero.1, distances.py:250)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: $phi64.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: num_equal = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f159142b220>],
             76: [<numba.core.ir.Assign object at 0x7f159142b1c0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b430>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b430>
DEBUG:numba.core.ssa:on stmt: num_non_zero.2 = phi(incoming_values=[Var(num_non_zero, distances.py:244), Var(num_non_zero.1, distances.py:250)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b430>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b430>
DEBUG:numba.core.ssa:on stmt: $phi64.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b430>
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal
DEBUG:numba.core.ssa:find_def var='num_equal' stmt=$phi76.1 = num_equal
DEBUG:numba.core.ssa:find_def_from_top label 64
DEBUG:numba.core.ssa:idom 30 from label 64
DEBUG:numba.core.ssa:find_def_from_bottom label 30
DEBUG:numba.core.ssa:find_def_from_top label 30
DEBUG:numba.core.ssa:idom 28 from label 30
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:find_def_from_top label 28
DEBUG:numba.core.ssa:insert phi node num_equal.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 76
DEBUG:numba.core.ssa:incoming_def num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: $phi76.1 = num_equal.2
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b430>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b430>
DEBUG:numba.core.ssa:on stmt: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b430>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b430>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b430>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal / num_non_zero.2
DEBUG:numba.core.ssa:find_def var='num_equal' stmt=$102binary_true_divide.4 = num_equal / num_non_zero.2
DEBUG:numba.core.ssa:find_def_from_top label 94
DEBUG:numba.core.ssa:idom 82 from label 94
DEBUG:numba.core.ssa:find_def_from_bottom label 82
DEBUG:numba.core.ssa:find_def_from_top label 82
DEBUG:numba.core.ssa:idom 28 from label 82
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $102binary_true_divide.4 = num_equal.2 / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Fix SSA violator on var $phi64.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142ace0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142ace0>
DEBUG:numba.core.ssa:on stmt: num_equal.2 = phi(incoming_values=[Var(num_equal, distances.py:245), Var(num_equal.1, distances.py:251)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: num_non_zero.2 = phi(incoming_values=[Var(num_non_zero, distances.py:244), Var(num_non_zero.1, distances.py:250)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142ace0>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:first assign: $phi64.2
DEBUG:numba.core.ssa:replaced with: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142ace0>
DEBUG:numba.core.ssa:on stmt: $phi64.2 = y_true
DEBUG:numba.core.ssa:replaced with: $phi64.2.1 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142ace0>
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal.2
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142ace0>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142ace0>
DEBUG:numba.core.ssa:on stmt: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142ace0>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142ace0>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142ace0>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal.2 / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {30: [<numba.core.ir.Assign object at 0x7f159142aec0>],
             62: [<numba.core.ir.Assign object at 0x7f159142aaa0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b970>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b970>
DEBUG:numba.core.ssa:on stmt: num_equal.2 = phi(incoming_values=[Var(num_equal, distances.py:245), Var(num_equal.1, distances.py:251)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: num_non_zero.2 = phi(incoming_values=[Var(num_non_zero, distances.py:244), Var(num_non_zero.1, distances.py:250)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b970>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b970>
DEBUG:numba.core.ssa:on stmt: $phi64.2.1 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b970>
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='$phi64.2' stmt=num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 64
DEBUG:numba.core.ssa:insert phi node $phi64.2.2 = phi(incoming_values=[], incoming_blocks=[]) at 64
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:incoming_def $phi64.2.1 = y_true
DEBUG:numba.core.ssa:find_def_from_bottom label 30
DEBUG:numba.core.ssa:incoming_def $phi64.2 = x_true
DEBUG:numba.core.ssa:replaced with: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal.2
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b970>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b970>
DEBUG:numba.core.ssa:on stmt: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b970>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b970>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142b970>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal.2 / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Fix SSA violator on var $phi76.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b9d0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b9d0>
DEBUG:numba.core.ssa:on stmt: num_equal.2 = phi(incoming_values=[Var(num_equal, distances.py:245), Var(num_equal.1, distances.py:251)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: num_non_zero.2 = phi(incoming_values=[Var(num_non_zero, distances.py:244), Var(num_non_zero.1, distances.py:250)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b9d0>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b9d0>
DEBUG:numba.core.ssa:on stmt: $phi64.2.1 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b9d0>
DEBUG:numba.core.ssa:on stmt: $phi64.2.2 = phi(incoming_values=[Var($phi64.2.1, distances.py:250), Var($phi64.2, distances.py:250)], incoming_blocks=[62, 30])
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal.2
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:first assign: $phi76.2
DEBUG:numba.core.ssa:replaced with: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b9d0>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:replaced with: $phi76.2.1 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b9d0>
DEBUG:numba.core.ssa:on stmt: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b9d0>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b9d0>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b9d0>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal.2 / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {64: [<numba.core.ir.Assign object at 0x7f159142ac50>],
             74: [<numba.core.ir.Assign object at 0x7f1591428f10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142bca0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142bca0>
DEBUG:numba.core.ssa:on stmt: num_equal.2 = phi(incoming_values=[Var(num_equal, distances.py:245), Var(num_equal.1, distances.py:251)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: num_non_zero.2 = phi(incoming_values=[Var(num_non_zero, distances.py:244), Var(num_non_zero.1, distances.py:250)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142bca0>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142bca0>
DEBUG:numba.core.ssa:on stmt: $phi64.2.1 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142bca0>
DEBUG:numba.core.ssa:on stmt: $phi64.2.2 = phi(incoming_values=[Var($phi64.2.1, distances.py:250), Var($phi64.2, distances.py:250)], incoming_blocks=[62, 30])
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal.2
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142bca0>
DEBUG:numba.core.ssa:on stmt: $phi76.2.1 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142bca0>
DEBUG:numba.core.ssa:on stmt: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='$phi76.2' stmt=num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 76
DEBUG:numba.core.ssa:insert phi node $phi76.2.2 = phi(incoming_values=[], incoming_blocks=[]) at 76
DEBUG:numba.core.ssa:find_def_from_bottom label 64
DEBUG:numba.core.ssa:incoming_def $phi76.2 = x_true
DEBUG:numba.core.ssa:find_def_from_bottom label 74
DEBUG:numba.core.ssa:incoming_def $phi76.2.1 = y_true
DEBUG:numba.core.ssa:replaced with: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142bca0>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142bca0>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159142bca0>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal.2 / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=224)
           2	LOAD_CONST(arg=1, lineno=244)
           4	STORE_FAST(arg=2, lineno=244)
           6	LOAD_CONST(arg=1, lineno=245)
           8	STORE_FAST(arg=3, lineno=245)
          10	LOAD_FAST(arg=0, lineno=246)
          12	LOAD_ATTR(arg=0, lineno=246)
          14	LOAD_CONST(arg=2, lineno=246)
          16	BINARY_SUBSCR(arg=None, lineno=246)
          18	STORE_FAST(arg=4, lineno=246)
          20	LOAD_GLOBAL(arg=1, lineno=247)
          22	LOAD_FAST(arg=4, lineno=247)
          24	CALL_FUNCTION(arg=1, lineno=247)
          26	GET_ITER(arg=None, lineno=247)
>         28	FOR_ITER(arg=26, lineno=247)
          30	STORE_FAST(arg=5, lineno=247)
          32	LOAD_FAST(arg=0, lineno=248)
          34	LOAD_FAST(arg=5, lineno=248)
          36	BINARY_SUBSCR(arg=None, lineno=248)
          38	LOAD_CONST(arg=2, lineno=248)
          40	COMPARE_OP(arg=3, lineno=248)
          42	STORE_FAST(arg=6, lineno=248)
          44	LOAD_FAST(arg=1, lineno=249)
          46	LOAD_FAST(arg=5, lineno=249)
          48	BINARY_SUBSCR(arg=None, lineno=249)
          50	LOAD_CONST(arg=2, lineno=249)
          52	COMPARE_OP(arg=3, lineno=249)
          54	STORE_FAST(arg=7, lineno=249)
          56	LOAD_FAST(arg=2, lineno=250)
          58	LOAD_FAST(arg=6, lineno=250)
          60	JUMP_IF_TRUE_OR_POP(arg=33, lineno=250)
          62	LOAD_FAST(arg=7, lineno=250)
>         64	INPLACE_ADD(arg=None, lineno=250)
          66	STORE_FAST(arg=2, lineno=250)
          68	LOAD_FAST(arg=3, lineno=251)
          70	LOAD_FAST(arg=6, lineno=251)
          72	JUMP_IF_FALSE_OR_POP(arg=39, lineno=251)
          74	LOAD_FAST(arg=7, lineno=251)
>         76	INPLACE_ADD(arg=None, lineno=251)
          78	STORE_FAST(arg=3, lineno=251)
          80	JUMP_ABSOLUTE(arg=15, lineno=251)
>         82	LOAD_FAST(arg=2, lineno=253)
          84	LOAD_CONST(arg=1, lineno=253)
          86	COMPARE_OP(arg=2, lineno=253)
          88	POP_JUMP_IF_FALSE(arg=48, lineno=253)
          90	LOAD_CONST(arg=1, lineno=254)
          92	RETURN_VALUE(arg=None, lineno=254)
>         94	LOAD_GLOBAL(arg=2, lineno=256)
          96	LOAD_METHOD(arg=3, lineno=256)
          98	LOAD_FAST(arg=3, lineno=256)
         100	LOAD_FAST(arg=2, lineno=256)
         102	BINARY_TRUE_DIVIDE(arg=None, lineno=256)
         104	CALL_METHOD(arg=1, lineno=256)
         106	UNARY_NEGATIVE(arg=None, lineno=256)
         108	RETURN_VALUE(arg=None, lineno=256)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=244)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=244)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=245)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=245)
DEBUG:numba.core.byteflow:stack ['$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=246)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_ATTR(arg=0, lineno=246)
DEBUG:numba.core.byteflow:stack ['$x10.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=246)
DEBUG:numba.core.byteflow:stack ['$12load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=246)
DEBUG:numba.core.byteflow:stack ['$12load_attr.3', '$const14.4.2']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=4, lineno=246)
DEBUG:numba.core.byteflow:stack ['$16binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=247)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=4, lineno=247)
DEBUG:numba.core.byteflow:stack ['$20load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_FUNCTION(arg=1, lineno=247)
DEBUG:numba.core.byteflow:stack ['$20load_global.6', '$dim22.7']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=GET_ITER(arg=None, lineno=247)
DEBUG:numba.core.byteflow:stack ['$24call_function.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=('$26get_iter.9',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi28.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=28 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=28, inst=FOR_ITER(arg=26, lineno=247)
DEBUG:numba.core.byteflow:stack ['$phi28.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=('$phi28.0', '$28for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=30 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=82 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=2, lineno=253)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=1, lineno=253)
DEBUG:numba.core.byteflow:stack ['$num_non_zero82.0']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=COMPARE_OP(arg=2, lineno=253)
DEBUG:numba.core.byteflow:stack ['$num_non_zero82.0', '$const84.1.1']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=POP_JUMP_IF_FALSE(arg=48, lineno=253)
DEBUG:numba.core.byteflow:stack ['$86compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=94, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=2), State(pc_initial=90 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0', '$phi30.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=5, lineno=247)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$phi30.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=5, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$x32.2']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$x32.2', '$i34.3']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$36binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=3, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$36binary_subscr.4', '$const38.5.2']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=6, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$40compare_op.6']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=5, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$y44.7']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$y44.7', '$i46.8']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=2, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$48binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=COMPARE_OP(arg=3, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$48binary_subscr.9', '$const50.10.2']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=7, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$52compare_op.11']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=6, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$num_non_zero56.12']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=JUMP_IF_TRUE_OR_POP(arg=33, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$num_non_zero56.12', '$x_true58.13']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=62, stack=('$phi30.0', '$num_non_zero56.12'), blockstack=(), npush=0), Edge(pc=64, stack=('$phi30.0', '$num_non_zero56.12', '$x_true58.13'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=62 nstack_initial=2), State(pc_initial=64 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=90 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=254)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=254)
DEBUG:numba.core.byteflow:stack ['$const90.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=62 nstack_initial=2), State(pc_initial=64 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=94 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_GLOBAL(arg=2, lineno=256)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_METHOD(arg=3, lineno=256)
DEBUG:numba.core.byteflow:stack ['$94load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=3, lineno=256)
DEBUG:numba.core.byteflow:stack ['$96load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=2, lineno=256)
DEBUG:numba.core.byteflow:stack ['$96load_method.1', '$num_equal98.2']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=256)
DEBUG:numba.core.byteflow:stack ['$96load_method.1', '$num_equal98.2', '$num_non_zero100.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=CALL_METHOD(arg=1, lineno=256)
DEBUG:numba.core.byteflow:stack ['$96load_method.1', '$102binary_true_divide.4']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=UNARY_NEGATIVE(arg=None, lineno=256)
DEBUG:numba.core.byteflow:stack ['$104call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=RETURN_VALUE(arg=None, lineno=256)
DEBUG:numba.core.byteflow:stack ['$106unary_negative.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=2), State(pc_initial=64 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi62.0', '$phi62.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=62 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=7, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$phi62.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=64, stack=('$phi62.0', '$phi62.1', '$y_true62.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=3), State(pc_initial=64 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi64.0', '$phi64.1', '$phi64.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=64 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=64, inst=INPLACE_ADD(arg=None, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$phi64.2']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=STORE_FAST(arg=2, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$64inplace_add.3']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=3, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi64.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=6, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$num_equal68.4']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=JUMP_IF_FALSE_OR_POP(arg=39, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$num_equal68.4', '$x_true70.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=74, stack=('$phi64.0', '$num_equal68.4'), blockstack=(), npush=0), Edge(pc=76, stack=('$phi64.0', '$num_equal68.4', '$x_true70.5'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=3), State(pc_initial=74 nstack_initial=2), State(pc_initial=76 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=74 nstack_initial=2), State(pc_initial=76 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi74.0', '$phi74.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=74 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=7, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi74.0', '$phi74.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=76, stack=('$phi74.0', '$phi74.1', '$y_true74.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=76 nstack_initial=3), State(pc_initial=76 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi76.0', '$phi76.1', '$phi76.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=76 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=76, inst=INPLACE_ADD(arg=None, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi76.0', '$phi76.1', '$phi76.2']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=STORE_FAST(arg=3, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi76.0', '$76inplace_add.3']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=JUMP_ABSOLUTE(arg=15, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi76.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=('$phi76.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=76 nstack_initial=3), State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=1): {'$phi28.0'},
             State(pc_initial=30 nstack_initial=2): {'$phi30.1'},
             State(pc_initial=62 nstack_initial=2): set(),
             State(pc_initial=64 nstack_initial=3): {'$phi64.2', '$phi64.1'},
             State(pc_initial=74 nstack_initial=2): set(),
             State(pc_initial=76 nstack_initial=3): {'$phi76.1', '$phi76.2'},
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi28.0': State(pc_initial=0 nstack_initial=0),
 '$phi30.1': State(pc_initial=28 nstack_initial=1),
 '$phi62.1': State(pc_initial=30 nstack_initial=2),
 '$phi64.1': State(pc_initial=30 nstack_initial=2),
 '$phi64.2': State(pc_initial=30 nstack_initial=2),
 '$phi74.1': State(pc_initial=64 nstack_initial=3),
 '$phi76.1': State(pc_initial=64 nstack_initial=3),
 '$phi76.2': State(pc_initial=74 nstack_initial=2)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi76.0', State(pc_initial=76 nstack_initial=3))},
             '$phi30.0': {('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))},
             '$phi62.0': {('$phi30.0', State(pc_initial=30 nstack_initial=2))},
             '$phi62.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.0': {('$phi30.0', State(pc_initial=30 nstack_initial=2)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi64.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2)),
                          ('$phi62.1', State(pc_initial=62 nstack_initial=2))},
             '$phi64.2': {('$x_true58.13',
                           State(pc_initial=30 nstack_initial=2)),
                          ('$y_true62.2',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi74.0': {('$phi64.0', State(pc_initial=64 nstack_initial=3))},
             '$phi74.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.0': {('$phi64.0', State(pc_initial=64 nstack_initial=3)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi76.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3)),
                          ('$phi74.1', State(pc_initial=74 nstack_initial=2))},
             '$phi76.2': {('$x_true70.5',
                           State(pc_initial=64 nstack_initial=3)),
                          ('$y_true74.2',
                           State(pc_initial=74 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=3)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=3)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))},
             '$phi62.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=3)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi62.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=3)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi64.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.2': {('$x_true58.13',
                           State(pc_initial=30 nstack_initial=2)),
                          ('$y_true62.2',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi74.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=2))},
             '$phi74.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi76.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.2': {('$x_true70.5',
                           State(pc_initial=64 nstack_initial=3)),
                          ('$y_true74.2',
                           State(pc_initial=74 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))},
             '$phi62.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi64.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.2': {('$x_true58.13',
                           State(pc_initial=30 nstack_initial=2)),
                          ('$y_true62.2',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi74.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi74.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi76.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.2': {('$x_true70.5',
                           State(pc_initial=64 nstack_initial=3)),
                          ('$y_true74.2',
                           State(pc_initial=74 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))},
             '$phi62.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi64.1': {('$num_non_zero56.12',
                           State(pc_initial=30 nstack_initial=2))},
             '$phi64.2': {('$x_true58.13',
                           State(pc_initial=30 nstack_initial=2)),
                          ('$y_true62.2',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi74.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi74.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi76.1': {('$num_equal68.4',
                           State(pc_initial=64 nstack_initial=3))},
             '$phi76.2': {('$x_true70.5',
                           State(pc_initial=64 nstack_initial=3)),
                          ('$y_true74.2',
                           State(pc_initial=74 nstack_initial=2))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi28.0': {('$26get_iter.9', State(pc_initial=0 nstack_initial=0))},
 '$phi30.1': {('$28for_iter.2', State(pc_initial=28 nstack_initial=1))},
 '$phi64.1': {('$num_non_zero56.12', State(pc_initial=30 nstack_initial=2))},
 '$phi64.2': {('$x_true58.13', State(pc_initial=30 nstack_initial=2)),
              ('$y_true62.2', State(pc_initial=62 nstack_initial=2))},
 '$phi76.1': {('$num_equal68.4', State(pc_initial=64 nstack_initial=3))},
 '$phi76.2': {('$x_true70.5', State(pc_initial=64 nstack_initial=3)),
              ('$y_true74.2', State(pc_initial=74 nstack_initial=2))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi28.0': '$26get_iter.9'},
             State(pc_initial=28 nstack_initial=1): {'$phi30.1': '$28for_iter.2'},
             State(pc_initial=30 nstack_initial=2): {'$phi64.1': '$num_non_zero56.12',
                                                     '$phi64.2': '$x_true58.13'},
             State(pc_initial=62 nstack_initial=2): {'$phi64.2': '$y_true62.2'},
             State(pc_initial=64 nstack_initial=3): {'$phi76.1': '$num_equal68.4',
                                                     '$phi76.2': '$x_true70.5'},
             State(pc_initial=74 nstack_initial=2): {'$phi76.2': '$y_true74.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$const6.1.1'}), (8, {'value': '$const6.1.1'}), (10, {'res': '$x10.2'}), (12, {'item': '$x10.2', 'res': '$12load_attr.3'}), (14, {'res': '$const14.4.2'}), (16, {'index': '$const14.4.2', 'target': '$12load_attr.3', 'res': '$16binary_subscr.5'}), (18, {'value': '$16binary_subscr.5'}), (20, {'res': '$20load_global.6'}), (22, {'res': '$dim22.7'}), (24, {'func': '$20load_global.6', 'args': ['$dim22.7'], 'res': '$24call_function.8'}), (26, {'value': '$24call_function.8', 'res': '$26get_iter.9'})), outgoing_phis={'$phi28.0': '$26get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$26get_iter.9',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=1):
AdaptBlockInfo(insts=((28, {'iterator': '$phi28.0', 'pair': '$28for_iter.1', 'indval': '$28for_iter.2', 'pred': '$28for_iter.3'}),), outgoing_phis={'$phi30.1': '$28for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 30: ('$phi28.0', '$28for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=2):
AdaptBlockInfo(insts=((30, {'value': '$phi30.1'}), (32, {'res': '$x32.2'}), (34, {'res': '$i34.3'}), (36, {'index': '$i34.3', 'target': '$x32.2', 'res': '$36binary_subscr.4'}), (38, {'res': '$const38.5.2'}), (40, {'lhs': '$36binary_subscr.4', 'rhs': '$const38.5.2', 'res': '$40compare_op.6'}), (42, {'value': '$40compare_op.6'}), (44, {'res': '$y44.7'}), (46, {'res': '$i46.8'}), (48, {'index': '$i46.8', 'target': '$y44.7', 'res': '$48binary_subscr.9'}), (50, {'res': '$const50.10.2'}), (52, {'lhs': '$48binary_subscr.9', 'rhs': '$const50.10.2', 'res': '$52compare_op.11'}), (54, {'value': '$52compare_op.11'}), (56, {'res': '$num_non_zero56.12'}), (58, {'res': '$x_true58.13'}), (60, {'pred': '$x_true58.13'})), outgoing_phis={'$phi64.2': '$x_true58.13', '$phi64.1': '$num_non_zero56.12'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$phi30.0', '$num_non_zero56.12'), 64: ('$phi30.0', '$num_non_zero56.12', '$x_true58.13')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'res': '$y_true62.2'}),), outgoing_phis={'$phi64.2': '$y_true62.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi62.0', '$phi62.1', '$y_true62.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=64 nstack_initial=3):
AdaptBlockInfo(insts=((64, {'lhs': '$phi64.1', 'rhs': '$phi64.2', 'res': '$64inplace_add.3'}), (66, {'value': '$64inplace_add.3'}), (68, {'res': '$num_equal68.4'}), (70, {'res': '$x_true70.5'}), (72, {'pred': '$x_true70.5'})), outgoing_phis={'$phi76.1': '$num_equal68.4', '$phi76.2': '$x_true70.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi64.0', '$num_equal68.4'), 76: ('$phi64.0', '$num_equal68.4', '$x_true70.5')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=74 nstack_initial=2):
AdaptBlockInfo(insts=((74, {'res': '$y_true74.2'}),), outgoing_phis={'$phi76.2': '$y_true74.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={76: ('$phi74.0', '$phi74.1', '$y_true74.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=76 nstack_initial=3):
AdaptBlockInfo(insts=((76, {'lhs': '$phi76.1', 'rhs': '$phi76.2', 'res': '$76inplace_add.3'}), (78, {'value': '$76inplace_add.3'}), (80, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$phi76.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$num_non_zero82.0'}), (84, {'res': '$const84.1.1'}), (86, {'lhs': '$num_non_zero82.0', 'rhs': '$const84.1.1', 'res': '$86compare_op.2'}), (88, {'pred': '$86compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 94: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$const90.0.1'}), (92, {'retval': '$const90.0.1', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$94load_global.0'}), (96, {'item': '$94load_global.0', 'res': '$96load_method.1'}), (98, {'res': '$num_equal98.2'}), (100, {'res': '$num_non_zero100.3'}), (102, {'lhs': '$num_equal98.2', 'rhs': '$num_non_zero100.3', 'res': '$102binary_true_divide.4'}), (104, {'func': '$96load_method.1', 'args': ['$102binary_true_divide.4'], 'res': '$104call_method.5'}), (106, {'value': '$104call_method.5', 'res': '$106unary_negative.6'}), (108, {'retval': '$106unary_negative.6', 'castval': '$108return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    num_non_zero = const(float, 0.0)         ['num_non_zero']
    num_equal = const(float, 0.0)            ['num_equal']
    $12load_attr.3 = getattr(value=x, attr=shape) ['$12load_attr.3', 'x']
    $const14.4.2 = const(int, 0)             ['$const14.4.2']
    dim = getitem(value=$12load_attr.3, index=$const14.4.2, fn=<built-in function getitem>) ['$12load_attr.3', '$const14.4.2', 'dim']
    $20load_global.6 = global(range: <class 'range'>) ['$20load_global.6']
    $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.6', '$24call_function.8', 'dim']
    $26get_iter.9 = getiter(value=$24call_function.8) ['$24call_function.8', '$26get_iter.9']
    $phi28.0 = $26get_iter.9                 ['$26get_iter.9', '$phi28.0']
    jump 28                                  []
label 28:
    $28for_iter.1 = iternext(value=$phi28.0) ['$28for_iter.1', '$phi28.0']
    $28for_iter.2 = pair_first(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.2']
    $28for_iter.3 = pair_second(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.3']
    $phi30.1 = $28for_iter.2                 ['$28for_iter.2', '$phi30.1']
    branch $28for_iter.3, 30, 82             ['$28for_iter.3']
label 30:
    i = $phi30.1                             ['$phi30.1', 'i']
    $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$36binary_subscr.4', 'i', 'x']
    $const38.5.2 = const(int, 0)             ['$const38.5.2']
    x_true = $36binary_subscr.4 != $const38.5.2 ['$36binary_subscr.4', '$const38.5.2', 'x_true']
    $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$48binary_subscr.9', 'i', 'y']
    $const50.10.2 = const(int, 0)            ['$const50.10.2']
    y_true = $48binary_subscr.9 != $const50.10.2 ['$48binary_subscr.9', '$const50.10.2', 'y_true']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None) ['$60pred', 'bool60', 'x_true']
    $phi64.2 = x_true                        ['$phi64.2', 'x_true']
    $phi64.1 = num_non_zero                  ['$phi64.1', 'num_non_zero']
    branch $60pred, 64, 62                   ['$60pred']
label 62:
    $phi64.2 = y_true                        ['$phi64.2', 'y_true']
    jump 64                                  []
label 64:
    num_non_zero = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined) ['$phi64.1', '$phi64.2', 'num_non_zero']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None) ['$72pred', 'bool72', 'x_true']
    $phi76.1 = num_equal                     ['$phi76.1', 'num_equal']
    $phi76.2 = x_true                        ['$phi76.2', 'x_true']
    branch $72pred, 74, 76                   ['$72pred']
label 74:
    $phi76.2 = y_true                        ['$phi76.2', 'y_true']
    jump 76                                  []
label 76:
    num_equal = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined) ['$phi76.1', '$phi76.2', 'num_equal']
    jump 28                                  []
label 82:
    $const84.1.1 = const(float, 0.0)         ['$const84.1.1']
    $86compare_op.2 = num_non_zero == $const84.1.1 ['$86compare_op.2', '$const84.1.1', 'num_non_zero']
    bool88 = global(bool: <class 'bool'>)    ['bool88']
    $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None) ['$86compare_op.2', '$88pred', 'bool88']
    branch $88pred, 90, 94                   ['$88pred']
label 90:
    $const90.0.1 = const(float, 0.0)         ['$const90.0.1']
    $92return_value.1 = cast(value=$const90.0.1) ['$92return_value.1', '$const90.0.1']
    return $92return_value.1                 ['$92return_value.1']
label 94:
    $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$94load_global.0']
    $96load_method.1 = getattr(value=$94load_global.0, attr=log2) ['$94load_global.0', '$96load_method.1']
    $102binary_true_divide.4 = num_equal / num_non_zero ['$102binary_true_divide.4', 'num_equal', 'num_non_zero']
    $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_true_divide.4', '$104call_method.5', '$96load_method.1']
    $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5) ['$104call_method.5', '$106unary_negative.6']
    $108return_value.7 = cast(value=$106unary_negative.6) ['$106unary_negative.6', '$108return_value.7']
    return $108return_value.7                ['$108return_value.7']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591329270>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591329270>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591329270>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591329270>
DEBUG:numba.core.ssa:on stmt: $phi64.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block analysis pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591329270>
DEBUG:numba.core.ssa:on stmt: num_non_zero = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block analysis pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591329270>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block analysis pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591329270>
DEBUG:numba.core.ssa:on stmt: num_equal = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591329270>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block analysis pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591329270>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591329270>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal / num_non_zero
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102binary_true_divide.4': [(<numba.core.ir.Assign object at 0x7f1591329420>,
                                           94)],
             '$104call_method.5': [(<numba.core.ir.Assign object at 0x7f1591329600>,
                                    94)],
             '$106unary_negative.6': [(<numba.core.ir.Assign object at 0x7f15913296f0>,
                                       94)],
             '$108return_value.7': [(<numba.core.ir.Assign object at 0x7f1591329870>,
                                     94)],
             '$12load_attr.3': [(<numba.core.ir.Assign object at 0x7f159151d630>,
                                 0)],
             '$20load_global.6': [(<numba.core.ir.Assign object at 0x7f159151dbd0>,
                                   0)],
             '$24call_function.8': [(<numba.core.ir.Assign object at 0x7f159151ded0>,
                                     0)],
             '$26get_iter.9': [(<numba.core.ir.Assign object at 0x7f159151dff0>,
                                0)],
             '$28for_iter.1': [(<numba.core.ir.Assign object at 0x7f159151e1a0>,
                                28)],
             '$28for_iter.2': [(<numba.core.ir.Assign object at 0x7f159151e2c0>,
                                28)],
             '$28for_iter.3': [(<numba.core.ir.Assign object at 0x7f159151e3e0>,
                                28)],
             '$36binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f159151eaa0>,
                                     30)],
             '$48binary_subscr.9': [(<numba.core.ir.Assign object at 0x7f1591493160>,
                                     30)],
             '$60pred': [(<numba.core.ir.Assign object at 0x7f159151f1f0>, 30)],
             '$72pred': [(<numba.core.ir.Assign object at 0x7f159151faf0>, 64)],
             '$86compare_op.2': [(<numba.core.ir.Assign object at 0x7f15913285e0>,
                                  82)],
             '$88pred': [(<numba.core.ir.Assign object at 0x7f1591328850>, 82)],
             '$92return_value.1': [(<numba.core.ir.Assign object at 0x7f1591328c10>,
                                    90)],
             '$94load_global.0': [(<numba.core.ir.Assign object at 0x7f1591328eb0>,
                                   94)],
             '$96load_method.1': [(<numba.core.ir.Assign object at 0x7f1591329030>,
                                   94)],
             '$const14.4.2': [(<numba.core.ir.Assign object at 0x7f159151d7b0>,
                               0)],
             '$const38.5.2': [(<numba.core.ir.Assign object at 0x7f159151ebf0>,
                               30)],
             '$const50.10.2': [(<numba.core.ir.Assign object at 0x7f159142bdc0>,
                                30)],
             '$const84.1.1': [(<numba.core.ir.Assign object at 0x7f1591328430>,
                               82)],
             '$const90.0.1': [(<numba.core.ir.Assign object at 0x7f1591328a90>,
                               90)],
             '$phi28.0': [(<numba.core.ir.Assign object at 0x7f159151d0f0>, 0)],
             '$phi30.1': [(<numba.core.ir.Assign object at 0x7f159151e0e0>,
                           28)],
             '$phi64.1': [(<numba.core.ir.Assign object at 0x7f15914295a0>,
                           30)],
             '$phi64.2': [(<numba.core.ir.Assign object at 0x7f1591493580>, 30),
                          (<numba.core.ir.Assign object at 0x7f159151dd80>,
                           62)],
             '$phi76.1': [(<numba.core.ir.Assign object at 0x7f159151f6a0>,
                           64)],
             '$phi76.2': [(<numba.core.ir.Assign object at 0x7f159151f7c0>, 64),
                          (<numba.core.ir.Assign object at 0x7f159151fd30>,
                           74)],
             'bool60': [(<numba.core.ir.Assign object at 0x7f159151f0d0>, 30)],
             'bool72': [(<numba.core.ir.Assign object at 0x7f159151f9d0>, 64)],
             'bool88': [(<numba.core.ir.Assign object at 0x7f1591328730>, 82)],
             'dim': [(<numba.core.ir.Assign object at 0x7f159132a170>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f159151e6b0>, 30)],
             'num_equal': [(<numba.core.ir.Assign object at 0x7f159151d270>, 0),
                           (<numba.core.ir.Assign object at 0x7f1591328040>,
                            76)],
             'num_non_zero': [(<numba.core.ir.Assign object at 0x7f159151cfd0>,
                               0),
                              (<numba.core.ir.Assign object at 0x7f159151f580>,
                               64)],
             'x': [(<numba.core.ir.Assign object at 0x7f15915083a0>, 0)],
             'x_true': [(<numba.core.ir.Assign object at 0x7f159151eda0>, 30)],
             'y': [(<numba.core.ir.Assign object at 0x7f159151c910>, 0)],
             'y_true': [(<numba.core.ir.Assign object at 0x7f159142bbe0>, 30)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f159142abc0>
DEBUG:numba.core.ssa:Fix SSA violator on var num_non_zero
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: num_non_zero
DEBUG:numba.core.ssa:replaced with: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $phi64.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: num_non_zero = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: num_equal = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal / num_non_zero
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f159142b970>],
             64: [<numba.core.ir.Assign object at 0x7f1591429de0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero
DEBUG:numba.core.ssa:find_def var='num_non_zero' stmt=$phi64.1 = num_non_zero
DEBUG:numba.core.ssa:find_def_from_top label 30
DEBUG:numba.core.ssa:idom 28 from label 30
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:find_def_from_top label 28
DEBUG:numba.core.ssa:insert phi node num_non_zero.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 76
DEBUG:numba.core.ssa:find_def_from_top label 76
DEBUG:numba.core.ssa:idom 64 from label 76
DEBUG:numba.core.ssa:find_def_from_bottom label 64
DEBUG:numba.core.ssa:incoming_def num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $phi64.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: num_equal = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero == $const84.1.1
DEBUG:numba.core.ssa:find_def var='num_non_zero' stmt=$86compare_op.2 = num_non_zero == $const84.1.1
DEBUG:numba.core.ssa:find_def_from_top label 82
DEBUG:numba.core.ssa:idom 28 from label 82
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal / num_non_zero
DEBUG:numba.core.ssa:find_def var='num_non_zero' stmt=$102binary_true_divide.4 = num_equal / num_non_zero
DEBUG:numba.core.ssa:find_def_from_top label 94
DEBUG:numba.core.ssa:idom 82 from label 94
DEBUG:numba.core.ssa:find_def_from_bottom label 82
DEBUG:numba.core.ssa:find_def_from_top label 82
DEBUG:numba.core.ssa:idom 28 from label 82
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $102binary_true_divide.4 = num_equal / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Fix SSA violator on var num_equal
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: num_equal
DEBUG:numba.core.ssa:replaced with: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: num_non_zero.2 = phi(incoming_values=[Var(num_non_zero, distances.py:244), Var(num_non_zero.1, distances.py:250)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $phi64.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: num_equal = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f159142af80>],
             76: [<numba.core.ir.Assign object at 0x7f1591329270>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: num_non_zero.2 = phi(incoming_values=[Var(num_non_zero, distances.py:244), Var(num_non_zero.1, distances.py:250)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $phi64.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal
DEBUG:numba.core.ssa:find_def var='num_equal' stmt=$phi76.1 = num_equal
DEBUG:numba.core.ssa:find_def_from_top label 64
DEBUG:numba.core.ssa:idom 30 from label 64
DEBUG:numba.core.ssa:find_def_from_bottom label 30
DEBUG:numba.core.ssa:find_def_from_top label 30
DEBUG:numba.core.ssa:idom 28 from label 30
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:find_def_from_top label 28
DEBUG:numba.core.ssa:insert phi node num_equal.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 76
DEBUG:numba.core.ssa:incoming_def num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: $phi76.1 = num_equal.2
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal / num_non_zero.2
DEBUG:numba.core.ssa:find_def var='num_equal' stmt=$102binary_true_divide.4 = num_equal / num_non_zero.2
DEBUG:numba.core.ssa:find_def_from_top label 94
DEBUG:numba.core.ssa:idom 82 from label 94
DEBUG:numba.core.ssa:find_def_from_bottom label 82
DEBUG:numba.core.ssa:find_def_from_top label 82
DEBUG:numba.core.ssa:idom 28 from label 82
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $102binary_true_divide.4 = num_equal.2 / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Fix SSA violator on var $phi64.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: num_equal.2 = phi(incoming_values=[Var(num_equal, distances.py:245), Var(num_equal.1, distances.py:251)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: num_non_zero.2 = phi(incoming_values=[Var(num_non_zero, distances.py:244), Var(num_non_zero.1, distances.py:250)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:first assign: $phi64.2
DEBUG:numba.core.ssa:replaced with: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: $phi64.2 = y_true
DEBUG:numba.core.ssa:replaced with: $phi64.2.1 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal.2
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159142b4f0>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal.2 / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {30: [<numba.core.ir.Assign object at 0x7f1591429bd0>],
             62: [<numba.core.ir.Assign object at 0x7f159132aa70>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: num_equal.2 = phi(incoming_values=[Var(num_equal, distances.py:245), Var(num_equal.1, distances.py:251)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: num_non_zero.2 = phi(incoming_values=[Var(num_non_zero, distances.py:244), Var(num_non_zero.1, distances.py:250)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $phi64.2.1 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='$phi64.2' stmt=num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 64
DEBUG:numba.core.ssa:insert phi node $phi64.2.2 = phi(incoming_values=[], incoming_blocks=[]) at 64
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:incoming_def $phi64.2.1 = y_true
DEBUG:numba.core.ssa:find_def_from_bottom label 30
DEBUG:numba.core.ssa:incoming_def $phi64.2 = x_true
DEBUG:numba.core.ssa:replaced with: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal.2
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591428340>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal.2 / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Fix SSA violator on var $phi76.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: num_equal.2 = phi(incoming_values=[Var(num_equal, distances.py:245), Var(num_equal.1, distances.py:251)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: num_non_zero.2 = phi(incoming_values=[Var(num_non_zero, distances.py:244), Var(num_non_zero.1, distances.py:250)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $phi64.2.1 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $phi64.2.2 = phi(incoming_values=[Var($phi64.2.1, distances.py:250), Var($phi64.2, distances.py:250)], incoming_blocks=[62, 30])
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal.2
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:first assign: $phi76.2
DEBUG:numba.core.ssa:replaced with: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $phi76.2 = y_true
DEBUG:numba.core.ssa:replaced with: $phi76.2.1 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal.2 / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {64: [<numba.core.ir.Assign object at 0x7f1591428340>],
             74: [<numba.core.ir.Assign object at 0x7f1591329b70>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: num_non_zero = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: num_equal = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:246)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: num_equal.2 = phi(incoming_values=[Var(num_equal, distances.py:245), Var(num_equal.1, distances.py:251)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: num_non_zero.2 = phi(incoming_values=[Var(num_non_zero, distances.py:244), Var(num_non_zero.1, distances.py:250)], incoming_blocks=[0, 76])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: x_true = $36binary_subscr.4 != $const38.5.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.9 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.10.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: y_true = $48binary_subscr.9 != $const50.10.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60(x_true, func=bool60, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = x_true
DEBUG:numba.core.ssa:on stmt: $phi64.1 = num_non_zero.2
DEBUG:numba.core.ssa:on stmt: branch $60pred, 64, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $phi64.2.1 = y_true
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $phi64.2.2 = phi(incoming_values=[Var($phi64.2.1, distances.py:250), Var($phi64.2, distances.py:250)], incoming_blocks=[62, 30])
DEBUG:numba.core.ssa:on stmt: num_non_zero.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi64.1, rhs=$phi64.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72(x_true, func=bool72, args=(Var(x_true, distances.py:248),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi76.1 = num_equal.2
DEBUG:numba.core.ssa:on stmt: $phi76.2 = x_true
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $phi76.2.1 = y_true
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='$phi76.2' stmt=num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 76
DEBUG:numba.core.ssa:insert phi node $phi76.2.2 = phi(incoming_values=[], incoming_blocks=[]) at 76
DEBUG:numba.core.ssa:find_def_from_bottom label 64
DEBUG:numba.core.ssa:incoming_def $phi76.2 = x_true
DEBUG:numba.core.ssa:find_def_from_bottom label 74
DEBUG:numba.core.ssa:incoming_def $phi76.2.1 = y_true
DEBUG:numba.core.ssa:replaced with: num_equal.1 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$phi76.1, rhs=$phi76.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $const84.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $86compare_op.2 = num_non_zero.2 == $const84.1.1
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88($86compare_op.2, func=bool88, args=(Var($86compare_op.2, distances.py:253),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $const90.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $92return_value.1 = cast(value=$const90.0.1)
DEBUG:numba.core.ssa:on stmt: return $92return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591429f90>
DEBUG:numba.core.ssa:on stmt: $94load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $96load_method.1 = getattr(value=$94load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $102binary_true_divide.4 = num_equal.2 / num_non_zero.2
DEBUG:numba.core.ssa:on stmt: $104call_method.5 = call $96load_method.1($102binary_true_divide.4, func=$96load_method.1, args=[Var($102binary_true_divide.4, distances.py:256)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106unary_negative.6 = unary(fn=<built-in function neg>, value=$104call_method.5)
DEBUG:numba.core.ssa:on stmt: $108return_value.7 = cast(value=$106unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $108return_value.7
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=411)
           2	LOAD_CONST(arg=1, lineno=429)
           4	STORE_FAST(arg=2, lineno=429)
           6	LOAD_CONST(arg=1, lineno=430)
           8	STORE_FAST(arg=3, lineno=430)
          10	LOAD_CONST(arg=1, lineno=431)
          12	STORE_FAST(arg=4, lineno=431)
          14	LOAD_FAST(arg=0, lineno=432)
          16	LOAD_ATTR(arg=0, lineno=432)
          18	LOAD_CONST(arg=2, lineno=432)
          20	BINARY_SUBSCR(arg=None, lineno=432)
          22	STORE_FAST(arg=5, lineno=432)
          24	LOAD_GLOBAL(arg=1, lineno=433)
          26	LOAD_FAST(arg=5, lineno=433)
          28	CALL_FUNCTION(arg=1, lineno=433)
          30	GET_ITER(arg=None, lineno=433)
>         32	FOR_ITER(arg=32, lineno=433)
          34	STORE_FAST(arg=6, lineno=433)
          36	LOAD_FAST(arg=2, lineno=434)
          38	LOAD_FAST(arg=0, lineno=434)
          40	LOAD_FAST(arg=6, lineno=434)
          42	BINARY_SUBSCR(arg=None, lineno=434)
          44	LOAD_FAST(arg=1, lineno=434)
          46	LOAD_FAST(arg=6, lineno=434)
          48	BINARY_SUBSCR(arg=None, lineno=434)
          50	BINARY_MULTIPLY(arg=None, lineno=434)
          52	INPLACE_ADD(arg=None, lineno=434)
          54	STORE_FAST(arg=2, lineno=434)
          56	LOAD_FAST(arg=3, lineno=435)
          58	LOAD_FAST(arg=0, lineno=435)
          60	LOAD_FAST(arg=6, lineno=435)
          62	BINARY_SUBSCR(arg=None, lineno=435)
          64	LOAD_FAST(arg=0, lineno=435)
          66	LOAD_FAST(arg=6, lineno=435)
          68	BINARY_SUBSCR(arg=None, lineno=435)
          70	BINARY_MULTIPLY(arg=None, lineno=435)
          72	INPLACE_ADD(arg=None, lineno=435)
          74	STORE_FAST(arg=3, lineno=435)
          76	LOAD_FAST(arg=4, lineno=436)
          78	LOAD_FAST(arg=1, lineno=436)
          80	LOAD_FAST(arg=6, lineno=436)
          82	BINARY_SUBSCR(arg=None, lineno=436)
          84	LOAD_FAST(arg=1, lineno=436)
          86	LOAD_FAST(arg=6, lineno=436)
          88	BINARY_SUBSCR(arg=None, lineno=436)
          90	BINARY_MULTIPLY(arg=None, lineno=436)
          92	INPLACE_ADD(arg=None, lineno=436)
          94	STORE_FAST(arg=4, lineno=436)
          96	JUMP_ABSOLUTE(arg=17, lineno=436)
>         98	LOAD_FAST(arg=3, lineno=438)
         100	LOAD_CONST(arg=1, lineno=438)
         102	COMPARE_OP(arg=2, lineno=438)
         104	POP_JUMP_IF_FALSE(arg=60, lineno=438)
         106	LOAD_FAST(arg=4, lineno=438)
         108	LOAD_CONST(arg=1, lineno=438)
         110	COMPARE_OP(arg=2, lineno=438)
         112	POP_JUMP_IF_FALSE(arg=60, lineno=438)
         114	LOAD_CONST(arg=1, lineno=439)
         116	RETURN_VALUE(arg=None, lineno=439)
>        118	LOAD_FAST(arg=3, lineno=440)
         120	LOAD_CONST(arg=1, lineno=440)
         122	COMPARE_OP(arg=2, lineno=440)
         124	POP_JUMP_IF_TRUE(arg=68, lineno=440)
         126	LOAD_FAST(arg=4, lineno=440)
         128	LOAD_CONST(arg=1, lineno=440)
         130	COMPARE_OP(arg=2, lineno=440)
         132	POP_JUMP_IF_FALSE(arg=70, lineno=440)
>        134	LOAD_GLOBAL(arg=2, lineno=441)
         136	RETURN_VALUE(arg=None, lineno=441)
>        138	LOAD_FAST(arg=2, lineno=442)
         140	LOAD_CONST(arg=1, lineno=442)
         142	COMPARE_OP(arg=1, lineno=442)
         144	POP_JUMP_IF_FALSE(arg=76, lineno=442)
         146	LOAD_GLOBAL(arg=2, lineno=443)
         148	RETURN_VALUE(arg=None, lineno=443)
>        150	LOAD_GLOBAL(arg=3, lineno=445)
         152	LOAD_METHOD(arg=4, lineno=445)
         154	LOAD_FAST(arg=3, lineno=445)
         156	LOAD_FAST(arg=4, lineno=445)
         158	BINARY_MULTIPLY(arg=None, lineno=445)
         160	CALL_METHOD(arg=1, lineno=445)
         162	LOAD_FAST(arg=2, lineno=445)
         164	BINARY_TRUE_DIVIDE(arg=None, lineno=445)
         166	STORE_FAST(arg=2, lineno=445)
         168	LOAD_GLOBAL(arg=3, lineno=446)
         170	LOAD_METHOD(arg=5, lineno=446)
         172	LOAD_FAST(arg=2, lineno=446)
         174	CALL_METHOD(arg=1, lineno=446)
         176	RETURN_VALUE(arg=None, lineno=446)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=411)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=429)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=429)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=430)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=430)
DEBUG:numba.core.byteflow:stack ['$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=431)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_FAST(arg=4, lineno=431)
DEBUG:numba.core.byteflow:stack ['$const10.2.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=432)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_ATTR(arg=0, lineno=432)
DEBUG:numba.core.byteflow:stack ['$x14.3']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=432)
DEBUG:numba.core.byteflow:stack ['$16load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=432)
DEBUG:numba.core.byteflow:stack ['$16load_attr.4', '$const18.5.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=5, lineno=432)
DEBUG:numba.core.byteflow:stack ['$20binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_GLOBAL(arg=1, lineno=433)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=433)
DEBUG:numba.core.byteflow:stack ['$24load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=433)
DEBUG:numba.core.byteflow:stack ['$24load_global.7', '$dim26.8']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=433)
DEBUG:numba.core.byteflow:stack ['$28call_function.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.10',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=32, lineno=433)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=98, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=98 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=3, lineno=438)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=438)
DEBUG:numba.core.byteflow:stack ['$norm_x98.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=COMPARE_OP(arg=2, lineno=438)
DEBUG:numba.core.byteflow:stack ['$norm_x98.0', '$const100.1.1']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=POP_JUMP_IF_FALSE(arg=60, lineno=438)
DEBUG:numba.core.byteflow:stack ['$102compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=118, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=106 nstack_initial=0), State(pc_initial=118 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=6, lineno=433)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=6, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$x38.3']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$x38.3', '$i40.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$42binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=6, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$42binary_subscr.5', '$y44.6']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$42binary_subscr.5', '$y44.6', '$i46.7']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_MULTIPLY(arg=None, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$42binary_subscr.5', '$48binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=INPLACE_ADD(arg=None, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$50binary_multiply.9']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=2, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$52inplace_add.10']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=3, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=6, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$x58.12']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$x58.12', '$i60.13']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$62binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$62binary_subscr.14', '$x64.15']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$62binary_subscr.14', '$x64.15', '$i66.16']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BINARY_MULTIPLY(arg=None, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$62binary_subscr.14', '$68binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=INPLACE_ADD(arg=None, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$70binary_multiply.18']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_FAST(arg=3, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$72inplace_add.19']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=6, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$y78.21']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$y78.21', '$i80.22']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=1, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$82binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=6, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$82binary_subscr.23', '$y84.24']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=BINARY_SUBSCR(arg=None, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$82binary_subscr.23', '$y84.24', '$i86.25']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=BINARY_MULTIPLY(arg=None, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$82binary_subscr.23', '$88binary_subscr.26']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=INPLACE_ADD(arg=None, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$90binary_multiply.27']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=STORE_FAST(arg=4, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$92inplace_add.28']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=JUMP_ABSOLUTE(arg=17, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=106 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=438)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=438)
DEBUG:numba.core.byteflow:stack ['$norm_y106.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=COMPARE_OP(arg=2, lineno=438)
DEBUG:numba.core.byteflow:stack ['$norm_y106.0', '$const108.1.1']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=60, lineno=438)
DEBUG:numba.core.byteflow:stack ['$110compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=118, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=32 nstack_initial=1), State(pc_initial=114 nstack_initial=0), State(pc_initial=118 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=118 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=3, lineno=440)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_CONST(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$norm_x118.0']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=COMPARE_OP(arg=2, lineno=440)
DEBUG:numba.core.byteflow:stack ['$norm_x118.0', '$const120.1.1']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=POP_JUMP_IF_TRUE(arg=68, lineno=440)
DEBUG:numba.core.byteflow:stack ['$122compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=126, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=114 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=126 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=126 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=114 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=1, lineno=439)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=116, inst=RETURN_VALUE(arg=None, lineno=439)
DEBUG:numba.core.byteflow:stack ['$const114.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=126 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=126 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=126 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=4, lineno=440)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_CONST(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$norm_y126.0']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=COMPARE_OP(arg=2, lineno=440)
DEBUG:numba.core.byteflow:stack ['$norm_y126.0', '$const128.1.1']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=70, lineno=440)
DEBUG:numba.core.byteflow:stack ['$130compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=138, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=134 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=2, lineno=441)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=441)
DEBUG:numba.core.byteflow:stack ['$134load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=138 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=2, lineno=442)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=442)
DEBUG:numba.core.byteflow:stack ['$result138.0']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=COMPARE_OP(arg=1, lineno=442)
DEBUG:numba.core.byteflow:stack ['$result138.0', '$const140.1.1']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=76, lineno=442)
DEBUG:numba.core.byteflow:stack ['$142compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=150, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=146 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=2, lineno=443)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=148, inst=RETURN_VALUE(arg=None, lineno=443)
DEBUG:numba.core.byteflow:stack ['$146load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=150 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=150 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_GLOBAL(arg=3, lineno=445)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_METHOD(arg=4, lineno=445)
DEBUG:numba.core.byteflow:stack ['$150load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=3, lineno=445)
DEBUG:numba.core.byteflow:stack ['$152load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=4, lineno=445)
DEBUG:numba.core.byteflow:stack ['$152load_method.1', '$norm_x154.2']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=BINARY_MULTIPLY(arg=None, lineno=445)
DEBUG:numba.core.byteflow:stack ['$152load_method.1', '$norm_x154.2', '$norm_y156.3']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=CALL_METHOD(arg=1, lineno=445)
DEBUG:numba.core.byteflow:stack ['$152load_method.1', '$158binary_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=2, lineno=445)
DEBUG:numba.core.byteflow:stack ['$160call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=445)
DEBUG:numba.core.byteflow:stack ['$160call_method.5', '$result162.6']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=STORE_FAST(arg=2, lineno=445)
DEBUG:numba.core.byteflow:stack ['$164binary_true_divide.7']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_GLOBAL(arg=3, lineno=446)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_METHOD(arg=5, lineno=446)
DEBUG:numba.core.byteflow:stack ['$168load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=2, lineno=446)
DEBUG:numba.core.byteflow:stack ['$170load_method.9']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=CALL_METHOD(arg=1, lineno=446)
DEBUG:numba.core.byteflow:stack ['$170load_method.9', '$result172.10']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=RETURN_VALUE(arg=None, lineno=446)
DEBUG:numba.core.byteflow:stack ['$174call_method.11']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=118 nstack_initial=0): set(),
             State(pc_initial=126 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.10', State(pc_initial=0 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$30get_iter.10'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$const6.1.1'}), (8, {'value': '$const6.1.1'}), (10, {'res': '$const10.2.1'}), (12, {'value': '$const10.2.1'}), (14, {'res': '$x14.3'}), (16, {'item': '$x14.3', 'res': '$16load_attr.4'}), (18, {'res': '$const18.5.2'}), (20, {'index': '$const18.5.2', 'target': '$16load_attr.4', 'res': '$20binary_subscr.6'}), (22, {'value': '$20binary_subscr.6'}), (24, {'res': '$24load_global.7'}), (26, {'res': '$dim26.8'}), (28, {'func': '$24load_global.7', 'args': ['$dim26.8'], 'res': '$28call_function.9'}), (30, {'value': '$28call_function.9', 'res': '$30get_iter.10'})), outgoing_phis={'$phi32.0': '$30get_iter.10'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.10',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$result36.2'}), (38, {'res': '$x38.3'}), (40, {'res': '$i40.4'}), (42, {'index': '$i40.4', 'target': '$x38.3', 'res': '$42binary_subscr.5'}), (44, {'res': '$y44.6'}), (46, {'res': '$i46.7'}), (48, {'index': '$i46.7', 'target': '$y44.6', 'res': '$48binary_subscr.8'}), (50, {'lhs': '$42binary_subscr.5', 'rhs': '$48binary_subscr.8', 'res': '$50binary_multiply.9'}), (52, {'lhs': '$result36.2', 'rhs': '$50binary_multiply.9', 'res': '$52inplace_add.10'}), (54, {'value': '$52inplace_add.10'}), (56, {'res': '$norm_x56.11'}), (58, {'res': '$x58.12'}), (60, {'res': '$i60.13'}), (62, {'index': '$i60.13', 'target': '$x58.12', 'res': '$62binary_subscr.14'}), (64, {'res': '$x64.15'}), (66, {'res': '$i66.16'}), (68, {'index': '$i66.16', 'target': '$x64.15', 'res': '$68binary_subscr.17'}), (70, {'lhs': '$62binary_subscr.14', 'rhs': '$68binary_subscr.17', 'res': '$70binary_multiply.18'}), (72, {'lhs': '$norm_x56.11', 'rhs': '$70binary_multiply.18', 'res': '$72inplace_add.19'}), (74, {'value': '$72inplace_add.19'}), (76, {'res': '$norm_y76.20'}), (78, {'res': '$y78.21'}), (80, {'res': '$i80.22'}), (82, {'index': '$i80.22', 'target': '$y78.21', 'res': '$82binary_subscr.23'}), (84, {'res': '$y84.24'}), (86, {'res': '$i86.25'}), (88, {'index': '$i86.25', 'target': '$y84.24', 'res': '$88binary_subscr.26'}), (90, {'lhs': '$82binary_subscr.23', 'rhs': '$88binary_subscr.26', 'res': '$90binary_multiply.27'}), (92, {'lhs': '$norm_y76.20', 'rhs': '$90binary_multiply.27', 'res': '$92inplace_add.28'}), (94, {'value': '$92inplace_add.28'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$norm_x98.0'}), (100, {'res': '$const100.1.1'}), (102, {'lhs': '$norm_x98.0', 'rhs': '$const100.1.1', 'res': '$102compare_op.2'}), (104, {'pred': '$102compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 118: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$norm_y106.0'}), (108, {'res': '$const108.1.1'}), (110, {'lhs': '$norm_y106.0', 'rhs': '$const108.1.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 118: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$const114.0.1'}), (116, {'retval': '$const114.0.1', 'castval': '$116return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=((118, {'res': '$norm_x118.0'}), (120, {'res': '$const120.1.1'}), (122, {'lhs': '$norm_x118.0', 'rhs': '$const120.1.1', 'res': '$122compare_op.2'}), (124, {'pred': '$122compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={126: (), 134: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=126 nstack_initial=0):
AdaptBlockInfo(insts=((126, {'res': '$norm_y126.0'}), (128, {'res': '$const128.1.1'}), (130, {'lhs': '$norm_y126.0', 'rhs': '$const128.1.1', 'res': '$130compare_op.2'}), (132, {'pred': '$130compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 138: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$134load_global.0'}), (136, {'retval': '$134load_global.0', 'castval': '$136return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$result138.0'}), (140, {'res': '$const140.1.1'}), (142, {'lhs': '$result138.0', 'rhs': '$const140.1.1', 'res': '$142compare_op.2'}), (144, {'pred': '$142compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 150: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$146load_global.0'}), (148, {'retval': '$146load_global.0', 'castval': '$148return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=((150, {'res': '$150load_global.0'}), (152, {'item': '$150load_global.0', 'res': '$152load_method.1'}), (154, {'res': '$norm_x154.2'}), (156, {'res': '$norm_y156.3'}), (158, {'lhs': '$norm_x154.2', 'rhs': '$norm_y156.3', 'res': '$158binary_multiply.4'}), (160, {'func': '$152load_method.1', 'args': ['$158binary_multiply.4'], 'res': '$160call_method.5'}), (162, {'res': '$result162.6'}), (164, {'lhs': '$160call_method.5', 'rhs': '$result162.6', 'res': '$164binary_true_divide.7'}), (166, {'value': '$164binary_true_divide.7'}), (168, {'res': '$168load_global.8'}), (170, {'item': '$168load_global.8', 'res': '$170load_method.9'}), (172, {'res': '$result172.10'}), (174, {'func': '$170load_method.9', 'args': ['$result172.10'], 'res': '$174call_method.11'}), (176, {'retval': '$174call_method.11', 'castval': '$176return_value.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    norm_x = const(float, 0.0)               ['norm_x']
    norm_y = const(float, 0.0)               ['norm_y']
    $16load_attr.4 = getattr(value=x, attr=shape) ['$16load_attr.4', 'x']
    $const18.5.2 = const(int, 0)             ['$const18.5.2']
    dim = getitem(value=$16load_attr.4, index=$const18.5.2, fn=<built-in function getitem>) ['$16load_attr.4', '$const18.5.2', 'dim']
    $24load_global.7 = global(range: <class 'range'>) ['$24load_global.7']
    $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.7', '$28call_function.9', 'dim']
    $30get_iter.10 = getiter(value=$28call_function.9) ['$28call_function.9', '$30get_iter.10']
    $phi32.0 = $30get_iter.10                ['$30get_iter.10', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 98             ['$32for_iter.3']
label 34:
    i = $phi34.1                             ['$phi34.1', 'i']
    $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$42binary_subscr.5', 'i', 'x']
    $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$48binary_subscr.8', 'i', 'y']
    $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8 ['$42binary_subscr.5', '$48binary_subscr.8', '$50binary_multiply.9']
    $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_multiply.9', '$52inplace_add.10', 'result']
    result = $52inplace_add.10               ['$52inplace_add.10', 'result']
    $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$62binary_subscr.14', 'i', 'x']
    $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$68binary_subscr.17', 'i', 'x']
    $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17 ['$62binary_subscr.14', '$68binary_subscr.17', '$70binary_multiply.18']
    $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined) ['$70binary_multiply.18', '$72inplace_add.19', 'norm_x']
    norm_x = $72inplace_add.19               ['$72inplace_add.19', 'norm_x']
    $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$82binary_subscr.23', 'i', 'y']
    $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$88binary_subscr.26', 'i', 'y']
    $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26 ['$82binary_subscr.23', '$88binary_subscr.26', '$90binary_multiply.27']
    $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined) ['$90binary_multiply.27', '$92inplace_add.28', 'norm_y']
    norm_y = $92inplace_add.28               ['$92inplace_add.28', 'norm_y']
    jump 32                                  []
label 98:
    $const100.1.1 = const(float, 0.0)        ['$const100.1.1']
    $102compare_op.2 = norm_x == $const100.1.1 ['$102compare_op.2', '$const100.1.1', 'norm_x']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None) ['$102compare_op.2', '$104pred', 'bool104']
    branch $104pred, 106, 118                ['$104pred']
label 106:
    $const108.1.1 = const(float, 0.0)        ['$const108.1.1']
    $110compare_op.2 = norm_y == $const108.1.1 ['$110compare_op.2', '$const108.1.1', 'norm_y']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 118                ['$112pred']
label 114:
    $const114.0.1 = const(float, 0.0)        ['$const114.0.1']
    $116return_value.1 = cast(value=$const114.0.1) ['$116return_value.1', '$const114.0.1']
    return $116return_value.1                ['$116return_value.1']
label 118:
    $const120.1.1 = const(float, 0.0)        ['$const120.1.1']
    $122compare_op.2 = norm_x == $const120.1.1 ['$122compare_op.2', '$const120.1.1', 'norm_x']
    bool124 = global(bool: <class 'bool'>)   ['bool124']
    $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None) ['$122compare_op.2', '$124pred', 'bool124']
    branch $124pred, 134, 126                ['$124pred']
label 126:
    $const128.1.1 = const(float, 0.0)        ['$const128.1.1']
    $130compare_op.2 = norm_y == $const128.1.1 ['$130compare_op.2', '$const128.1.1', 'norm_y']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.2', '$132pred', 'bool132']
    branch $132pred, 134, 138                ['$132pred']
label 134:
    $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38) ['$134load_global.0']
    $136return_value.1 = cast(value=$134load_global.0) ['$134load_global.0', '$136return_value.1']
    return $136return_value.1                ['$136return_value.1']
label 138:
    $const140.1.1 = const(float, 0.0)        ['$const140.1.1']
    $142compare_op.2 = result <= $const140.1.1 ['$142compare_op.2', '$const140.1.1', 'result']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None) ['$142compare_op.2', '$144pred', 'bool144']
    branch $144pred, 146, 150                ['$144pred']
label 146:
    $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38) ['$146load_global.0']
    $148return_value.1 = cast(value=$146load_global.0) ['$146load_global.0', '$148return_value.1']
    return $148return_value.1                ['$148return_value.1']
label 150:
    $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$150load_global.0']
    $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt) ['$150load_global.0', '$152load_method.1']
    $158binary_multiply.4 = norm_x * norm_y  ['$158binary_multiply.4', 'norm_x', 'norm_y']
    $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_method.1', '$158binary_multiply.4', '$160call_method.5']
    $164binary_true_divide.7 = $160call_method.5 / result ['$160call_method.5', '$164binary_true_divide.7', 'result']
    result = $164binary_true_divide.7        ['$164binary_true_divide.7', 'result']
    $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$168load_global.8']
    $170load_method.9 = getattr(value=$168load_global.8, attr=log2) ['$168load_global.8', '$170load_method.9']
    $174call_method.11 = call $170load_method.9(result, func=$170load_method.9, args=[Var(result, distances.py:429)], kws=(), vararg=None, varkwarg=None, target=None) ['$170load_method.9', '$174call_method.11', 'result']
    $176return_value.12 = cast(value=$174call_method.11) ['$174call_method.11', '$176return_value.12']
    return $176return_value.12               ['$176return_value.12']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914ef7f0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914ef7f0>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914ef7f0>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914ef7f0>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block analysis pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914ef7f0>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block analysis pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914ef7f0>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914ef7f0>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block analysis pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914ef7f0>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block analysis pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914ef7f0>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914ef7f0>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block analysis pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914ef7f0>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15914ef7f0>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x * norm_y
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result
DEBUG:numba.core.ssa:on stmt: result = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result, func=$170load_method.9, args=[Var(result, distances.py:429)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591357e80>,
                                   98)],
             '$104pred': [(<numba.core.ir.Assign object at 0x7f15913573a0>,
                           98)],
             '$110compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591356c20>,
                                   106)],
             '$112pred': [(<numba.core.ir.Assign object at 0x7f1591356d10>,
                           106)],
             '$116return_value.1': [(<numba.core.ir.Assign object at 0x7f1591356620>,
                                     114)],
             '$122compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591356530>,
                                   118)],
             '$124pred': [(<numba.core.ir.Assign object at 0x7f1591355a50>,
                           118)],
             '$130compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591354550>,
                                   126)],
             '$132pred': [(<numba.core.ir.Assign object at 0x7f1591355240>,
                           126)],
             '$134load_global.0': [(<numba.core.ir.Assign object at 0x7f15913557e0>,
                                    134)],
             '$136return_value.1': [(<numba.core.ir.Assign object at 0x7f1591354430>,
                                     134)],
             '$142compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591354dc0>,
                                   138)],
             '$144pred': [(<numba.core.ir.Assign object at 0x7f15913545e0>,
                           138)],
             '$146load_global.0': [(<numba.core.ir.Assign object at 0x7f1591354130>,
                                    146)],
             '$148return_value.1': [(<numba.core.ir.Assign object at 0x7f1591354190>,
                                     146)],
             '$150load_global.0': [(<numba.core.ir.Assign object at 0x7f15913545b0>,
                                    150)],
             '$152load_method.1': [(<numba.core.ir.Assign object at 0x7f1591354940>,
                                    150)],
             '$158binary_multiply.4': [(<numba.core.ir.Assign object at 0x7f15915c1f00>,
                                        150)],
             '$160call_method.5': [(<numba.core.ir.Assign object at 0x7f15914eebf0>,
                                    150)],
             '$164binary_true_divide.7': [(<numba.core.ir.Assign object at 0x7f15914eedd0>,
                                           150)],
             '$168load_global.8': [(<numba.core.ir.Assign object at 0x7f15914eca90>,
                                    150)],
             '$16load_attr.4': [(<numba.core.ir.Assign object at 0x7f159136b130>,
                                 0)],
             '$170load_method.9': [(<numba.core.ir.Assign object at 0x7f15914efeb0>,
                                    150)],
             '$174call_method.11': [(<numba.core.ir.Assign object at 0x7f15914ef940>,
                                     150)],
             '$176return_value.12': [(<numba.core.ir.Assign object at 0x7f15914efc70>,
                                      150)],
             '$24load_global.7': [(<numba.core.ir.Assign object at 0x7f159136a230>,
                                   0)],
             '$28call_function.9': [(<numba.core.ir.Assign object at 0x7f159136a530>,
                                     0)],
             '$30get_iter.10': [(<numba.core.ir.Assign object at 0x7f159136a650>,
                                 0)],
             '$32for_iter.1': [(<numba.core.ir.Assign object at 0x7f159136a7a0>,
                                32)],
             '$32for_iter.2': [(<numba.core.ir.Assign object at 0x7f159136a8c0>,
                                32)],
             '$32for_iter.3': [(<numba.core.ir.Assign object at 0x7f1591369d50>,
                                32)],
             '$42binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1591369090>,
                                     34)],
             '$48binary_subscr.8': [(<numba.core.ir.Assign object at 0x7f1591368910>,
                                     34)],
             '$50binary_multiply.9': [(<numba.core.ir.Assign object at 0x7f1591368730>,
                                       34)],
             '$52inplace_add.10': [(<numba.core.ir.Assign object at 0x7f1591368580>,
                                    34)],
             '$62binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f1591368160>,
                                      34)],
             '$68binary_subscr.17': [(<numba.core.ir.Assign object at 0x7f15913699f0>,
                                      34)],
             '$70binary_multiply.18': [(<numba.core.ir.Assign object at 0x7f15913697e0>,
                                        34)],
             '$72inplace_add.19': [(<numba.core.ir.Assign object at 0x7f1591369600>,
                                    34)],
             '$82binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f1591357f10>,
                                      34)],
             '$88binary_subscr.26': [(<numba.core.ir.Assign object at 0x7f1591357df0>,
                                      34)],
             '$90binary_multiply.27': [(<numba.core.ir.Assign object at 0x7f1591357a60>,
                                        34)],
             '$92inplace_add.28': [(<numba.core.ir.Assign object at 0x7f1591357550>,
                                    34)],
             '$const100.1.1': [(<numba.core.ir.Assign object at 0x7f15913686d0>,
                                98)],
             '$const108.1.1': [(<numba.core.ir.Assign object at 0x7f1591357640>,
                                106)],
             '$const114.0.1': [(<numba.core.ir.Assign object at 0x7f1591356740>,
                                114)],
             '$const120.1.1': [(<numba.core.ir.Assign object at 0x7f1591356020>,
                                118)],
             '$const128.1.1': [(<numba.core.ir.Assign object at 0x7f1591355c30>,
                                126)],
             '$const140.1.1': [(<numba.core.ir.Assign object at 0x7f1591354eb0>,
                                138)],
             '$const18.5.2': [(<numba.core.ir.Assign object at 0x7f1591369c60>,
                               0)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x7f159136b4c0>, 0)],
             '$phi34.1': [(<numba.core.ir.Assign object at 0x7f159136a6b0>,
                           32)],
             'bool104': [(<numba.core.ir.Assign object at 0x7f1591357400>, 98)],
             'bool112': [(<numba.core.ir.Assign object at 0x7f1591356980>,
                          106)],
             'bool124': [(<numba.core.ir.Assign object at 0x7f1591355f30>,
                          118)],
             'bool132': [(<numba.core.ir.Assign object at 0x7f1591355450>,
                          126)],
             'bool144': [(<numba.core.ir.Assign object at 0x7f1591354c70>,
                          138)],
             'dim': [(<numba.core.ir.Assign object at 0x7f15914ee530>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f1591368cd0>, 34)],
             'norm_x': [(<numba.core.ir.Assign object at 0x7f159136b5e0>, 0),
                        (<numba.core.ir.Assign object at 0x7f1591369450>, 34)],
             'norm_y': [(<numba.core.ir.Assign object at 0x7f159136ae30>, 0),
                        (<numba.core.ir.Assign object at 0x7f1591357490>, 34)],
             'result': [(<numba.core.ir.Assign object at 0x7f159136b070>, 0),
                        (<numba.core.ir.Assign object at 0x7f1591368220>, 34),
                        (<numba.core.ir.Assign object at 0x7f15914eee90>, 150)],
             'x': [(<numba.core.ir.Assign object at 0x7f159136b880>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f159136afe0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f159136bbe0>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $52inplace_add.10
DEBUG:numba.core.ssa:replaced with: result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x * norm_y
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result
DEBUG:numba.core.ssa:on stmt: result = $164binary_true_divide.7
DEBUG:numba.core.ssa:replaced with: result.2 = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result, func=$170load_method.9, args=[Var(result, distances.py:429)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f159136b9a0>],
             34: [<numba.core.ir.Assign object at 0x7f15914ef7f0>],
             150: [<numba.core.ir.Assign object at 0x7f15914ef460>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node result.3 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:replaced with: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result <= $const140.1.1
DEBUG:numba.core.ssa:find_def var='result' stmt=$142compare_op.2 = result <= $const140.1.1
DEBUG:numba.core.ssa:find_def_from_top label 138
DEBUG:numba.core.ssa:idom 126 from label 138
DEBUG:numba.core.ssa:find_def_from_bottom label 126
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:idom 118 from label 126
DEBUG:numba.core.ssa:find_def_from_bottom label 118
DEBUG:numba.core.ssa:find_def_from_top label 118
DEBUG:numba.core.ssa:idom 98 from label 118
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $142compare_op.2 = result.3 <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x * norm_y
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result
DEBUG:numba.core.ssa:find_def var='result' stmt=$164binary_true_divide.7 = $160call_method.5 / result
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 138 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 138
DEBUG:numba.core.ssa:find_def_from_top label 138
DEBUG:numba.core.ssa:idom 126 from label 138
DEBUG:numba.core.ssa:find_def_from_bottom label 126
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:idom 118 from label 126
DEBUG:numba.core.ssa:find_def_from_bottom label 118
DEBUG:numba.core.ssa:find_def_from_top label 118
DEBUG:numba.core.ssa:idom 98 from label 118
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $164binary_true_divide.7 = $160call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result, func=$170load_method.9, args=[Var(result, distances.py:429)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='result' stmt=$174call_method.11 = call $170load_method.9(result, func=$170load_method.9, args=[Var(result, distances.py:429)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $174call_method.11 = call $170load_method.9(result.2, func=$170load_method.9, args=[Var(result.2, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.ssa:Fix SSA violator on var norm_x
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: norm_x
DEBUG:numba.core.ssa:replaced with: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:429), Var(result.1, distances.py:434)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x = $72inplace_add.19
DEBUG:numba.core.ssa:replaced with: norm_x.1 = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result.3 <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x * norm_y
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result.2, func=$170load_method.9, args=[Var(result.2, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f159136b6d0>],
             34: [<numba.core.ir.Assign object at 0x7f15914ee890>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:429), Var(result.1, distances.py:434)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='norm_x' stmt=$72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node norm_x.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def norm_x.1 = $72inplace_add.19
DEBUG:numba.core.ssa:replaced with: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x.2, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x.1 = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x == $const100.1.1
DEBUG:numba.core.ssa:find_def var='norm_x' stmt=$102compare_op.2 = norm_x == $const100.1.1
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $102compare_op.2 = norm_x.2 == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x == $const120.1.1
DEBUG:numba.core.ssa:find_def var='norm_x' stmt=$122compare_op.2 = norm_x == $const120.1.1
DEBUG:numba.core.ssa:find_def_from_top label 118
DEBUG:numba.core.ssa:idom 98 from label 118
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $122compare_op.2 = norm_x.2 == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result.3 <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b280>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x * norm_y
DEBUG:numba.core.ssa:find_def var='norm_x' stmt=$158binary_multiply.4 = norm_x * norm_y
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 138 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 138
DEBUG:numba.core.ssa:find_def_from_top label 138
DEBUG:numba.core.ssa:idom 126 from label 138
DEBUG:numba.core.ssa:find_def_from_bottom label 126
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:idom 118 from label 126
DEBUG:numba.core.ssa:find_def_from_bottom label 118
DEBUG:numba.core.ssa:find_def_from_top label 118
DEBUG:numba.core.ssa:idom 98 from label 118
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $158binary_multiply.4 = norm_x.2 * norm_y
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result.2, func=$170load_method.9, args=[Var(result.2, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.ssa:Fix SSA violator on var norm_y
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591369db0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: norm_y
DEBUG:numba.core.ssa:replaced with: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591369db0>
DEBUG:numba.core.ssa:on stmt: norm_x.2 = phi(incoming_values=[Var(norm_x, distances.py:430), Var(norm_x.1, distances.py:435)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:429), Var(result.1, distances.py:434)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591369db0>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x.2, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x.1 = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y = $92inplace_add.28
DEBUG:numba.core.ssa:replaced with: norm_y.1 = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591369db0>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x.2 == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591369db0>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591369db0>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591369db0>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x.2 == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591369db0>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591369db0>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591369db0>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result.3 <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591369db0>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591369db0>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x.2 * norm_y
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result.2, func=$170load_method.9, args=[Var(result.2, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15914ede40>],
             34: [<numba.core.ir.Assign object at 0x7f15914ed900>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: norm_x.2 = phi(incoming_values=[Var(norm_x, distances.py:430), Var(norm_x.1, distances.py:435)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:429), Var(result.1, distances.py:434)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x.2, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x.1 = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='norm_y' stmt=$92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node norm_y.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def norm_y.1 = $92inplace_add.28
DEBUG:numba.core.ssa:replaced with: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y.2, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y.1 = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x.2 == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:find_def var='norm_y' stmt=$110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:idom 98 from label 106
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $110compare_op.2 = norm_y.2 == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x.2 == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:find_def var='norm_y' stmt=$130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:idom 118 from label 126
DEBUG:numba.core.ssa:find_def_from_bottom label 118
DEBUG:numba.core.ssa:find_def_from_top label 118
DEBUG:numba.core.ssa:idom 98 from label 118
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $130compare_op.2 = norm_y.2 == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result.3 <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354280>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x.2 * norm_y
DEBUG:numba.core.ssa:find_def var='norm_y' stmt=$158binary_multiply.4 = norm_x.2 * norm_y
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 138 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 138
DEBUG:numba.core.ssa:find_def_from_top label 138
DEBUG:numba.core.ssa:idom 126 from label 138
DEBUG:numba.core.ssa:find_def_from_bottom label 126
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:idom 118 from label 126
DEBUG:numba.core.ssa:find_def_from_bottom label 118
DEBUG:numba.core.ssa:find_def_from_top label 118
DEBUG:numba.core.ssa:idom 98 from label 118
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $158binary_multiply.4 = norm_x.2 * norm_y.2
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result.2, func=$170load_method.9, args=[Var(result.2, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=411)
           2	LOAD_CONST(arg=1, lineno=429)
           4	STORE_FAST(arg=2, lineno=429)
           6	LOAD_CONST(arg=1, lineno=430)
           8	STORE_FAST(arg=3, lineno=430)
          10	LOAD_CONST(arg=1, lineno=431)
          12	STORE_FAST(arg=4, lineno=431)
          14	LOAD_FAST(arg=0, lineno=432)
          16	LOAD_ATTR(arg=0, lineno=432)
          18	LOAD_CONST(arg=2, lineno=432)
          20	BINARY_SUBSCR(arg=None, lineno=432)
          22	STORE_FAST(arg=5, lineno=432)
          24	LOAD_GLOBAL(arg=1, lineno=433)
          26	LOAD_FAST(arg=5, lineno=433)
          28	CALL_FUNCTION(arg=1, lineno=433)
          30	GET_ITER(arg=None, lineno=433)
>         32	FOR_ITER(arg=32, lineno=433)
          34	STORE_FAST(arg=6, lineno=433)
          36	LOAD_FAST(arg=2, lineno=434)
          38	LOAD_FAST(arg=0, lineno=434)
          40	LOAD_FAST(arg=6, lineno=434)
          42	BINARY_SUBSCR(arg=None, lineno=434)
          44	LOAD_FAST(arg=1, lineno=434)
          46	LOAD_FAST(arg=6, lineno=434)
          48	BINARY_SUBSCR(arg=None, lineno=434)
          50	BINARY_MULTIPLY(arg=None, lineno=434)
          52	INPLACE_ADD(arg=None, lineno=434)
          54	STORE_FAST(arg=2, lineno=434)
          56	LOAD_FAST(arg=3, lineno=435)
          58	LOAD_FAST(arg=0, lineno=435)
          60	LOAD_FAST(arg=6, lineno=435)
          62	BINARY_SUBSCR(arg=None, lineno=435)
          64	LOAD_FAST(arg=0, lineno=435)
          66	LOAD_FAST(arg=6, lineno=435)
          68	BINARY_SUBSCR(arg=None, lineno=435)
          70	BINARY_MULTIPLY(arg=None, lineno=435)
          72	INPLACE_ADD(arg=None, lineno=435)
          74	STORE_FAST(arg=3, lineno=435)
          76	LOAD_FAST(arg=4, lineno=436)
          78	LOAD_FAST(arg=1, lineno=436)
          80	LOAD_FAST(arg=6, lineno=436)
          82	BINARY_SUBSCR(arg=None, lineno=436)
          84	LOAD_FAST(arg=1, lineno=436)
          86	LOAD_FAST(arg=6, lineno=436)
          88	BINARY_SUBSCR(arg=None, lineno=436)
          90	BINARY_MULTIPLY(arg=None, lineno=436)
          92	INPLACE_ADD(arg=None, lineno=436)
          94	STORE_FAST(arg=4, lineno=436)
          96	JUMP_ABSOLUTE(arg=17, lineno=436)
>         98	LOAD_FAST(arg=3, lineno=438)
         100	LOAD_CONST(arg=1, lineno=438)
         102	COMPARE_OP(arg=2, lineno=438)
         104	POP_JUMP_IF_FALSE(arg=60, lineno=438)
         106	LOAD_FAST(arg=4, lineno=438)
         108	LOAD_CONST(arg=1, lineno=438)
         110	COMPARE_OP(arg=2, lineno=438)
         112	POP_JUMP_IF_FALSE(arg=60, lineno=438)
         114	LOAD_CONST(arg=1, lineno=439)
         116	RETURN_VALUE(arg=None, lineno=439)
>        118	LOAD_FAST(arg=3, lineno=440)
         120	LOAD_CONST(arg=1, lineno=440)
         122	COMPARE_OP(arg=2, lineno=440)
         124	POP_JUMP_IF_TRUE(arg=68, lineno=440)
         126	LOAD_FAST(arg=4, lineno=440)
         128	LOAD_CONST(arg=1, lineno=440)
         130	COMPARE_OP(arg=2, lineno=440)
         132	POP_JUMP_IF_FALSE(arg=70, lineno=440)
>        134	LOAD_GLOBAL(arg=2, lineno=441)
         136	RETURN_VALUE(arg=None, lineno=441)
>        138	LOAD_FAST(arg=2, lineno=442)
         140	LOAD_CONST(arg=1, lineno=442)
         142	COMPARE_OP(arg=1, lineno=442)
         144	POP_JUMP_IF_FALSE(arg=76, lineno=442)
         146	LOAD_GLOBAL(arg=2, lineno=443)
         148	RETURN_VALUE(arg=None, lineno=443)
>        150	LOAD_GLOBAL(arg=3, lineno=445)
         152	LOAD_METHOD(arg=4, lineno=445)
         154	LOAD_FAST(arg=3, lineno=445)
         156	LOAD_FAST(arg=4, lineno=445)
         158	BINARY_MULTIPLY(arg=None, lineno=445)
         160	CALL_METHOD(arg=1, lineno=445)
         162	LOAD_FAST(arg=2, lineno=445)
         164	BINARY_TRUE_DIVIDE(arg=None, lineno=445)
         166	STORE_FAST(arg=2, lineno=445)
         168	LOAD_GLOBAL(arg=3, lineno=446)
         170	LOAD_METHOD(arg=5, lineno=446)
         172	LOAD_FAST(arg=2, lineno=446)
         174	CALL_METHOD(arg=1, lineno=446)
         176	RETURN_VALUE(arg=None, lineno=446)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=411)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=429)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=429)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=430)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=430)
DEBUG:numba.core.byteflow:stack ['$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=431)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_FAST(arg=4, lineno=431)
DEBUG:numba.core.byteflow:stack ['$const10.2.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=432)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_ATTR(arg=0, lineno=432)
DEBUG:numba.core.byteflow:stack ['$x14.3']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=432)
DEBUG:numba.core.byteflow:stack ['$16load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=432)
DEBUG:numba.core.byteflow:stack ['$16load_attr.4', '$const18.5.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=5, lineno=432)
DEBUG:numba.core.byteflow:stack ['$20binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_GLOBAL(arg=1, lineno=433)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=433)
DEBUG:numba.core.byteflow:stack ['$24load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=433)
DEBUG:numba.core.byteflow:stack ['$24load_global.7', '$dim26.8']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=433)
DEBUG:numba.core.byteflow:stack ['$28call_function.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.10',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=32, lineno=433)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=98, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=98 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=3, lineno=438)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=438)
DEBUG:numba.core.byteflow:stack ['$norm_x98.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=COMPARE_OP(arg=2, lineno=438)
DEBUG:numba.core.byteflow:stack ['$norm_x98.0', '$const100.1.1']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=POP_JUMP_IF_FALSE(arg=60, lineno=438)
DEBUG:numba.core.byteflow:stack ['$102compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=118, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=106 nstack_initial=0), State(pc_initial=118 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=6, lineno=433)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=6, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$x38.3']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$x38.3', '$i40.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$42binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=6, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$42binary_subscr.5', '$y44.6']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$42binary_subscr.5', '$y44.6', '$i46.7']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_MULTIPLY(arg=None, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$42binary_subscr.5', '$48binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=INPLACE_ADD(arg=None, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$50binary_multiply.9']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=2, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$52inplace_add.10']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=3, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=6, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$x58.12']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$x58.12', '$i60.13']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$62binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$62binary_subscr.14', '$x64.15']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$62binary_subscr.14', '$x64.15', '$i66.16']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BINARY_MULTIPLY(arg=None, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$62binary_subscr.14', '$68binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=INPLACE_ADD(arg=None, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_x56.11', '$70binary_multiply.18']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_FAST(arg=3, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$72inplace_add.19']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=6, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$y78.21']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$y78.21', '$i80.22']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=1, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$82binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=6, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$82binary_subscr.23', '$y84.24']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=BINARY_SUBSCR(arg=None, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$82binary_subscr.23', '$y84.24', '$i86.25']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=BINARY_MULTIPLY(arg=None, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$82binary_subscr.23', '$88binary_subscr.26']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=INPLACE_ADD(arg=None, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$norm_y76.20', '$90binary_multiply.27']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=STORE_FAST(arg=4, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$92inplace_add.28']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=JUMP_ABSOLUTE(arg=17, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=106 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=438)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=438)
DEBUG:numba.core.byteflow:stack ['$norm_y106.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=COMPARE_OP(arg=2, lineno=438)
DEBUG:numba.core.byteflow:stack ['$norm_y106.0', '$const108.1.1']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=60, lineno=438)
DEBUG:numba.core.byteflow:stack ['$110compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=118, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=32 nstack_initial=1), State(pc_initial=114 nstack_initial=0), State(pc_initial=118 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=118 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=3, lineno=440)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_CONST(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$norm_x118.0']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=COMPARE_OP(arg=2, lineno=440)
DEBUG:numba.core.byteflow:stack ['$norm_x118.0', '$const120.1.1']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=POP_JUMP_IF_TRUE(arg=68, lineno=440)
DEBUG:numba.core.byteflow:stack ['$122compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=126, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=114 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=126 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=126 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=114 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=1, lineno=439)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=116, inst=RETURN_VALUE(arg=None, lineno=439)
DEBUG:numba.core.byteflow:stack ['$const114.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=126 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=126 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=126 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=4, lineno=440)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_CONST(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$norm_y126.0']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=COMPARE_OP(arg=2, lineno=440)
DEBUG:numba.core.byteflow:stack ['$norm_y126.0', '$const128.1.1']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=70, lineno=440)
DEBUG:numba.core.byteflow:stack ['$130compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=138, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=134 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=2, lineno=441)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=441)
DEBUG:numba.core.byteflow:stack ['$134load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=138 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=2, lineno=442)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=442)
DEBUG:numba.core.byteflow:stack ['$result138.0']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=COMPARE_OP(arg=1, lineno=442)
DEBUG:numba.core.byteflow:stack ['$result138.0', '$const140.1.1']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=76, lineno=442)
DEBUG:numba.core.byteflow:stack ['$142compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=150, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=146 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=2, lineno=443)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=148, inst=RETURN_VALUE(arg=None, lineno=443)
DEBUG:numba.core.byteflow:stack ['$146load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=150 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=150 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_GLOBAL(arg=3, lineno=445)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_METHOD(arg=4, lineno=445)
DEBUG:numba.core.byteflow:stack ['$150load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=3, lineno=445)
DEBUG:numba.core.byteflow:stack ['$152load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=4, lineno=445)
DEBUG:numba.core.byteflow:stack ['$152load_method.1', '$norm_x154.2']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=BINARY_MULTIPLY(arg=None, lineno=445)
DEBUG:numba.core.byteflow:stack ['$152load_method.1', '$norm_x154.2', '$norm_y156.3']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=CALL_METHOD(arg=1, lineno=445)
DEBUG:numba.core.byteflow:stack ['$152load_method.1', '$158binary_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=2, lineno=445)
DEBUG:numba.core.byteflow:stack ['$160call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=445)
DEBUG:numba.core.byteflow:stack ['$160call_method.5', '$result162.6']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=STORE_FAST(arg=2, lineno=445)
DEBUG:numba.core.byteflow:stack ['$164binary_true_divide.7']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_GLOBAL(arg=3, lineno=446)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_METHOD(arg=5, lineno=446)
DEBUG:numba.core.byteflow:stack ['$168load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=2, lineno=446)
DEBUG:numba.core.byteflow:stack ['$170load_method.9']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=CALL_METHOD(arg=1, lineno=446)
DEBUG:numba.core.byteflow:stack ['$170load_method.9', '$result172.10']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=RETURN_VALUE(arg=None, lineno=446)
DEBUG:numba.core.byteflow:stack ['$174call_method.11']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=118 nstack_initial=0): set(),
             State(pc_initial=126 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.10', State(pc_initial=0 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$30get_iter.10'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$const6.1.1'}), (8, {'value': '$const6.1.1'}), (10, {'res': '$const10.2.1'}), (12, {'value': '$const10.2.1'}), (14, {'res': '$x14.3'}), (16, {'item': '$x14.3', 'res': '$16load_attr.4'}), (18, {'res': '$const18.5.2'}), (20, {'index': '$const18.5.2', 'target': '$16load_attr.4', 'res': '$20binary_subscr.6'}), (22, {'value': '$20binary_subscr.6'}), (24, {'res': '$24load_global.7'}), (26, {'res': '$dim26.8'}), (28, {'func': '$24load_global.7', 'args': ['$dim26.8'], 'res': '$28call_function.9'}), (30, {'value': '$28call_function.9', 'res': '$30get_iter.10'})), outgoing_phis={'$phi32.0': '$30get_iter.10'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.10',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$result36.2'}), (38, {'res': '$x38.3'}), (40, {'res': '$i40.4'}), (42, {'index': '$i40.4', 'target': '$x38.3', 'res': '$42binary_subscr.5'}), (44, {'res': '$y44.6'}), (46, {'res': '$i46.7'}), (48, {'index': '$i46.7', 'target': '$y44.6', 'res': '$48binary_subscr.8'}), (50, {'lhs': '$42binary_subscr.5', 'rhs': '$48binary_subscr.8', 'res': '$50binary_multiply.9'}), (52, {'lhs': '$result36.2', 'rhs': '$50binary_multiply.9', 'res': '$52inplace_add.10'}), (54, {'value': '$52inplace_add.10'}), (56, {'res': '$norm_x56.11'}), (58, {'res': '$x58.12'}), (60, {'res': '$i60.13'}), (62, {'index': '$i60.13', 'target': '$x58.12', 'res': '$62binary_subscr.14'}), (64, {'res': '$x64.15'}), (66, {'res': '$i66.16'}), (68, {'index': '$i66.16', 'target': '$x64.15', 'res': '$68binary_subscr.17'}), (70, {'lhs': '$62binary_subscr.14', 'rhs': '$68binary_subscr.17', 'res': '$70binary_multiply.18'}), (72, {'lhs': '$norm_x56.11', 'rhs': '$70binary_multiply.18', 'res': '$72inplace_add.19'}), (74, {'value': '$72inplace_add.19'}), (76, {'res': '$norm_y76.20'}), (78, {'res': '$y78.21'}), (80, {'res': '$i80.22'}), (82, {'index': '$i80.22', 'target': '$y78.21', 'res': '$82binary_subscr.23'}), (84, {'res': '$y84.24'}), (86, {'res': '$i86.25'}), (88, {'index': '$i86.25', 'target': '$y84.24', 'res': '$88binary_subscr.26'}), (90, {'lhs': '$82binary_subscr.23', 'rhs': '$88binary_subscr.26', 'res': '$90binary_multiply.27'}), (92, {'lhs': '$norm_y76.20', 'rhs': '$90binary_multiply.27', 'res': '$92inplace_add.28'}), (94, {'value': '$92inplace_add.28'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$norm_x98.0'}), (100, {'res': '$const100.1.1'}), (102, {'lhs': '$norm_x98.0', 'rhs': '$const100.1.1', 'res': '$102compare_op.2'}), (104, {'pred': '$102compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 118: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$norm_y106.0'}), (108, {'res': '$const108.1.1'}), (110, {'lhs': '$norm_y106.0', 'rhs': '$const108.1.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 118: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$const114.0.1'}), (116, {'retval': '$const114.0.1', 'castval': '$116return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=((118, {'res': '$norm_x118.0'}), (120, {'res': '$const120.1.1'}), (122, {'lhs': '$norm_x118.0', 'rhs': '$const120.1.1', 'res': '$122compare_op.2'}), (124, {'pred': '$122compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={126: (), 134: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=126 nstack_initial=0):
AdaptBlockInfo(insts=((126, {'res': '$norm_y126.0'}), (128, {'res': '$const128.1.1'}), (130, {'lhs': '$norm_y126.0', 'rhs': '$const128.1.1', 'res': '$130compare_op.2'}), (132, {'pred': '$130compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 138: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$134load_global.0'}), (136, {'retval': '$134load_global.0', 'castval': '$136return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$result138.0'}), (140, {'res': '$const140.1.1'}), (142, {'lhs': '$result138.0', 'rhs': '$const140.1.1', 'res': '$142compare_op.2'}), (144, {'pred': '$142compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 150: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$146load_global.0'}), (148, {'retval': '$146load_global.0', 'castval': '$148return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=((150, {'res': '$150load_global.0'}), (152, {'item': '$150load_global.0', 'res': '$152load_method.1'}), (154, {'res': '$norm_x154.2'}), (156, {'res': '$norm_y156.3'}), (158, {'lhs': '$norm_x154.2', 'rhs': '$norm_y156.3', 'res': '$158binary_multiply.4'}), (160, {'func': '$152load_method.1', 'args': ['$158binary_multiply.4'], 'res': '$160call_method.5'}), (162, {'res': '$result162.6'}), (164, {'lhs': '$160call_method.5', 'rhs': '$result162.6', 'res': '$164binary_true_divide.7'}), (166, {'value': '$164binary_true_divide.7'}), (168, {'res': '$168load_global.8'}), (170, {'item': '$168load_global.8', 'res': '$170load_method.9'}), (172, {'res': '$result172.10'}), (174, {'func': '$170load_method.9', 'args': ['$result172.10'], 'res': '$174call_method.11'}), (176, {'retval': '$174call_method.11', 'castval': '$176return_value.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    norm_x = const(float, 0.0)               ['norm_x']
    norm_y = const(float, 0.0)               ['norm_y']
    $16load_attr.4 = getattr(value=x, attr=shape) ['$16load_attr.4', 'x']
    $const18.5.2 = const(int, 0)             ['$const18.5.2']
    dim = getitem(value=$16load_attr.4, index=$const18.5.2, fn=<built-in function getitem>) ['$16load_attr.4', '$const18.5.2', 'dim']
    $24load_global.7 = global(range: <class 'range'>) ['$24load_global.7']
    $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.7', '$28call_function.9', 'dim']
    $30get_iter.10 = getiter(value=$28call_function.9) ['$28call_function.9', '$30get_iter.10']
    $phi32.0 = $30get_iter.10                ['$30get_iter.10', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 98             ['$32for_iter.3']
label 34:
    i = $phi34.1                             ['$phi34.1', 'i']
    $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$42binary_subscr.5', 'i', 'x']
    $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$48binary_subscr.8', 'i', 'y']
    $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8 ['$42binary_subscr.5', '$48binary_subscr.8', '$50binary_multiply.9']
    $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_multiply.9', '$52inplace_add.10', 'result']
    result = $52inplace_add.10               ['$52inplace_add.10', 'result']
    $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$62binary_subscr.14', 'i', 'x']
    $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$68binary_subscr.17', 'i', 'x']
    $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17 ['$62binary_subscr.14', '$68binary_subscr.17', '$70binary_multiply.18']
    $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined) ['$70binary_multiply.18', '$72inplace_add.19', 'norm_x']
    norm_x = $72inplace_add.19               ['$72inplace_add.19', 'norm_x']
    $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$82binary_subscr.23', 'i', 'y']
    $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$88binary_subscr.26', 'i', 'y']
    $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26 ['$82binary_subscr.23', '$88binary_subscr.26', '$90binary_multiply.27']
    $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined) ['$90binary_multiply.27', '$92inplace_add.28', 'norm_y']
    norm_y = $92inplace_add.28               ['$92inplace_add.28', 'norm_y']
    jump 32                                  []
label 98:
    $const100.1.1 = const(float, 0.0)        ['$const100.1.1']
    $102compare_op.2 = norm_x == $const100.1.1 ['$102compare_op.2', '$const100.1.1', 'norm_x']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None) ['$102compare_op.2', '$104pred', 'bool104']
    branch $104pred, 106, 118                ['$104pred']
label 106:
    $const108.1.1 = const(float, 0.0)        ['$const108.1.1']
    $110compare_op.2 = norm_y == $const108.1.1 ['$110compare_op.2', '$const108.1.1', 'norm_y']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 118                ['$112pred']
label 114:
    $const114.0.1 = const(float, 0.0)        ['$const114.0.1']
    $116return_value.1 = cast(value=$const114.0.1) ['$116return_value.1', '$const114.0.1']
    return $116return_value.1                ['$116return_value.1']
label 118:
    $const120.1.1 = const(float, 0.0)        ['$const120.1.1']
    $122compare_op.2 = norm_x == $const120.1.1 ['$122compare_op.2', '$const120.1.1', 'norm_x']
    bool124 = global(bool: <class 'bool'>)   ['bool124']
    $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None) ['$122compare_op.2', '$124pred', 'bool124']
    branch $124pred, 134, 126                ['$124pred']
label 126:
    $const128.1.1 = const(float, 0.0)        ['$const128.1.1']
    $130compare_op.2 = norm_y == $const128.1.1 ['$130compare_op.2', '$const128.1.1', 'norm_y']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.2', '$132pred', 'bool132']
    branch $132pred, 134, 138                ['$132pred']
label 134:
    $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38) ['$134load_global.0']
    $136return_value.1 = cast(value=$134load_global.0) ['$134load_global.0', '$136return_value.1']
    return $136return_value.1                ['$136return_value.1']
label 138:
    $const140.1.1 = const(float, 0.0)        ['$const140.1.1']
    $142compare_op.2 = result <= $const140.1.1 ['$142compare_op.2', '$const140.1.1', 'result']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None) ['$142compare_op.2', '$144pred', 'bool144']
    branch $144pred, 146, 150                ['$144pred']
label 146:
    $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38) ['$146load_global.0']
    $148return_value.1 = cast(value=$146load_global.0) ['$146load_global.0', '$148return_value.1']
    return $148return_value.1                ['$148return_value.1']
label 150:
    $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$150load_global.0']
    $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt) ['$150load_global.0', '$152load_method.1']
    $158binary_multiply.4 = norm_x * norm_y  ['$158binary_multiply.4', 'norm_x', 'norm_y']
    $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_method.1', '$158binary_multiply.4', '$160call_method.5']
    $164binary_true_divide.7 = $160call_method.5 / result ['$160call_method.5', '$164binary_true_divide.7', 'result']
    result = $164binary_true_divide.7        ['$164binary_true_divide.7', 'result']
    $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$168load_global.8']
    $170load_method.9 = getattr(value=$168load_global.8, attr=log2) ['$168load_global.8', '$170load_method.9']
    $174call_method.11 = call $170load_method.9(result, func=$170load_method.9, args=[Var(result, distances.py:429)], kws=(), vararg=None, varkwarg=None, target=None) ['$170load_method.9', '$174call_method.11', 'result']
    $176return_value.12 = cast(value=$174call_method.11) ['$174call_method.11', '$176return_value.12']
    return $176return_value.12               ['$176return_value.12']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591356530>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591356530>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591356530>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591356530>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block analysis pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591356530>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block analysis pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591356530>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591356530>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block analysis pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591356530>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block analysis pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591356530>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591356530>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block analysis pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591356530>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591356530>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x * norm_y
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result
DEBUG:numba.core.ssa:on stmt: result = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result, func=$170load_method.9, args=[Var(result, distances.py:429)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102compare_op.2': [(<numba.core.ir.Assign object at 0x7f15913f9f00>,
                                   98)],
             '$104pred': [(<numba.core.ir.Assign object at 0x7f15913faaa0>,
                           98)],
             '$110compare_op.2': [(<numba.core.ir.Assign object at 0x7f15913fafb0>,
                                   106)],
             '$112pred': [(<numba.core.ir.Assign object at 0x7f15913fb220>,
                           106)],
             '$116return_value.1': [(<numba.core.ir.Assign object at 0x7f15913fb5e0>,
                                     114)],
             '$122compare_op.2': [(<numba.core.ir.Assign object at 0x7f15913fbb50>,
                                   118)],
             '$124pred': [(<numba.core.ir.Assign object at 0x7f15913fbdc0>,
                           118)],
             '$130compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591400310>,
                                   126)],
             '$132pred': [(<numba.core.ir.Assign object at 0x7f1591400580>,
                           126)],
             '$134load_global.0': [(<numba.core.ir.Assign object at 0x7f15914007c0>,
                                    134)],
             '$136return_value.1': [(<numba.core.ir.Assign object at 0x7f1591400940>,
                                     134)],
             '$142compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591400eb0>,
                                   138)],
             '$144pred': [(<numba.core.ir.Assign object at 0x7f1591401120>,
                           138)],
             '$146load_global.0': [(<numba.core.ir.Assign object at 0x7f1591401360>,
                                    146)],
             '$148return_value.1': [(<numba.core.ir.Assign object at 0x7f15914014e0>,
                                     146)],
             '$150load_global.0': [(<numba.core.ir.Assign object at 0x7f1591401780>,
                                    150)],
             '$152load_method.1': [(<numba.core.ir.Assign object at 0x7f1591401900>,
                                    150)],
             '$158binary_multiply.4': [(<numba.core.ir.Assign object at 0x7f1591401cf0>,
                                        150)],
             '$160call_method.5': [(<numba.core.ir.Assign object at 0x7f1591401ed0>,
                                    150)],
             '$164binary_true_divide.7': [(<numba.core.ir.Assign object at 0x7f1591402110>,
                                           150)],
             '$168load_global.8': [(<numba.core.ir.Assign object at 0x7f1591402320>,
                                    150)],
             '$16load_attr.4': [(<numba.core.ir.Assign object at 0x7f1591370be0>,
                                 0)],
             '$170load_method.9': [(<numba.core.ir.Assign object at 0x7f15914024a0>,
                                    150)],
             '$174call_method.11': [(<numba.core.ir.Assign object at 0x7f15914027d0>,
                                     150)],
             '$176return_value.12': [(<numba.core.ir.Assign object at 0x7f15914028c0>,
                                      150)],
             '$24load_global.7': [(<numba.core.ir.Assign object at 0x7f15913f81c0>,
                                   0)],
             '$28call_function.9': [(<numba.core.ir.Assign object at 0x7f15913f84c0>,
                                     0)],
             '$30get_iter.10': [(<numba.core.ir.Assign object at 0x7f15913f85e0>,
                                 0)],
             '$32for_iter.1': [(<numba.core.ir.Assign object at 0x7f15913f8730>,
                                32)],
             '$32for_iter.2': [(<numba.core.ir.Assign object at 0x7f15913f8850>,
                                32)],
             '$32for_iter.3': [(<numba.core.ir.Assign object at 0x7f15915e76d0>,
                                32)],
             '$42binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1591369450>,
                                     34)],
             '$48binary_subscr.8': [(<numba.core.ir.Assign object at 0x7f15913f8bb0>,
                                     34)],
             '$50binary_multiply.9': [(<numba.core.ir.Assign object at 0x7f15913f8d30>,
                                       34)],
             '$52inplace_add.10': [(<numba.core.ir.Assign object at 0x7f15913f8eb0>,
                                    34)],
             '$62binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f15913f9450>,
                                      34)],
             '$68binary_subscr.17': [(<numba.core.ir.Assign object at 0x7f15913f9810>,
                                      34)],
             '$70binary_multiply.18': [(<numba.core.ir.Assign object at 0x7f15913f9990>,
                                        34)],
             '$72inplace_add.19': [(<numba.core.ir.Assign object at 0x7f15913f9b10>,
                                    34)],
             '$82binary_subscr.23': [(<numba.core.ir.Assign object at 0x7f15913fa0b0>,
                                      34)],
             '$88binary_subscr.26': [(<numba.core.ir.Assign object at 0x7f15913fa470>,
                                      34)],
             '$90binary_multiply.27': [(<numba.core.ir.Assign object at 0x7f15913fa5f0>,
                                        34)],
             '$92inplace_add.28': [(<numba.core.ir.Assign object at 0x7f15913fa770>,
                                    34)],
             '$const100.1.1': [(<numba.core.ir.Assign object at 0x7f15913f9330>,
                                98)],
             '$const108.1.1': [(<numba.core.ir.Assign object at 0x7f15913fae00>,
                                106)],
             '$const114.0.1': [(<numba.core.ir.Assign object at 0x7f15913fb460>,
                                114)],
             '$const120.1.1': [(<numba.core.ir.Assign object at 0x7f15913fb9a0>,
                                118)],
             '$const128.1.1': [(<numba.core.ir.Assign object at 0x7f1591400160>,
                                126)],
             '$const140.1.1': [(<numba.core.ir.Assign object at 0x7f1591400d00>,
                                138)],
             '$const18.5.2': [(<numba.core.ir.Assign object at 0x7f15913df880>,
                               0)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x7f15914ef310>, 0)],
             '$phi34.1': [(<numba.core.ir.Assign object at 0x7f1591355930>,
                           32)],
             'bool104': [(<numba.core.ir.Assign object at 0x7f15913fa980>, 98)],
             'bool112': [(<numba.core.ir.Assign object at 0x7f15913fb100>,
                          106)],
             'bool124': [(<numba.core.ir.Assign object at 0x7f15913fbca0>,
                          118)],
             'bool132': [(<numba.core.ir.Assign object at 0x7f1591400460>,
                          126)],
             'bool144': [(<numba.core.ir.Assign object at 0x7f1591401000>,
                          138)],
             'dim': [(<numba.core.ir.Assign object at 0x7f15914032b0>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f1591356aa0>, 34)],
             'norm_x': [(<numba.core.ir.Assign object at 0x7f15914ee860>, 0),
                        (<numba.core.ir.Assign object at 0x7f15913f9bd0>, 34)],
             'norm_y': [(<numba.core.ir.Assign object at 0x7f15914eea10>, 0),
                        (<numba.core.ir.Assign object at 0x7f15913fa830>, 34)],
             'result': [(<numba.core.ir.Assign object at 0x7f15914ed9c0>, 0),
                        (<numba.core.ir.Assign object at 0x7f15913f8f70>, 34),
                        (<numba.core.ir.Assign object at 0x7f15914021d0>, 150)],
             'x': [(<numba.core.ir.Assign object at 0x7f1591508fd0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f159133eec0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1591356530>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $52inplace_add.10
DEBUG:numba.core.ssa:replaced with: result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x * norm_y
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result
DEBUG:numba.core.ssa:on stmt: result = $164binary_true_divide.7
DEBUG:numba.core.ssa:replaced with: result.2 = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result, func=$170load_method.9, args=[Var(result, distances.py:429)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1591356440>],
             34: [<numba.core.ir.Assign object at 0x7f1591369b70>],
             150: [<numba.core.ir.Assign object at 0x7f1591402aa0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node result.3 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:replaced with: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result <= $const140.1.1
DEBUG:numba.core.ssa:find_def var='result' stmt=$142compare_op.2 = result <= $const140.1.1
DEBUG:numba.core.ssa:find_def_from_top label 138
DEBUG:numba.core.ssa:idom 126 from label 138
DEBUG:numba.core.ssa:find_def_from_bottom label 126
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:idom 118 from label 126
DEBUG:numba.core.ssa:find_def_from_bottom label 118
DEBUG:numba.core.ssa:find_def_from_top label 118
DEBUG:numba.core.ssa:idom 98 from label 118
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $142compare_op.2 = result.3 <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x * norm_y
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result
DEBUG:numba.core.ssa:find_def var='result' stmt=$164binary_true_divide.7 = $160call_method.5 / result
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 138 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 138
DEBUG:numba.core.ssa:find_def_from_top label 138
DEBUG:numba.core.ssa:idom 126 from label 138
DEBUG:numba.core.ssa:find_def_from_bottom label 126
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:idom 118 from label 126
DEBUG:numba.core.ssa:find_def_from_bottom label 118
DEBUG:numba.core.ssa:find_def_from_top label 118
DEBUG:numba.core.ssa:idom 98 from label 118
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $164binary_true_divide.7 = $160call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result, func=$170load_method.9, args=[Var(result, distances.py:429)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='result' stmt=$174call_method.11 = call $170load_method.9(result, func=$170load_method.9, args=[Var(result, distances.py:429)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $174call_method.11 = call $170load_method.9(result.2, func=$170load_method.9, args=[Var(result.2, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.ssa:Fix SSA violator on var norm_x
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: norm_x
DEBUG:numba.core.ssa:replaced with: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:429), Var(result.1, distances.py:434)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x = $72inplace_add.19
DEBUG:numba.core.ssa:replaced with: norm_x.1 = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result.3 <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x * norm_y
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result.2, func=$170load_method.9, args=[Var(result.2, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1591355300>],
             34: [<numba.core.ir.Assign object at 0x7f1591402bf0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:429), Var(result.1, distances.py:434)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='norm_x' stmt=$72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node norm_x.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def norm_x.1 = $72inplace_add.19
DEBUG:numba.core.ssa:replaced with: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x.2, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x.1 = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x == $const100.1.1
DEBUG:numba.core.ssa:find_def var='norm_x' stmt=$102compare_op.2 = norm_x == $const100.1.1
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $102compare_op.2 = norm_x.2 == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x == $const120.1.1
DEBUG:numba.core.ssa:find_def var='norm_x' stmt=$122compare_op.2 = norm_x == $const120.1.1
DEBUG:numba.core.ssa:find_def_from_top label 118
DEBUG:numba.core.ssa:idom 98 from label 118
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $122compare_op.2 = norm_x.2 == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result.3 <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591354dc0>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x * norm_y
DEBUG:numba.core.ssa:find_def var='norm_x' stmt=$158binary_multiply.4 = norm_x * norm_y
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 138 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 138
DEBUG:numba.core.ssa:find_def_from_top label 138
DEBUG:numba.core.ssa:idom 126 from label 138
DEBUG:numba.core.ssa:find_def_from_bottom label 126
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:idom 118 from label 126
DEBUG:numba.core.ssa:find_def_from_bottom label 118
DEBUG:numba.core.ssa:find_def_from_top label 118
DEBUG:numba.core.ssa:idom 98 from label 118
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $158binary_multiply.4 = norm_x.2 * norm_y
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result.2, func=$170load_method.9, args=[Var(result.2, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.ssa:Fix SSA violator on var norm_y
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354550>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: norm_y
DEBUG:numba.core.ssa:replaced with: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354550>
DEBUG:numba.core.ssa:on stmt: norm_x.2 = phi(incoming_values=[Var(norm_x, distances.py:430), Var(norm_x.1, distances.py:435)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:429), Var(result.1, distances.py:434)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354550>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x.2, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x.1 = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y = $92inplace_add.28
DEBUG:numba.core.ssa:replaced with: norm_y.1 = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354550>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x.2 == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354550>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354550>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354550>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x.2 == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354550>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354550>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354550>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result.3 <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354550>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591354550>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x.2 * norm_y
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result.2, func=$170load_method.9, args=[Var(result.2, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f159136a0b0>],
             34: [<numba.core.ir.Assign object at 0x7f15914029e0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:432)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: norm_x.2 = phi(incoming_values=[Var(norm_x, distances.py:430), Var(norm_x.1, distances.py:435)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:429), Var(result.1, distances.py:434)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.9 = $42binary_subscr.5 * $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $52inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$50binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.10
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.18 = $62binary_subscr.14 * $68binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $72inplace_add.19 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x.2, rhs=$70binary_multiply.18, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_x.1 = $72inplace_add.19
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.23 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.26 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.27 = $82binary_subscr.23 * $88binary_subscr.26
DEBUG:numba.core.ssa:on stmt: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='norm_y' stmt=$92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node norm_y.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def norm_y.1 = $92inplace_add.28
DEBUG:numba.core.ssa:replaced with: $92inplace_add.28 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y.2, rhs=$90binary_multiply.27, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_y.1 = $92inplace_add.28
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $const100.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102compare_op.2 = norm_x.2 == $const100.1.1
DEBUG:numba.core.ssa:on stmt: bool104 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $104pred = call bool104($102compare_op.2, func=bool104, args=(Var($102compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $104pred, 106, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $const108.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:find_def var='norm_y' stmt=$110compare_op.2 = norm_y == $const108.1.1
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:idom 98 from label 106
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $110compare_op.2 = norm_y.2 == $const108.1.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:438),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 118
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $const114.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0.1)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $const120.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $122compare_op.2 = norm_x.2 == $const120.1.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.2, func=bool124, args=(Var($122compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 134, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $const128.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:find_def var='norm_y' stmt=$130compare_op.2 = norm_y == $const128.1.1
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:idom 118 from label 126
DEBUG:numba.core.ssa:find_def_from_bottom label 118
DEBUG:numba.core.ssa:find_def_from_top label 118
DEBUG:numba.core.ssa:idom 98 from label 118
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $130compare_op.2 = norm_y.2 == $const128.1.1
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.2, func=bool132, args=(Var($130compare_op.2, distances.py:440),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $136return_value.1 = cast(value=$134load_global.0)
DEBUG:numba.core.ssa:on stmt: return $136return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $const140.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $142compare_op.2 = result.3 <= $const140.1.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142compare_op.2, func=bool144, args=(Var($142compare_op.2, distances.py:442),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $146load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$146load_global.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159136b940>
DEBUG:numba.core.ssa:on stmt: $150load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $152load_method.1 = getattr(value=$150load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $158binary_multiply.4 = norm_x.2 * norm_y
DEBUG:numba.core.ssa:find_def var='norm_y' stmt=$158binary_multiply.4 = norm_x.2 * norm_y
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 138 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 138
DEBUG:numba.core.ssa:find_def_from_top label 138
DEBUG:numba.core.ssa:idom 126 from label 138
DEBUG:numba.core.ssa:find_def_from_bottom label 126
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:idom 118 from label 126
DEBUG:numba.core.ssa:find_def_from_bottom label 118
DEBUG:numba.core.ssa:find_def_from_top label 118
DEBUG:numba.core.ssa:idom 98 from label 118
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 32 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $158binary_multiply.4 = norm_x.2 * norm_y.2
DEBUG:numba.core.ssa:on stmt: $160call_method.5 = call $152load_method.1($158binary_multiply.4, func=$152load_method.1, args=[Var($158binary_multiply.4, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164binary_true_divide.7 = $160call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $164binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $168load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $170load_method.9 = getattr(value=$168load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $174call_method.11 = call $170load_method.9(result.2, func=$170load_method.9, args=[Var(result.2, distances.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176return_value.12 = cast(value=$174call_method.11)
DEBUG:numba.core.ssa:on stmt: return $176return_value.12
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=449)
           2	LOAD_CONST(arg=1, lineno=459)
           4	STORE_FAST(arg=2, lineno=459)
           6	LOAD_FAST(arg=0, lineno=460)
           8	LOAD_ATTR(arg=0, lineno=460)
          10	LOAD_CONST(arg=2, lineno=460)
          12	BINARY_SUBSCR(arg=None, lineno=460)
          14	STORE_FAST(arg=3, lineno=460)
          16	LOAD_GLOBAL(arg=1, lineno=461)
          18	LOAD_FAST(arg=3, lineno=461)
          20	CALL_FUNCTION(arg=1, lineno=461)
          22	GET_ITER(arg=None, lineno=461)
>         24	FOR_ITER(arg=12, lineno=461)
          26	STORE_FAST(arg=4, lineno=461)
          28	LOAD_FAST(arg=2, lineno=462)
          30	LOAD_FAST(arg=0, lineno=462)
          32	LOAD_FAST(arg=4, lineno=462)
          34	BINARY_SUBSCR(arg=None, lineno=462)
          36	LOAD_FAST(arg=1, lineno=462)
          38	LOAD_FAST(arg=4, lineno=462)
          40	BINARY_SUBSCR(arg=None, lineno=462)
          42	BINARY_MULTIPLY(arg=None, lineno=462)
          44	INPLACE_ADD(arg=None, lineno=462)
          46	STORE_FAST(arg=2, lineno=462)
          48	JUMP_ABSOLUTE(arg=13, lineno=462)
>         50	LOAD_FAST(arg=2, lineno=464)
          52	LOAD_CONST(arg=1, lineno=464)
          54	COMPARE_OP(arg=1, lineno=464)
          56	POP_JUMP_IF_FALSE(arg=32, lineno=464)
          58	LOAD_CONST(arg=3, lineno=465)
          60	RETURN_VALUE(arg=None, lineno=465)
>         62	LOAD_CONST(arg=3, lineno=467)
          64	LOAD_FAST(arg=2, lineno=467)
          66	BINARY_SUBTRACT(arg=None, lineno=467)
          68	RETURN_VALUE(arg=None, lineno=467)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=449)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=459)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=459)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=460)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=460)
DEBUG:numba.core.byteflow:stack ['$x6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=460)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=460)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2', '$const10.3.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=STORE_FAST(arg=3, lineno=460)
DEBUG:numba.core.byteflow:stack ['$12binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=461)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=461)
DEBUG:numba.core.byteflow:stack ['$16load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_FUNCTION(arg=1, lineno=461)
DEBUG:numba.core.byteflow:stack ['$16load_global.5', '$dim18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=GET_ITER(arg=None, lineno=461)
DEBUG:numba.core.byteflow:stack ['$20call_function.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$22get_iter.8',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi24.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=24 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=24, inst=FOR_ITER(arg=12, lineno=461)
DEBUG:numba.core.byteflow:stack ['$phi24.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=('$phi24.0', '$24for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=0), State(pc_initial=26 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=2, lineno=464)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=464)
DEBUG:numba.core.byteflow:stack ['$result50.0']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=COMPARE_OP(arg=1, lineno=464)
DEBUG:numba.core.byteflow:stack ['$result50.0', '$const52.1.1']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=POP_JUMP_IF_FALSE(arg=32, lineno=464)
DEBUG:numba.core.byteflow:stack ['$54compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=2), State(pc_initial=58 nstack_initial=0), State(pc_initial=62 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=4, lineno=461)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=2, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=4, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$x30.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$x30.3', '$i32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=1, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$34binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=4, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$34binary_subscr.5', '$y36.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$34binary_subscr.5', '$y36.6', '$i38.7']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_MULTIPLY(arg=None, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$34binary_subscr.5', '$40binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=INPLACE_ADD(arg=None, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$42binary_multiply.9']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=2, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$44inplace_add.10']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=JUMP_ABSOLUTE(arg=13, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$phi26.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=62 nstack_initial=0), State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_CONST(arg=3, lineno=465)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=RETURN_VALUE(arg=None, lineno=465)
DEBUG:numba.core.byteflow:stack ['$const58.0.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=62 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_CONST(arg=3, lineno=467)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=2, lineno=467)
DEBUG:numba.core.byteflow:stack ['$const62.0.3']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=467)
DEBUG:numba.core.byteflow:stack ['$const62.0.3', '$result64.1']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=RETURN_VALUE(arg=None, lineno=467)
DEBUG:numba.core.byteflow:stack ['$66binary_subtract.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=26 nstack_initial=2): {'$phi26.1'},
             State(pc_initial=50 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi26.1': State(pc_initial=24 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi26.0': {('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi24.0': {('$22get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi26.1': {('$24for_iter.2', State(pc_initial=24 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$22get_iter.8'},
             State(pc_initial=24 nstack_initial=1): {'$phi26.1': '$24for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$x6.1'}), (8, {'item': '$x6.1', 'res': '$8load_attr.2'}), (10, {'res': '$const10.3.2'}), (12, {'index': '$const10.3.2', 'target': '$8load_attr.2', 'res': '$12binary_subscr.4'}), (14, {'value': '$12binary_subscr.4'}), (16, {'res': '$16load_global.5'}), (18, {'res': '$dim18.6'}), (20, {'func': '$16load_global.5', 'args': ['$dim18.6'], 'res': '$20call_function.7'}), (22, {'value': '$20call_function.7', 'res': '$22get_iter.8'})), outgoing_phis={'$phi24.0': '$22get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$22get_iter.8',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'iterator': '$phi24.0', 'pair': '$24for_iter.1', 'indval': '$24for_iter.2', 'pred': '$24for_iter.3'}),), outgoing_phis={'$phi26.1': '$24for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: (), 26: ('$phi24.0', '$24for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=2):
AdaptBlockInfo(insts=((26, {'value': '$phi26.1'}), (28, {'res': '$result28.2'}), (30, {'res': '$x30.3'}), (32, {'res': '$i32.4'}), (34, {'index': '$i32.4', 'target': '$x30.3', 'res': '$34binary_subscr.5'}), (36, {'res': '$y36.6'}), (38, {'res': '$i38.7'}), (40, {'index': '$i38.7', 'target': '$y36.6', 'res': '$40binary_subscr.8'}), (42, {'lhs': '$34binary_subscr.5', 'rhs': '$40binary_subscr.8', 'res': '$42binary_multiply.9'}), (44, {'lhs': '$result28.2', 'rhs': '$42binary_multiply.9', 'res': '$44inplace_add.10'}), (46, {'value': '$44inplace_add.10'}), (48, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$phi26.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=0):
AdaptBlockInfo(insts=((50, {'res': '$result50.0'}), (52, {'res': '$const52.1.1'}), (54, {'lhs': '$result50.0', 'rhs': '$const52.1.1', 'res': '$54compare_op.2'}), (56, {'pred': '$54compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 62: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$const58.0.3'}), (60, {'retval': '$const58.0.3', 'castval': '$60return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$const62.0.3'}), (64, {'res': '$result64.1'}), (66, {'lhs': '$const62.0.3', 'rhs': '$result64.1', 'res': '$66binary_subtract.2'}), (68, {'retval': '$66binary_subtract.2', 'castval': '$68return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    $8load_attr.2 = getattr(value=x, attr=shape) ['$8load_attr.2', 'x']
    $const10.3.2 = const(int, 0)             ['$const10.3.2']
    dim = getitem(value=$8load_attr.2, index=$const10.3.2, fn=<built-in function getitem>) ['$8load_attr.2', '$const10.3.2', 'dim']
    $16load_global.5 = global(range: <class 'range'>) ['$16load_global.5']
    $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:460)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.5', '$20call_function.7', 'dim']
    $22get_iter.8 = getiter(value=$20call_function.7) ['$20call_function.7', '$22get_iter.8']
    $phi24.0 = $22get_iter.8                 ['$22get_iter.8', '$phi24.0']
    jump 24                                  []
label 24:
    $24for_iter.1 = iternext(value=$phi24.0) ['$24for_iter.1', '$phi24.0']
    $24for_iter.2 = pair_first(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.2']
    $24for_iter.3 = pair_second(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.3']
    $phi26.1 = $24for_iter.2                 ['$24for_iter.2', '$phi26.1']
    branch $24for_iter.3, 26, 50             ['$24for_iter.3']
label 26:
    i = $phi26.1                             ['$phi26.1', 'i']
    $34binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$34binary_subscr.5', 'i', 'x']
    $40binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$40binary_subscr.8', 'i', 'y']
    $42binary_multiply.9 = $34binary_subscr.5 * $40binary_subscr.8 ['$34binary_subscr.5', '$40binary_subscr.8', '$42binary_multiply.9']
    $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined) ['$42binary_multiply.9', '$44inplace_add.10', 'result']
    result = $44inplace_add.10               ['$44inplace_add.10', 'result']
    jump 24                                  []
label 50:
    $const52.1.1 = const(float, 0.0)         ['$const52.1.1']
    $54compare_op.2 = result <= $const52.1.1 ['$54compare_op.2', '$const52.1.1', 'result']
    bool56 = global(bool: <class 'bool'>)    ['bool56']
    $56pred = call bool56($54compare_op.2, func=bool56, args=(Var($54compare_op.2, distances.py:464),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.2', '$56pred', 'bool56']
    branch $56pred, 58, 62                   ['$56pred']
label 58:
    $const58.0.3 = const(float, 1.0)         ['$const58.0.3']
    $60return_value.1 = cast(value=$const58.0.3) ['$60return_value.1', '$const58.0.3']
    return $60return_value.1                 ['$60return_value.1']
label 62:
    $const62.0.3 = const(float, 1.0)         ['$const62.0.3']
    $66binary_subtract.2 = $const62.0.3 - result ['$66binary_subtract.2', '$const62.0.3', 'result']
    $68return_value.3 = cast(value=$66binary_subtract.2) ['$66binary_subtract.2', '$68return_value.3']
    return $68return_value.3                 ['$68return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591418a60>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:460)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591418a60>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591418a60>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $34binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.9 = $34binary_subscr.5 * $40binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $44inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591418a60>
DEBUG:numba.core.ssa:on stmt: $const52.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.2 = result <= $const52.1.1
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.2, func=bool56, args=(Var($54compare_op.2, distances.py:464),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591418a60>
DEBUG:numba.core.ssa:on stmt: $const58.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=$const58.0.3)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1591418a60>
DEBUG:numba.core.ssa:on stmt: $const62.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $66binary_subtract.2 = $const62.0.3 - result
DEBUG:numba.core.ssa:on stmt: $68return_value.3 = cast(value=$66binary_subtract.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16load_global.5': [(<numba.core.ir.Assign object at 0x7f15914a76a0>,
                                   0)],
             '$20call_function.7': [(<numba.core.ir.Assign object at 0x7f15914a6c50>,
                                     0)],
             '$22get_iter.8': [(<numba.core.ir.Assign object at 0x7f15914a6bf0>,
                                0)],
             '$24for_iter.1': [(<numba.core.ir.Assign object at 0x7f1591475ff0>,
                                24)],
             '$24for_iter.2': [(<numba.core.ir.Assign object at 0x7f1591477a00>,
                                24)],
             '$24for_iter.3': [(<numba.core.ir.Assign object at 0x7f1591475d80>,
                                24)],
             '$34binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1591400310>,
                                     26)],
             '$40binary_subscr.8': [(<numba.core.ir.Assign object at 0x7f1591477940>,
                                     26)],
             '$42binary_multiply.9': [(<numba.core.ir.Assign object at 0x7f1591477190>,
                                       26)],
             '$44inplace_add.10': [(<numba.core.ir.Assign object at 0x7f15914772e0>,
                                    26)],
             '$54compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591475d50>,
                                  50)],
             '$56pred': [(<numba.core.ir.Assign object at 0x7f1591476bc0>, 50)],
             '$60return_value.1': [(<numba.core.ir.Assign object at 0x7f1591475930>,
                                    58)],
             '$66binary_subtract.2': [(<numba.core.ir.Assign object at 0x7f1591477130>,
                                       62)],
             '$68return_value.3': [(<numba.core.ir.Assign object at 0x7f1591477490>,
                                    62)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f15914a6440>,
                                0)],
             '$const10.3.2': [(<numba.core.ir.Assign object at 0x7f15914a64a0>,
                               0)],
             '$const52.1.1': [(<numba.core.ir.Assign object at 0x7f1591476dd0>,
                               50)],
             '$const58.0.3': [(<numba.core.ir.Assign object at 0x7f1591475b70>,
                               58)],
             '$const62.0.3': [(<numba.core.ir.Assign object at 0x7f1591476e60>,
                               62)],
             '$phi24.0': [(<numba.core.ir.Assign object at 0x7f15914a4a00>, 0)],
             '$phi26.1': [(<numba.core.ir.Assign object at 0x7f15915d2ec0>,
                           24)],
             'bool56': [(<numba.core.ir.Assign object at 0x7f1591476170>, 50)],
             'dim': [(<numba.core.ir.Assign object at 0x7f1591454520>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f159140c310>, 26)],
             'result': [(<numba.core.ir.Assign object at 0x7f15914a4be0>, 0),
                        (<numba.core.ir.Assign object at 0x7f1591477250>, 26)],
             'x': [(<numba.core.ir.Assign object at 0x7f15914a60e0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f15914a4130>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1591418a60>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591456b90>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:460)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591456b90>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591456b90>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $34binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.9 = $34binary_subscr.5 * $40binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $44inplace_add.10
DEBUG:numba.core.ssa:replaced with: result.1 = $44inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591456b90>
DEBUG:numba.core.ssa:on stmt: $const52.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.2 = result <= $const52.1.1
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.2, func=bool56, args=(Var($54compare_op.2, distances.py:464),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591456b90>
DEBUG:numba.core.ssa:on stmt: $const58.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=$const58.0.3)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591456b90>
DEBUG:numba.core.ssa:on stmt: $const62.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $66binary_subtract.2 = $const62.0.3 - result
DEBUG:numba.core.ssa:on stmt: $68return_value.3 = cast(value=$66binary_subtract.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.3
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1591455960>],
             26: [<numba.core.ir.Assign object at 0x7f1591455210>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591455ed0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:460)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591455ed0>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591455ed0>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $34binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.9 = $34binary_subscr.5 * $40binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 26
DEBUG:numba.core.ssa:idom 24 from label 26
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:find_def_from_top label 24
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 24
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:incoming_def result.1 = $44inplace_add.10
DEBUG:numba.core.ssa:replaced with: $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $44inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591455ed0>
DEBUG:numba.core.ssa:on stmt: $const52.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.2 = result <= $const52.1.1
DEBUG:numba.core.ssa:find_def var='result' stmt=$54compare_op.2 = result <= $const52.1.1
DEBUG:numba.core.ssa:find_def_from_top label 50
DEBUG:numba.core.ssa:idom 24 from label 50
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:replaced with: $54compare_op.2 = result.2 <= $const52.1.1
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.2, func=bool56, args=(Var($54compare_op.2, distances.py:464),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591455ed0>
DEBUG:numba.core.ssa:on stmt: $const58.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=$const58.0.3)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591455ed0>
DEBUG:numba.core.ssa:on stmt: $const62.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $66binary_subtract.2 = $const62.0.3 - result
DEBUG:numba.core.ssa:find_def var='result' stmt=$66binary_subtract.2 = $const62.0.3 - result
DEBUG:numba.core.ssa:find_def_from_top label 62
DEBUG:numba.core.ssa:idom 50 from label 62
DEBUG:numba.core.ssa:find_def_from_bottom label 50
DEBUG:numba.core.ssa:find_def_from_top label 50
DEBUG:numba.core.ssa:idom 24 from label 50
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:replaced with: $66binary_subtract.2 = $const62.0.3 - result.2
DEBUG:numba.core.ssa:on stmt: $68return_value.3 = cast(value=$66binary_subtract.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.3
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=470)
           2	LOAD_CONST(arg=1, lineno=486)
           4	STORE_FAST(arg=2, lineno=486)
           6	LOAD_FAST(arg=0, lineno=487)
           8	LOAD_ATTR(arg=0, lineno=487)
          10	LOAD_CONST(arg=2, lineno=487)
          12	BINARY_SUBSCR(arg=None, lineno=487)
          14	STORE_FAST(arg=3, lineno=487)
          16	LOAD_GLOBAL(arg=1, lineno=488)
          18	LOAD_FAST(arg=3, lineno=488)
          20	CALL_FUNCTION(arg=1, lineno=488)
          22	GET_ITER(arg=None, lineno=488)
>         24	FOR_ITER(arg=12, lineno=488)
          26	STORE_FAST(arg=4, lineno=488)
          28	LOAD_FAST(arg=2, lineno=489)
          30	LOAD_FAST(arg=0, lineno=489)
          32	LOAD_FAST(arg=4, lineno=489)
          34	BINARY_SUBSCR(arg=None, lineno=489)
          36	LOAD_FAST(arg=1, lineno=489)
          38	LOAD_FAST(arg=4, lineno=489)
          40	BINARY_SUBSCR(arg=None, lineno=489)
          42	BINARY_MULTIPLY(arg=None, lineno=489)
          44	INPLACE_ADD(arg=None, lineno=489)
          46	STORE_FAST(arg=2, lineno=489)
          48	JUMP_ABSOLUTE(arg=13, lineno=489)
>         50	LOAD_FAST(arg=2, lineno=491)
          52	LOAD_CONST(arg=1, lineno=491)
          54	COMPARE_OP(arg=1, lineno=491)
          56	POP_JUMP_IF_FALSE(arg=32, lineno=491)
          58	LOAD_GLOBAL(arg=2, lineno=492)
          60	RETURN_VALUE(arg=None, lineno=492)
>         62	LOAD_GLOBAL(arg=3, lineno=494)
          64	LOAD_METHOD(arg=4, lineno=494)
          66	LOAD_FAST(arg=2, lineno=494)
          68	CALL_METHOD(arg=1, lineno=494)
          70	UNARY_NEGATIVE(arg=None, lineno=494)
          72	RETURN_VALUE(arg=None, lineno=494)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=470)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=486)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=486)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=487)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=487)
DEBUG:numba.core.byteflow:stack ['$x6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=487)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=487)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2', '$const10.3.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=STORE_FAST(arg=3, lineno=487)
DEBUG:numba.core.byteflow:stack ['$12binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=488)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=488)
DEBUG:numba.core.byteflow:stack ['$16load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_FUNCTION(arg=1, lineno=488)
DEBUG:numba.core.byteflow:stack ['$16load_global.5', '$dim18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=GET_ITER(arg=None, lineno=488)
DEBUG:numba.core.byteflow:stack ['$20call_function.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$22get_iter.8',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi24.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=24 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=24, inst=FOR_ITER(arg=12, lineno=488)
DEBUG:numba.core.byteflow:stack ['$phi24.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=('$phi24.0', '$24for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=0), State(pc_initial=26 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=2, lineno=491)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=491)
DEBUG:numba.core.byteflow:stack ['$result50.0']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=COMPARE_OP(arg=1, lineno=491)
DEBUG:numba.core.byteflow:stack ['$result50.0', '$const52.1.1']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=POP_JUMP_IF_FALSE(arg=32, lineno=491)
DEBUG:numba.core.byteflow:stack ['$54compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=2), State(pc_initial=58 nstack_initial=0), State(pc_initial=62 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=4, lineno=488)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=2, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=4, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$x30.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$x30.3', '$i32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=1, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$34binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=4, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$34binary_subscr.5', '$y36.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$34binary_subscr.5', '$y36.6', '$i38.7']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_MULTIPLY(arg=None, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$34binary_subscr.5', '$40binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=INPLACE_ADD(arg=None, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$42binary_multiply.9']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=2, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$44inplace_add.10']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=JUMP_ABSOLUTE(arg=13, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$phi26.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=62 nstack_initial=0), State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_GLOBAL(arg=2, lineno=492)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=RETURN_VALUE(arg=None, lineno=492)
DEBUG:numba.core.byteflow:stack ['$58load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=62 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_GLOBAL(arg=3, lineno=494)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_METHOD(arg=4, lineno=494)
DEBUG:numba.core.byteflow:stack ['$62load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=2, lineno=494)
DEBUG:numba.core.byteflow:stack ['$64load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=CALL_METHOD(arg=1, lineno=494)
DEBUG:numba.core.byteflow:stack ['$64load_method.1', '$result66.2']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=UNARY_NEGATIVE(arg=None, lineno=494)
DEBUG:numba.core.byteflow:stack ['$68call_method.3']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=494)
DEBUG:numba.core.byteflow:stack ['$70unary_negative.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=26 nstack_initial=2): {'$phi26.1'},
             State(pc_initial=50 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi26.1': State(pc_initial=24 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi26.0': {('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi24.0': {('$22get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi26.1': {('$24for_iter.2', State(pc_initial=24 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$22get_iter.8'},
             State(pc_initial=24 nstack_initial=1): {'$phi26.1': '$24for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$x6.1'}), (8, {'item': '$x6.1', 'res': '$8load_attr.2'}), (10, {'res': '$const10.3.2'}), (12, {'index': '$const10.3.2', 'target': '$8load_attr.2', 'res': '$12binary_subscr.4'}), (14, {'value': '$12binary_subscr.4'}), (16, {'res': '$16load_global.5'}), (18, {'res': '$dim18.6'}), (20, {'func': '$16load_global.5', 'args': ['$dim18.6'], 'res': '$20call_function.7'}), (22, {'value': '$20call_function.7', 'res': '$22get_iter.8'})), outgoing_phis={'$phi24.0': '$22get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$22get_iter.8',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'iterator': '$phi24.0', 'pair': '$24for_iter.1', 'indval': '$24for_iter.2', 'pred': '$24for_iter.3'}),), outgoing_phis={'$phi26.1': '$24for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: (), 26: ('$phi24.0', '$24for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=2):
AdaptBlockInfo(insts=((26, {'value': '$phi26.1'}), (28, {'res': '$result28.2'}), (30, {'res': '$x30.3'}), (32, {'res': '$i32.4'}), (34, {'index': '$i32.4', 'target': '$x30.3', 'res': '$34binary_subscr.5'}), (36, {'res': '$y36.6'}), (38, {'res': '$i38.7'}), (40, {'index': '$i38.7', 'target': '$y36.6', 'res': '$40binary_subscr.8'}), (42, {'lhs': '$34binary_subscr.5', 'rhs': '$40binary_subscr.8', 'res': '$42binary_multiply.9'}), (44, {'lhs': '$result28.2', 'rhs': '$42binary_multiply.9', 'res': '$44inplace_add.10'}), (46, {'value': '$44inplace_add.10'}), (48, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$phi26.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=0):
AdaptBlockInfo(insts=((50, {'res': '$result50.0'}), (52, {'res': '$const52.1.1'}), (54, {'lhs': '$result50.0', 'rhs': '$const52.1.1', 'res': '$54compare_op.2'}), (56, {'pred': '$54compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 62: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$58load_global.0'}), (60, {'retval': '$58load_global.0', 'castval': '$60return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$62load_global.0'}), (64, {'item': '$62load_global.0', 'res': '$64load_method.1'}), (66, {'res': '$result66.2'}), (68, {'func': '$64load_method.1', 'args': ['$result66.2'], 'res': '$68call_method.3'}), (70, {'value': '$68call_method.3', 'res': '$70unary_negative.4'}), (72, {'retval': '$70unary_negative.4', 'castval': '$72return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    $8load_attr.2 = getattr(value=x, attr=shape) ['$8load_attr.2', 'x']
    $const10.3.2 = const(int, 0)             ['$const10.3.2']
    dim = getitem(value=$8load_attr.2, index=$const10.3.2, fn=<built-in function getitem>) ['$8load_attr.2', '$const10.3.2', 'dim']
    $16load_global.5 = global(range: <class 'range'>) ['$16load_global.5']
    $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:487)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.5', '$20call_function.7', 'dim']
    $22get_iter.8 = getiter(value=$20call_function.7) ['$20call_function.7', '$22get_iter.8']
    $phi24.0 = $22get_iter.8                 ['$22get_iter.8', '$phi24.0']
    jump 24                                  []
label 24:
    $24for_iter.1 = iternext(value=$phi24.0) ['$24for_iter.1', '$phi24.0']
    $24for_iter.2 = pair_first(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.2']
    $24for_iter.3 = pair_second(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.3']
    $phi26.1 = $24for_iter.2                 ['$24for_iter.2', '$phi26.1']
    branch $24for_iter.3, 26, 50             ['$24for_iter.3']
label 26:
    i = $phi26.1                             ['$phi26.1', 'i']
    $34binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$34binary_subscr.5', 'i', 'x']
    $40binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$40binary_subscr.8', 'i', 'y']
    $42binary_multiply.9 = $34binary_subscr.5 * $40binary_subscr.8 ['$34binary_subscr.5', '$40binary_subscr.8', '$42binary_multiply.9']
    $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined) ['$42binary_multiply.9', '$44inplace_add.10', 'result']
    result = $44inplace_add.10               ['$44inplace_add.10', 'result']
    jump 24                                  []
label 50:
    $const52.1.1 = const(float, 0.0)         ['$const52.1.1']
    $54compare_op.2 = result <= $const52.1.1 ['$54compare_op.2', '$const52.1.1', 'result']
    bool56 = global(bool: <class 'bool'>)    ['bool56']
    $56pred = call bool56($54compare_op.2, func=bool56, args=(Var($54compare_op.2, distances.py:491),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.2', '$56pred', 'bool56']
    branch $56pred, 58, 62                   ['$56pred']
label 58:
    $58load_global.0 = global(FLOAT32_MAX: 3.4028235e+38) ['$58load_global.0']
    $60return_value.1 = cast(value=$58load_global.0) ['$58load_global.0', '$60return_value.1']
    return $60return_value.1                 ['$60return_value.1']
label 62:
    $62load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$62load_global.0']
    $64load_method.1 = getattr(value=$62load_global.0, attr=log2) ['$62load_global.0', '$64load_method.1']
    $68call_method.3 = call $64load_method.1(result, func=$64load_method.1, args=[Var(result, distances.py:486)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_method.1', '$68call_method.3', 'result']
    $70unary_negative.4 = unary(fn=<built-in function neg>, value=$68call_method.3) ['$68call_method.3', '$70unary_negative.4']
    $72return_value.5 = cast(value=$70unary_negative.4) ['$70unary_negative.4', '$72return_value.5']
    return $72return_value.5                 ['$72return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15916f72e0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15916f72e0>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15916f72e0>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $34binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.9 = $34binary_subscr.5 * $40binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $44inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15916f72e0>
DEBUG:numba.core.ssa:on stmt: $const52.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.2 = result <= $const52.1.1
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.2, func=bool56, args=(Var($54compare_op.2, distances.py:491),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15916f72e0>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=$58load_global.0)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15916f72e0>
DEBUG:numba.core.ssa:on stmt: $62load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $64load_method.1 = getattr(value=$62load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $68call_method.3 = call $64load_method.1(result, func=$64load_method.1, args=[Var(result, distances.py:486)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70unary_negative.4 = unary(fn=<built-in function neg>, value=$68call_method.3)
DEBUG:numba.core.ssa:on stmt: $72return_value.5 = cast(value=$70unary_negative.4)
DEBUG:numba.core.ssa:on stmt: return $72return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16load_global.5': [(<numba.core.ir.Assign object at 0x7f1591582fe0>,
                                   0)],
             '$20call_function.7': [(<numba.core.ir.Assign object at 0x7f15917101f0>,
                                     0)],
             '$22get_iter.8': [(<numba.core.ir.Assign object at 0x7f15916f4d90>,
                                0)],
             '$24for_iter.1': [(<numba.core.ir.Assign object at 0x7f15916f5b10>,
                                24)],
             '$24for_iter.2': [(<numba.core.ir.Assign object at 0x7f15916f40a0>,
                                24)],
             '$24for_iter.3': [(<numba.core.ir.Assign object at 0x7f15915819f0>,
                                24)],
             '$34binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f15914a55a0>,
                                     26)],
             '$40binary_subscr.8': [(<numba.core.ir.Assign object at 0x7f15916f50f0>,
                                     26)],
             '$42binary_multiply.9': [(<numba.core.ir.Assign object at 0x7f15916f4400>,
                                       26)],
             '$44inplace_add.10': [(<numba.core.ir.Assign object at 0x7f15916f41f0>,
                                    26)],
             '$54compare_op.2': [(<numba.core.ir.Assign object at 0x7f15916f4fa0>,
                                  50)],
             '$56pred': [(<numba.core.ir.Assign object at 0x7f15916f4c40>, 50)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7f15916f4fd0>,
                                   58)],
             '$60return_value.1': [(<numba.core.ir.Assign object at 0x7f15916f49d0>,
                                    58)],
             '$62load_global.0': [(<numba.core.ir.Assign object at 0x7f15916f5420>,
                                   62)],
             '$64load_method.1': [(<numba.core.ir.Assign object at 0x7f15916f5270>,
                                   62)],
             '$68call_method.3': [(<numba.core.ir.Assign object at 0x7f15916f5840>,
                                   62)],
             '$70unary_negative.4': [(<numba.core.ir.Assign object at 0x7f15916f58a0>,
                                      62)],
             '$72return_value.5': [(<numba.core.ir.Assign object at 0x7f15916f5660>,
                                    62)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f1591582140>,
                                0)],
             '$const10.3.2': [(<numba.core.ir.Assign object at 0x7f1591580c70>,
                               0)],
             '$const52.1.1': [(<numba.core.ir.Assign object at 0x7f15916f43d0>,
                               50)],
             '$phi24.0': [(<numba.core.ir.Assign object at 0x7f1591710160>, 0)],
             '$phi26.1': [(<numba.core.ir.Assign object at 0x7f1591581cf0>,
                           24)],
             'bool56': [(<numba.core.ir.Assign object at 0x7f15916f4bb0>, 50)],
             'dim': [(<numba.core.ir.Assign object at 0x7f15916f7e20>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f159133de70>, 26)],
             'result': [(<numba.core.ir.Assign object at 0x7f1591581cc0>, 0),
                        (<numba.core.ir.Assign object at 0x7f15916f42b0>, 26)],
             'x': [(<numba.core.ir.Assign object at 0x7f1591581180>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1591581b40>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15916f72e0>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15916f6e00>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15916f6e00>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15916f6e00>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $34binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.9 = $34binary_subscr.5 * $40binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $44inplace_add.10
DEBUG:numba.core.ssa:replaced with: result.1 = $44inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15916f6e00>
DEBUG:numba.core.ssa:on stmt: $const52.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.2 = result <= $const52.1.1
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.2, func=bool56, args=(Var($54compare_op.2, distances.py:491),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15916f6e00>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=$58load_global.0)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15916f6e00>
DEBUG:numba.core.ssa:on stmt: $62load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $64load_method.1 = getattr(value=$62load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $68call_method.3 = call $64load_method.1(result, func=$64load_method.1, args=[Var(result, distances.py:486)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70unary_negative.4 = unary(fn=<built-in function neg>, value=$68call_method.3)
DEBUG:numba.core.ssa:on stmt: $72return_value.5 = cast(value=$70unary_negative.4)
DEBUG:numba.core.ssa:on stmt: return $72return_value.5
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15916f7490>],
             26: [<numba.core.ir.Assign object at 0x7f15916f70a0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15916f7070>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15916f7070>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15916f7070>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $34binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.9 = $34binary_subscr.5 * $40binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 26
DEBUG:numba.core.ssa:idom 24 from label 26
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:find_def_from_top label 24
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 24
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:incoming_def result.1 = $44inplace_add.10
DEBUG:numba.core.ssa:replaced with: $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $44inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15916f7070>
DEBUG:numba.core.ssa:on stmt: $const52.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.2 = result <= $const52.1.1
DEBUG:numba.core.ssa:find_def var='result' stmt=$54compare_op.2 = result <= $const52.1.1
DEBUG:numba.core.ssa:find_def_from_top label 50
DEBUG:numba.core.ssa:idom 24 from label 50
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:replaced with: $54compare_op.2 = result.2 <= $const52.1.1
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.2, func=bool56, args=(Var($54compare_op.2, distances.py:491),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15916f7070>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=$58load_global.0)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15916f7070>
DEBUG:numba.core.ssa:on stmt: $62load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $64load_method.1 = getattr(value=$62load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $68call_method.3 = call $64load_method.1(result, func=$64load_method.1, args=[Var(result, distances.py:486)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='result' stmt=$68call_method.3 = call $64load_method.1(result, func=$64load_method.1, args=[Var(result, distances.py:486)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 62
DEBUG:numba.core.ssa:idom 50 from label 62
DEBUG:numba.core.ssa:find_def_from_bottom label 50
DEBUG:numba.core.ssa:find_def_from_top label 50
DEBUG:numba.core.ssa:idom 24 from label 50
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:replaced with: $68call_method.3 = call $64load_method.1(result.2, func=$64load_method.1, args=[Var(result.2, distances.py:488)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70unary_negative.4 = unary(fn=<built-in function neg>, value=$68call_method.3)
DEBUG:numba.core.ssa:on stmt: $72return_value.5 = cast(value=$70unary_negative.4)
DEBUG:numba.core.ssa:on stmt: return $72return_value.5
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=470)
           2	LOAD_CONST(arg=1, lineno=486)
           4	STORE_FAST(arg=2, lineno=486)
           6	LOAD_FAST(arg=0, lineno=487)
           8	LOAD_ATTR(arg=0, lineno=487)
          10	LOAD_CONST(arg=2, lineno=487)
          12	BINARY_SUBSCR(arg=None, lineno=487)
          14	STORE_FAST(arg=3, lineno=487)
          16	LOAD_GLOBAL(arg=1, lineno=488)
          18	LOAD_FAST(arg=3, lineno=488)
          20	CALL_FUNCTION(arg=1, lineno=488)
          22	GET_ITER(arg=None, lineno=488)
>         24	FOR_ITER(arg=12, lineno=488)
          26	STORE_FAST(arg=4, lineno=488)
          28	LOAD_FAST(arg=2, lineno=489)
          30	LOAD_FAST(arg=0, lineno=489)
          32	LOAD_FAST(arg=4, lineno=489)
          34	BINARY_SUBSCR(arg=None, lineno=489)
          36	LOAD_FAST(arg=1, lineno=489)
          38	LOAD_FAST(arg=4, lineno=489)
          40	BINARY_SUBSCR(arg=None, lineno=489)
          42	BINARY_MULTIPLY(arg=None, lineno=489)
          44	INPLACE_ADD(arg=None, lineno=489)
          46	STORE_FAST(arg=2, lineno=489)
          48	JUMP_ABSOLUTE(arg=13, lineno=489)
>         50	LOAD_FAST(arg=2, lineno=491)
          52	LOAD_CONST(arg=1, lineno=491)
          54	COMPARE_OP(arg=1, lineno=491)
          56	POP_JUMP_IF_FALSE(arg=32, lineno=491)
          58	LOAD_GLOBAL(arg=2, lineno=492)
          60	RETURN_VALUE(arg=None, lineno=492)
>         62	LOAD_GLOBAL(arg=3, lineno=494)
          64	LOAD_METHOD(arg=4, lineno=494)
          66	LOAD_FAST(arg=2, lineno=494)
          68	CALL_METHOD(arg=1, lineno=494)
          70	UNARY_NEGATIVE(arg=None, lineno=494)
          72	RETURN_VALUE(arg=None, lineno=494)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=470)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=486)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=486)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=487)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=487)
DEBUG:numba.core.byteflow:stack ['$x6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=487)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=487)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2', '$const10.3.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=STORE_FAST(arg=3, lineno=487)
DEBUG:numba.core.byteflow:stack ['$12binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=488)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=488)
DEBUG:numba.core.byteflow:stack ['$16load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_FUNCTION(arg=1, lineno=488)
DEBUG:numba.core.byteflow:stack ['$16load_global.5', '$dim18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=GET_ITER(arg=None, lineno=488)
DEBUG:numba.core.byteflow:stack ['$20call_function.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$22get_iter.8',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi24.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=24 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=24, inst=FOR_ITER(arg=12, lineno=488)
DEBUG:numba.core.byteflow:stack ['$phi24.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=('$phi24.0', '$24for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=0), State(pc_initial=26 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=2, lineno=491)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=491)
DEBUG:numba.core.byteflow:stack ['$result50.0']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=COMPARE_OP(arg=1, lineno=491)
DEBUG:numba.core.byteflow:stack ['$result50.0', '$const52.1.1']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=POP_JUMP_IF_FALSE(arg=32, lineno=491)
DEBUG:numba.core.byteflow:stack ['$54compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=2), State(pc_initial=58 nstack_initial=0), State(pc_initial=62 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=4, lineno=488)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=2, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=4, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$x30.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$x30.3', '$i32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=1, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$34binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=4, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$34binary_subscr.5', '$y36.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$34binary_subscr.5', '$y36.6', '$i38.7']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_MULTIPLY(arg=None, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$34binary_subscr.5', '$40binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=INPLACE_ADD(arg=None, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result28.2', '$42binary_multiply.9']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=2, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$44inplace_add.10']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=JUMP_ABSOLUTE(arg=13, lineno=489)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$phi26.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=62 nstack_initial=0), State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_GLOBAL(arg=2, lineno=492)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=RETURN_VALUE(arg=None, lineno=492)
DEBUG:numba.core.byteflow:stack ['$58load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=62 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_GLOBAL(arg=3, lineno=494)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_METHOD(arg=4, lineno=494)
DEBUG:numba.core.byteflow:stack ['$62load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=2, lineno=494)
DEBUG:numba.core.byteflow:stack ['$64load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=CALL_METHOD(arg=1, lineno=494)
DEBUG:numba.core.byteflow:stack ['$64load_method.1', '$result66.2']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=UNARY_NEGATIVE(arg=None, lineno=494)
DEBUG:numba.core.byteflow:stack ['$68call_method.3']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=494)
DEBUG:numba.core.byteflow:stack ['$70unary_negative.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=26 nstack_initial=2): {'$phi26.1'},
             State(pc_initial=50 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi26.1': State(pc_initial=24 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi26.0': {('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi24.0': {('$22get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi26.1': {('$24for_iter.2', State(pc_initial=24 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$22get_iter.8'},
             State(pc_initial=24 nstack_initial=1): {'$phi26.1': '$24for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$x6.1'}), (8, {'item': '$x6.1', 'res': '$8load_attr.2'}), (10, {'res': '$const10.3.2'}), (12, {'index': '$const10.3.2', 'target': '$8load_attr.2', 'res': '$12binary_subscr.4'}), (14, {'value': '$12binary_subscr.4'}), (16, {'res': '$16load_global.5'}), (18, {'res': '$dim18.6'}), (20, {'func': '$16load_global.5', 'args': ['$dim18.6'], 'res': '$20call_function.7'}), (22, {'value': '$20call_function.7', 'res': '$22get_iter.8'})), outgoing_phis={'$phi24.0': '$22get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$22get_iter.8',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'iterator': '$phi24.0', 'pair': '$24for_iter.1', 'indval': '$24for_iter.2', 'pred': '$24for_iter.3'}),), outgoing_phis={'$phi26.1': '$24for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: (), 26: ('$phi24.0', '$24for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=2):
AdaptBlockInfo(insts=((26, {'value': '$phi26.1'}), (28, {'res': '$result28.2'}), (30, {'res': '$x30.3'}), (32, {'res': '$i32.4'}), (34, {'index': '$i32.4', 'target': '$x30.3', 'res': '$34binary_subscr.5'}), (36, {'res': '$y36.6'}), (38, {'res': '$i38.7'}), (40, {'index': '$i38.7', 'target': '$y36.6', 'res': '$40binary_subscr.8'}), (42, {'lhs': '$34binary_subscr.5', 'rhs': '$40binary_subscr.8', 'res': '$42binary_multiply.9'}), (44, {'lhs': '$result28.2', 'rhs': '$42binary_multiply.9', 'res': '$44inplace_add.10'}), (46, {'value': '$44inplace_add.10'}), (48, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$phi26.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=0):
AdaptBlockInfo(insts=((50, {'res': '$result50.0'}), (52, {'res': '$const52.1.1'}), (54, {'lhs': '$result50.0', 'rhs': '$const52.1.1', 'res': '$54compare_op.2'}), (56, {'pred': '$54compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 62: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$58load_global.0'}), (60, {'retval': '$58load_global.0', 'castval': '$60return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$62load_global.0'}), (64, {'item': '$62load_global.0', 'res': '$64load_method.1'}), (66, {'res': '$result66.2'}), (68, {'func': '$64load_method.1', 'args': ['$result66.2'], 'res': '$68call_method.3'}), (70, {'value': '$68call_method.3', 'res': '$70unary_negative.4'}), (72, {'retval': '$70unary_negative.4', 'castval': '$72return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    $8load_attr.2 = getattr(value=x, attr=shape) ['$8load_attr.2', 'x']
    $const10.3.2 = const(int, 0)             ['$const10.3.2']
    dim = getitem(value=$8load_attr.2, index=$const10.3.2, fn=<built-in function getitem>) ['$8load_attr.2', '$const10.3.2', 'dim']
    $16load_global.5 = global(range: <class 'range'>) ['$16load_global.5']
    $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:487)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.5', '$20call_function.7', 'dim']
    $22get_iter.8 = getiter(value=$20call_function.7) ['$20call_function.7', '$22get_iter.8']
    $phi24.0 = $22get_iter.8                 ['$22get_iter.8', '$phi24.0']
    jump 24                                  []
label 24:
    $24for_iter.1 = iternext(value=$phi24.0) ['$24for_iter.1', '$phi24.0']
    $24for_iter.2 = pair_first(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.2']
    $24for_iter.3 = pair_second(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.3']
    $phi26.1 = $24for_iter.2                 ['$24for_iter.2', '$phi26.1']
    branch $24for_iter.3, 26, 50             ['$24for_iter.3']
label 26:
    i = $phi26.1                             ['$phi26.1', 'i']
    $34binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$34binary_subscr.5', 'i', 'x']
    $40binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$40binary_subscr.8', 'i', 'y']
    $42binary_multiply.9 = $34binary_subscr.5 * $40binary_subscr.8 ['$34binary_subscr.5', '$40binary_subscr.8', '$42binary_multiply.9']
    $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined) ['$42binary_multiply.9', '$44inplace_add.10', 'result']
    result = $44inplace_add.10               ['$44inplace_add.10', 'result']
    jump 24                                  []
label 50:
    $const52.1.1 = const(float, 0.0)         ['$const52.1.1']
    $54compare_op.2 = result <= $const52.1.1 ['$54compare_op.2', '$const52.1.1', 'result']
    bool56 = global(bool: <class 'bool'>)    ['bool56']
    $56pred = call bool56($54compare_op.2, func=bool56, args=(Var($54compare_op.2, distances.py:491),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.2', '$56pred', 'bool56']
    branch $56pred, 58, 62                   ['$56pred']
label 58:
    $58load_global.0 = global(FLOAT32_MAX: 3.4028235e+38) ['$58load_global.0']
    $60return_value.1 = cast(value=$58load_global.0) ['$58load_global.0', '$60return_value.1']
    return $60return_value.1                 ['$60return_value.1']
label 62:
    $62load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$62load_global.0']
    $64load_method.1 = getattr(value=$62load_global.0, attr=log2) ['$62load_global.0', '$64load_method.1']
    $68call_method.3 = call $64load_method.1(result, func=$64load_method.1, args=[Var(result, distances.py:486)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_method.1', '$68call_method.3', 'result']
    $70unary_negative.4 = unary(fn=<built-in function neg>, value=$68call_method.3) ['$68call_method.3', '$70unary_negative.4']
    $72return_value.5 = cast(value=$70unary_negative.4) ['$70unary_negative.4', '$72return_value.5']
    return $72return_value.5                 ['$72return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15915d0880>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15915d0880>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15915d0880>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $34binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.9 = $34binary_subscr.5 * $40binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $44inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15915d0880>
DEBUG:numba.core.ssa:on stmt: $const52.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.2 = result <= $const52.1.1
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.2, func=bool56, args=(Var($54compare_op.2, distances.py:491),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15915d0880>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=$58load_global.0)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15915d0880>
DEBUG:numba.core.ssa:on stmt: $62load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $64load_method.1 = getattr(value=$62load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $68call_method.3 = call $64load_method.1(result, func=$64load_method.1, args=[Var(result, distances.py:486)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70unary_negative.4 = unary(fn=<built-in function neg>, value=$68call_method.3)
DEBUG:numba.core.ssa:on stmt: $72return_value.5 = cast(value=$70unary_negative.4)
DEBUG:numba.core.ssa:on stmt: return $72return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16load_global.5': [(<numba.core.ir.Assign object at 0x7f15915e6290>,
                                   0)],
             '$20call_function.7': [(<numba.core.ir.Assign object at 0x7f15915e4040>,
                                     0)],
             '$22get_iter.8': [(<numba.core.ir.Assign object at 0x7f15915e4190>,
                                0)],
             '$24for_iter.1': [(<numba.core.ir.Assign object at 0x7f15915e64a0>,
                                24)],
             '$24for_iter.2': [(<numba.core.ir.Assign object at 0x7f15915e5c30>,
                                24)],
             '$24for_iter.3': [(<numba.core.ir.Assign object at 0x7f15915e49a0>,
                                24)],
             '$34binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f15915e6320>,
                                     26)],
             '$40binary_subscr.8': [(<numba.core.ir.Assign object at 0x7f15915e6410>,
                                     26)],
             '$42binary_multiply.9': [(<numba.core.ir.Assign object at 0x7f15915e4820>,
                                       26)],
             '$44inplace_add.10': [(<numba.core.ir.Assign object at 0x7f15915e5720>,
                                    26)],
             '$54compare_op.2': [(<numba.core.ir.Assign object at 0x7f15914a7580>,
                                  50)],
             '$56pred': [(<numba.core.ir.Assign object at 0x7f15915d1300>, 50)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7f15915d26e0>,
                                   58)],
             '$60return_value.1': [(<numba.core.ir.Assign object at 0x7f15915d2560>,
                                    58)],
             '$62load_global.0': [(<numba.core.ir.Assign object at 0x7f15915d1fc0>,
                                   62)],
             '$64load_method.1': [(<numba.core.ir.Assign object at 0x7f15915d2f20>,
                                   62)],
             '$68call_method.3': [(<numba.core.ir.Assign object at 0x7f15915d19f0>,
                                   62)],
             '$70unary_negative.4': [(<numba.core.ir.Assign object at 0x7f15915d3df0>,
                                      62)],
             '$72return_value.5': [(<numba.core.ir.Assign object at 0x7f15915d2380>,
                                    62)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f15915e5a20>,
                                0)],
             '$const10.3.2': [(<numba.core.ir.Assign object at 0x7f15915e5ab0>,
                               0)],
             '$const52.1.1': [(<numba.core.ir.Assign object at 0x7f15915e61a0>,
                               50)],
             '$phi24.0': [(<numba.core.ir.Assign object at 0x7f15913f8f70>, 0)],
             '$phi26.1': [(<numba.core.ir.Assign object at 0x7f15915e4f40>,
                           24)],
             'bool56': [(<numba.core.ir.Assign object at 0x7f15914a7dc0>, 50)],
             'dim': [(<numba.core.ir.Assign object at 0x7f15915d0850>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f15915e6f20>, 26)],
             'result': [(<numba.core.ir.Assign object at 0x7f15916f5c00>, 0),
                        (<numba.core.ir.Assign object at 0x7f15915e5390>, 26)],
             'x': [(<numba.core.ir.Assign object at 0x7f15916f7010>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f15916f46a0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15916c51e0>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15915d06a0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15915d06a0>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15915d06a0>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $34binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.9 = $34binary_subscr.5 * $40binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $44inplace_add.10
DEBUG:numba.core.ssa:replaced with: result.1 = $44inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15915d06a0>
DEBUG:numba.core.ssa:on stmt: $const52.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.2 = result <= $const52.1.1
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.2, func=bool56, args=(Var($54compare_op.2, distances.py:491),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15915d06a0>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=$58load_global.0)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15915d06a0>
DEBUG:numba.core.ssa:on stmt: $62load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $64load_method.1 = getattr(value=$62load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $68call_method.3 = call $64load_method.1(result, func=$64load_method.1, args=[Var(result, distances.py:486)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70unary_negative.4 = unary(fn=<built-in function neg>, value=$68call_method.3)
DEBUG:numba.core.ssa:on stmt: $72return_value.5 = cast(value=$70unary_negative.4)
DEBUG:numba.core.ssa:on stmt: return $72return_value.5
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15915d0970>],
             26: [<numba.core.ir.Assign object at 0x7f15915d03d0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15915d05e0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15915d05e0>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15915d05e0>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $34binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.9 = $34binary_subscr.5 * $40binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 26
DEBUG:numba.core.ssa:idom 24 from label 26
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:find_def_from_top label 24
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 24
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:incoming_def result.1 = $44inplace_add.10
DEBUG:numba.core.ssa:replaced with: $44inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$42binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $44inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15915d05e0>
DEBUG:numba.core.ssa:on stmt: $const52.1.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.2 = result <= $const52.1.1
DEBUG:numba.core.ssa:find_def var='result' stmt=$54compare_op.2 = result <= $const52.1.1
DEBUG:numba.core.ssa:find_def_from_top label 50
DEBUG:numba.core.ssa:idom 24 from label 50
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:replaced with: $54compare_op.2 = result.2 <= $const52.1.1
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.2, func=bool56, args=(Var($54compare_op.2, distances.py:491),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15915d05e0>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=$58load_global.0)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15915d05e0>
DEBUG:numba.core.ssa:on stmt: $62load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $64load_method.1 = getattr(value=$62load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $68call_method.3 = call $64load_method.1(result, func=$64load_method.1, args=[Var(result, distances.py:486)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='result' stmt=$68call_method.3 = call $64load_method.1(result, func=$64load_method.1, args=[Var(result, distances.py:486)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 62
DEBUG:numba.core.ssa:idom 50 from label 62
DEBUG:numba.core.ssa:find_def_from_bottom label 50
DEBUG:numba.core.ssa:find_def_from_top label 50
DEBUG:numba.core.ssa:idom 24 from label 50
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:replaced with: $68call_method.3 = call $64load_method.1(result.2, func=$64load_method.1, args=[Var(result.2, distances.py:488)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70unary_negative.4 = unary(fn=<built-in function neg>, value=$68call_method.3)
DEBUG:numba.core.ssa:on stmt: $72return_value.5 = cast(value=$70unary_negative.4)
DEBUG:numba.core.ssa:on stmt: return $72return_value.5
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=585)
           2	LOAD_CONST(arg=1, lineno=603)
           4	STORE_FAST(arg=2, lineno=603)
           6	LOAD_CONST(arg=1, lineno=604)
           8	STORE_FAST(arg=3, lineno=604)
          10	LOAD_CONST(arg=1, lineno=605)
          12	STORE_FAST(arg=4, lineno=605)
          14	LOAD_FAST(arg=0, lineno=606)
          16	LOAD_ATTR(arg=0, lineno=606)
          18	LOAD_CONST(arg=2, lineno=606)
          20	BINARY_SUBSCR(arg=None, lineno=606)
          22	STORE_FAST(arg=5, lineno=606)
          24	LOAD_GLOBAL(arg=1, lineno=608)
          26	LOAD_FAST(arg=5, lineno=608)
          28	CALL_FUNCTION(arg=1, lineno=608)
          30	GET_ITER(arg=None, lineno=608)
>         32	FOR_ITER(arg=27, lineno=608)
          34	STORE_FAST(arg=6, lineno=608)
          36	LOAD_FAST(arg=2, lineno=609)
          38	LOAD_GLOBAL(arg=2, lineno=609)
          40	LOAD_METHOD(arg=3, lineno=609)
          42	LOAD_FAST(arg=0, lineno=609)
          44	LOAD_FAST(arg=6, lineno=609)
          46	BINARY_SUBSCR(arg=None, lineno=609)
          48	LOAD_FAST(arg=1, lineno=609)
          50	LOAD_FAST(arg=6, lineno=609)
          52	BINARY_SUBSCR(arg=None, lineno=609)
          54	BINARY_MULTIPLY(arg=None, lineno=609)
          56	CALL_METHOD(arg=1, lineno=609)
          58	INPLACE_ADD(arg=None, lineno=609)
          60	STORE_FAST(arg=2, lineno=609)
          62	LOAD_FAST(arg=3, lineno=610)
          64	LOAD_FAST(arg=0, lineno=610)
          66	LOAD_FAST(arg=6, lineno=610)
          68	BINARY_SUBSCR(arg=None, lineno=610)
          70	INPLACE_ADD(arg=None, lineno=610)
          72	STORE_FAST(arg=3, lineno=610)
          74	LOAD_FAST(arg=4, lineno=611)
          76	LOAD_FAST(arg=1, lineno=611)
          78	LOAD_FAST(arg=6, lineno=611)
          80	BINARY_SUBSCR(arg=None, lineno=611)
          82	INPLACE_ADD(arg=None, lineno=611)
          84	STORE_FAST(arg=4, lineno=611)
          86	JUMP_ABSOLUTE(arg=17, lineno=611)
>         88	LOAD_FAST(arg=3, lineno=613)
          90	LOAD_CONST(arg=2, lineno=613)
          92	COMPARE_OP(arg=2, lineno=613)
          94	POP_JUMP_IF_FALSE(arg=55, lineno=613)
          96	LOAD_FAST(arg=4, lineno=613)
          98	LOAD_CONST(arg=2, lineno=613)
         100	COMPARE_OP(arg=2, lineno=613)
         102	POP_JUMP_IF_FALSE(arg=55, lineno=613)
         104	LOAD_CONST(arg=1, lineno=614)
         106	RETURN_VALUE(arg=None, lineno=614)
>        108	LOAD_FAST(arg=3, lineno=615)
         110	LOAD_CONST(arg=2, lineno=615)
         112	COMPARE_OP(arg=2, lineno=615)
         114	POP_JUMP_IF_TRUE(arg=63, lineno=615)
         116	LOAD_FAST(arg=4, lineno=615)
         118	LOAD_CONST(arg=2, lineno=615)
         120	COMPARE_OP(arg=2, lineno=615)
         122	POP_JUMP_IF_FALSE(arg=65, lineno=615)
>        124	LOAD_CONST(arg=3, lineno=616)
         126	RETURN_VALUE(arg=None, lineno=616)
>        128	LOAD_GLOBAL(arg=2, lineno=618)
         130	LOAD_METHOD(arg=3, lineno=618)
         132	LOAD_CONST(arg=4, lineno=618)
         134	LOAD_FAST(arg=2, lineno=618)
         136	LOAD_GLOBAL(arg=2, lineno=618)
         138	LOAD_METHOD(arg=3, lineno=618)
         140	LOAD_FAST(arg=3, lineno=618)
         142	LOAD_FAST(arg=4, lineno=618)
         144	BINARY_MULTIPLY(arg=None, lineno=618)
         146	CALL_METHOD(arg=1, lineno=618)
         148	BINARY_TRUE_DIVIDE(arg=None, lineno=618)
         150	BINARY_SUBTRACT(arg=None, lineno=618)
         152	CALL_METHOD(arg=1, lineno=618)
         154	RETURN_VALUE(arg=None, lineno=618)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=585)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=603)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=603)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=604)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=604)
DEBUG:numba.core.byteflow:stack ['$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=605)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_FAST(arg=4, lineno=605)
DEBUG:numba.core.byteflow:stack ['$const10.2.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=606)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_ATTR(arg=0, lineno=606)
DEBUG:numba.core.byteflow:stack ['$x14.3']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=606)
DEBUG:numba.core.byteflow:stack ['$16load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=606)
DEBUG:numba.core.byteflow:stack ['$16load_attr.4', '$const18.5.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=5, lineno=606)
DEBUG:numba.core.byteflow:stack ['$20binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_GLOBAL(arg=1, lineno=608)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=608)
DEBUG:numba.core.byteflow:stack ['$24load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=608)
DEBUG:numba.core.byteflow:stack ['$24load_global.7', '$dim26.8']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=608)
DEBUG:numba.core.byteflow:stack ['$28call_function.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.10',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=27, lineno=608)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=88, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=88 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=88 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=3, lineno=613)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=2, lineno=613)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x88.0']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=COMPARE_OP(arg=2, lineno=613)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x88.0', '$const90.1.2']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=POP_JUMP_IF_FALSE(arg=55, lineno=613)
DEBUG:numba.core.byteflow:stack ['$92compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0), Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=96 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=6, lineno=608)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=2, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_METHOD(arg=3, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$38load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=6, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$x42.5']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$x42.5', '$i44.6']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7', '$y48.8']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7', '$y48.8', '$i50.9']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=BINARY_MULTIPLY(arg=None, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7', '$52binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$54binary_multiply.11']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=INPLACE_ADD(arg=None, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$56call_method.12']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=STORE_FAST(arg=2, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$58inplace_add.13']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=3, lineno=610)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=610)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=610)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14', '$x64.15']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=610)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14', '$x64.15', '$i66.16']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=INPLACE_ADD(arg=None, lineno=610)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14', '$68binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=STORE_FAST(arg=3, lineno=610)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$70inplace_add.18']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=1, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=6, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19', '$y76.20']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19', '$y76.20', '$i78.21']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=INPLACE_ADD(arg=None, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19', '$80binary_subscr.22']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=STORE_FAST(arg=4, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$82inplace_add.23']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=JUMP_ABSOLUTE(arg=17, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=96 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=4, lineno=613)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=2, lineno=613)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y96.0']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=COMPARE_OP(arg=2, lineno=613)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y96.0', '$const98.1.2']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=POP_JUMP_IF_FALSE(arg=55, lineno=613)
DEBUG:numba.core.byteflow:stack ['$100compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=32 nstack_initial=1), State(pc_initial=104 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=3, lineno=615)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=615)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x108.0']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=COMPARE_OP(arg=2, lineno=615)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x108.0', '$const110.1.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=POP_JUMP_IF_TRUE(arg=63, lineno=615)
DEBUG:numba.core.byteflow:stack ['$112compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=124, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=104 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=1, lineno=614)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=614)
DEBUG:numba.core.byteflow:stack ['$const104.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=4, lineno=615)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_CONST(arg=2, lineno=615)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y116.0']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=COMPARE_OP(arg=2, lineno=615)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y116.0', '$const118.1.2']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=POP_JUMP_IF_FALSE(arg=65, lineno=615)
DEBUG:numba.core.byteflow:stack ['$120compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=124, stack=(), blockstack=(), npush=0), Edge(pc=128, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=124 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=124 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_CONST(arg=3, lineno=616)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=RETURN_VALUE(arg=None, lineno=616)
DEBUG:numba.core.byteflow:stack ['$const124.0.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=128 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_GLOBAL(arg=2, lineno=618)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_METHOD(arg=3, lineno=618)
DEBUG:numba.core.byteflow:stack ['$128load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_CONST(arg=4, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_FAST(arg=2, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_GLOBAL(arg=2, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_METHOD(arg=3, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3', '$136load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=3, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3', '$138load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_FAST(arg=4, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3', '$138load_method.5', '$l1_norm_x140.6']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=BINARY_MULTIPLY(arg=None, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3', '$138load_method.5', '$l1_norm_x140.6', '$l1_norm_y142.7']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=CALL_METHOD(arg=1, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3', '$138load_method.5', '$144binary_multiply.8']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3', '$146call_method.9']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=BINARY_SUBTRACT(arg=None, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$148binary_true_divide.10']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=CALL_METHOD(arg=1, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$150binary_subtract.11']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=RETURN_VALUE(arg=None, lineno=618)
DEBUG:numba.core.byteflow:stack ['$152call_method.12']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=88 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=128 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.10', State(pc_initial=0 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$30get_iter.10'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$const6.1.1'}), (8, {'value': '$const6.1.1'}), (10, {'res': '$const10.2.1'}), (12, {'value': '$const10.2.1'}), (14, {'res': '$x14.3'}), (16, {'item': '$x14.3', 'res': '$16load_attr.4'}), (18, {'res': '$const18.5.2'}), (20, {'index': '$const18.5.2', 'target': '$16load_attr.4', 'res': '$20binary_subscr.6'}), (22, {'value': '$20binary_subscr.6'}), (24, {'res': '$24load_global.7'}), (26, {'res': '$dim26.8'}), (28, {'func': '$24load_global.7', 'args': ['$dim26.8'], 'res': '$28call_function.9'}), (30, {'value': '$28call_function.9', 'res': '$30get_iter.10'})), outgoing_phis={'$phi32.0': '$30get_iter.10'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.10',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$result36.2'}), (38, {'res': '$38load_global.3'}), (40, {'item': '$38load_global.3', 'res': '$40load_method.4'}), (42, {'res': '$x42.5'}), (44, {'res': '$i44.6'}), (46, {'index': '$i44.6', 'target': '$x42.5', 'res': '$46binary_subscr.7'}), (48, {'res': '$y48.8'}), (50, {'res': '$i50.9'}), (52, {'index': '$i50.9', 'target': '$y48.8', 'res': '$52binary_subscr.10'}), (54, {'lhs': '$46binary_subscr.7', 'rhs': '$52binary_subscr.10', 'res': '$54binary_multiply.11'}), (56, {'func': '$40load_method.4', 'args': ['$54binary_multiply.11'], 'res': '$56call_method.12'}), (58, {'lhs': '$result36.2', 'rhs': '$56call_method.12', 'res': '$58inplace_add.13'}), (60, {'value': '$58inplace_add.13'}), (62, {'res': '$l1_norm_x62.14'}), (64, {'res': '$x64.15'}), (66, {'res': '$i66.16'}), (68, {'index': '$i66.16', 'target': '$x64.15', 'res': '$68binary_subscr.17'}), (70, {'lhs': '$l1_norm_x62.14', 'rhs': '$68binary_subscr.17', 'res': '$70inplace_add.18'}), (72, {'value': '$70inplace_add.18'}), (74, {'res': '$l1_norm_y74.19'}), (76, {'res': '$y76.20'}), (78, {'res': '$i78.21'}), (80, {'index': '$i78.21', 'target': '$y76.20', 'res': '$80binary_subscr.22'}), (82, {'lhs': '$l1_norm_y74.19', 'rhs': '$80binary_subscr.22', 'res': '$82inplace_add.23'}), (84, {'value': '$82inplace_add.23'}), (86, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$l1_norm_x88.0'}), (90, {'res': '$const90.1.2'}), (92, {'lhs': '$l1_norm_x88.0', 'rhs': '$const90.1.2', 'res': '$92compare_op.2'}), (94, {'pred': '$92compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: (), 108: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$l1_norm_y96.0'}), (98, {'res': '$const98.1.2'}), (100, {'lhs': '$l1_norm_y96.0', 'rhs': '$const98.1.2', 'res': '$100compare_op.2'}), (102, {'pred': '$100compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 108: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$const104.0.1'}), (106, {'retval': '$const104.0.1', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$l1_norm_x108.0'}), (110, {'res': '$const110.1.2'}), (112, {'lhs': '$l1_norm_x108.0', 'rhs': '$const110.1.2', 'res': '$112compare_op.2'}), (114, {'pred': '$112compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 124: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$l1_norm_y116.0'}), (118, {'res': '$const118.1.2'}), (120, {'lhs': '$l1_norm_y116.0', 'rhs': '$const118.1.2', 'res': '$120compare_op.2'}), (122, {'pred': '$120compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: (), 128: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$const124.0.3'}), (126, {'retval': '$const124.0.3', 'castval': '$126return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=128 nstack_initial=0):
AdaptBlockInfo(insts=((128, {'res': '$128load_global.0'}), (130, {'item': '$128load_global.0', 'res': '$130load_method.1'}), (132, {'res': '$const132.2.4'}), (134, {'res': '$result134.3'}), (136, {'res': '$136load_global.4'}), (138, {'item': '$136load_global.4', 'res': '$138load_method.5'}), (140, {'res': '$l1_norm_x140.6'}), (142, {'res': '$l1_norm_y142.7'}), (144, {'lhs': '$l1_norm_x140.6', 'rhs': '$l1_norm_y142.7', 'res': '$144binary_multiply.8'}), (146, {'func': '$138load_method.5', 'args': ['$144binary_multiply.8'], 'res': '$146call_method.9'}), (148, {'lhs': '$result134.3', 'rhs': '$146call_method.9', 'res': '$148binary_true_divide.10'}), (150, {'lhs': '$const132.2.4', 'rhs': '$148binary_true_divide.10', 'res': '$150binary_subtract.11'}), (152, {'func': '$130load_method.1', 'args': ['$150binary_subtract.11'], 'res': '$152call_method.12'}), (154, {'retval': '$152call_method.12', 'castval': '$154return_value.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    l1_norm_x = const(float, 0.0)            ['l1_norm_x']
    l1_norm_y = const(float, 0.0)            ['l1_norm_y']
    $16load_attr.4 = getattr(value=x, attr=shape) ['$16load_attr.4', 'x']
    $const18.5.2 = const(int, 0)             ['$const18.5.2']
    dim = getitem(value=$16load_attr.4, index=$const18.5.2, fn=<built-in function getitem>) ['$16load_attr.4', '$const18.5.2', 'dim']
    $24load_global.7 = global(range: <class 'range'>) ['$24load_global.7']
    $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.7', '$28call_function.9', 'dim']
    $30get_iter.10 = getiter(value=$28call_function.9) ['$28call_function.9', '$30get_iter.10']
    $phi32.0 = $30get_iter.10                ['$30get_iter.10', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 88             ['$32for_iter.3']
label 34:
    i = $phi34.1                             ['$phi34.1', 'i']
    $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$38load_global.3']
    $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt) ['$38load_global.3', '$40load_method.4']
    $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$46binary_subscr.7', 'i', 'x']
    $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$52binary_subscr.10', 'i', 'y']
    $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10 ['$46binary_subscr.7', '$52binary_subscr.10', '$54binary_multiply.11']
    $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_method.4', '$54binary_multiply.11', '$56call_method.12']
    $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined) ['$56call_method.12', '$58inplace_add.13', 'result']
    result = $58inplace_add.13               ['$58inplace_add.13', 'result']
    $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$68binary_subscr.17', 'i', 'x']
    $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined) ['$68binary_subscr.17', '$70inplace_add.18', 'l1_norm_x']
    l1_norm_x = $70inplace_add.18            ['$70inplace_add.18', 'l1_norm_x']
    $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$80binary_subscr.22', 'i', 'y']
    $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined) ['$80binary_subscr.22', '$82inplace_add.23', 'l1_norm_y']
    l1_norm_y = $82inplace_add.23            ['$82inplace_add.23', 'l1_norm_y']
    jump 32                                  []
label 88:
    $const90.1.2 = const(int, 0)             ['$const90.1.2']
    $92compare_op.2 = l1_norm_x == $const90.1.2 ['$92compare_op.2', '$const90.1.2', 'l1_norm_x']
    bool94 = global(bool: <class 'bool'>)    ['bool94']
    $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None) ['$92compare_op.2', '$94pred', 'bool94']
    branch $94pred, 96, 108                  ['$94pred']
label 96:
    $const98.1.2 = const(int, 0)             ['$const98.1.2']
    $100compare_op.2 = l1_norm_y == $const98.1.2 ['$100compare_op.2', '$const98.1.2', 'l1_norm_y']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None) ['$100compare_op.2', '$102pred', 'bool102']
    branch $102pred, 104, 108                ['$102pred']
label 104:
    $const104.0.1 = const(float, 0.0)        ['$const104.0.1']
    $106return_value.1 = cast(value=$const104.0.1) ['$106return_value.1', '$const104.0.1']
    return $106return_value.1                ['$106return_value.1']
label 108:
    $const110.1.2 = const(int, 0)            ['$const110.1.2']
    $112compare_op.2 = l1_norm_x == $const110.1.2 ['$112compare_op.2', '$const110.1.2', 'l1_norm_x']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None) ['$112compare_op.2', '$114pred', 'bool114']
    branch $114pred, 124, 116                ['$114pred']
label 116:
    $const118.1.2 = const(int, 0)            ['$const118.1.2']
    $120compare_op.2 = l1_norm_y == $const118.1.2 ['$120compare_op.2', '$const118.1.2', 'l1_norm_y']
    bool122 = global(bool: <class 'bool'>)   ['bool122']
    $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None) ['$120compare_op.2', '$122pred', 'bool122']
    branch $122pred, 124, 128                ['$122pred']
label 124:
    $const124.0.3 = const(float, 1.0)        ['$const124.0.3']
    $126return_value.1 = cast(value=$const124.0.3) ['$126return_value.1', '$const124.0.3']
    return $126return_value.1                ['$126return_value.1']
label 128:
    $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$128load_global.0']
    $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt) ['$128load_global.0', '$130load_method.1']
    $const132.2.4 = const(int, 1)            ['$const132.2.4']
    $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$136load_global.4']
    $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt) ['$136load_global.4', '$138load_method.5']
    $144binary_multiply.8 = l1_norm_x * l1_norm_y ['$144binary_multiply.8', 'l1_norm_x', 'l1_norm_y']
    $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None) ['$138load_method.5', '$144binary_multiply.8', '$146call_method.9']
    $148binary_true_divide.10 = result / $146call_method.9 ['$146call_method.9', '$148binary_true_divide.10', 'result']
    $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10 ['$148binary_true_divide.10', '$150binary_subtract.11', '$const132.2.4']
    $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None) ['$130load_method.1', '$150binary_subtract.11', '$152call_method.12']
    $154return_value.13 = cast(value=$152call_method.12) ['$152call_method.12', '$154return_value.13']
    return $154return_value.13               ['$154return_value.13']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15913a7fd0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15913a7fd0>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15913a7fd0>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15913a7fd0>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block analysis pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15913a7fd0>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15913a7fd0>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15913a7fd0>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block analysis pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15913a7fd0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block analysis pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15913a7fd0>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15913a7fd0>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100compare_op.2': [(<numba.core.ir.Assign object at 0x7f15913b7940>,
                                   96)],
             '$102pred': [(<numba.core.ir.Assign object at 0x7f15913b7bb0>,
                           96)],
             '$106return_value.1': [(<numba.core.ir.Assign object at 0x7f15913b7f70>,
                                     104)],
             '$112compare_op.2': [(<numba.core.ir.Assign object at 0x7f15913a4520>,
                                   108)],
             '$114pred': [(<numba.core.ir.Assign object at 0x7f15913a4790>,
                           108)],
             '$120compare_op.2': [(<numba.core.ir.Assign object at 0x7f15913a4ca0>,
                                   116)],
             '$122pred': [(<numba.core.ir.Assign object at 0x7f15913a4f10>,
                           116)],
             '$126return_value.1': [(<numba.core.ir.Assign object at 0x7f15913a52d0>,
                                     124)],
             '$128load_global.0': [(<numba.core.ir.Assign object at 0x7f15913a5570>,
                                    128)],
             '$130load_method.1': [(<numba.core.ir.Assign object at 0x7f15913a56f0>,
                                    128)],
             '$136load_global.4': [(<numba.core.ir.Assign object at 0x7f15913a5b10>,
                                    128)],
             '$138load_method.5': [(<numba.core.ir.Assign object at 0x7f15913a5c90>,
                                    128)],
             '$144binary_multiply.8': [(<numba.core.ir.Assign object at 0x7f15913a6080>,
                                        128)],
             '$146call_method.9': [(<numba.core.ir.Assign object at 0x7f15913a6260>,
                                    128)],
             '$148binary_true_divide.10': [(<numba.core.ir.Assign object at 0x7f15913a6380>,
                                            128)],
             '$150binary_subtract.11': [(<numba.core.ir.Assign object at 0x7f15913a6500>,
                                         128)],
             '$152call_method.12': [(<numba.core.ir.Assign object at 0x7f15913a66e0>,
                                     128)],
             '$154return_value.13': [(<numba.core.ir.Assign object at 0x7f15913a67d0>,
                                      128)],
             '$16load_attr.4': [(<numba.core.ir.Assign object at 0x7f15913b4280>,
                                 0)],
             '$24load_global.7': [(<numba.core.ir.Assign object at 0x7f15913b4820>,
                                   0)],
             '$28call_function.9': [(<numba.core.ir.Assign object at 0x7f15913b4b20>,
                                     0)],
             '$30get_iter.10': [(<numba.core.ir.Assign object at 0x7f15913b4c40>,
                                 0)],
             '$32for_iter.1': [(<numba.core.ir.Assign object at 0x7f15913b4d90>,
                                32)],
             '$32for_iter.2': [(<numba.core.ir.Assign object at 0x7f15913b4eb0>,
                                32)],
             '$32for_iter.3': [(<numba.core.ir.Assign object at 0x7f15913b4fd0>,
                                32)],
             '$38load_global.3': [(<numba.core.ir.Assign object at 0x7f15913b5540>,
                                   34)],
             '$40load_method.4': [(<numba.core.ir.Assign object at 0x7f15913b56c0>,
                                   34)],
             '$46binary_subscr.7': [(<numba.core.ir.Assign object at 0x7f15913b5ab0>,
                                     34)],
             '$52binary_subscr.10': [(<numba.core.ir.Assign object at 0x7f15913b5e70>,
                                      34)],
             '$54binary_multiply.11': [(<numba.core.ir.Assign object at 0x7f15913b5ff0>,
                                        34)],
             '$56call_method.12': [(<numba.core.ir.Assign object at 0x7f15913b61d0>,
                                    34)],
             '$58inplace_add.13': [(<numba.core.ir.Assign object at 0x7f15913b62f0>,
                                    34)],
             '$68binary_subscr.17': [(<numba.core.ir.Assign object at 0x7f15913b6890>,
                                      34)],
             '$70inplace_add.18': [(<numba.core.ir.Assign object at 0x7f15913b6a10>,
                                    34)],
             '$80binary_subscr.22': [(<numba.core.ir.Assign object at 0x7f15913b6e00>,
                                      34)],
             '$82inplace_add.23': [(<numba.core.ir.Assign object at 0x7f15913b6f80>,
                                    34)],
             '$92compare_op.2': [(<numba.core.ir.Assign object at 0x7f15913b71c0>,
                                  88)],
             '$94pred': [(<numba.core.ir.Assign object at 0x7f15913b7430>, 88)],
             '$const104.0.1': [(<numba.core.ir.Assign object at 0x7f15913b7df0>,
                                104)],
             '$const110.1.2': [(<numba.core.ir.Assign object at 0x7f15913a4370>,
                                108)],
             '$const118.1.2': [(<numba.core.ir.Assign object at 0x7f15913a4af0>,
                                116)],
             '$const124.0.3': [(<numba.core.ir.Assign object at 0x7f15913a5150>,
                                124)],
             '$const132.2.4': [(<numba.core.ir.Assign object at 0x7f15913a5870>,
                                128)],
             '$const18.5.2': [(<numba.core.ir.Assign object at 0x7f15913b4400>,
                               0)],
             '$const90.1.2': [(<numba.core.ir.Assign object at 0x7f15913b66e0>,
                               88)],
             '$const98.1.2': [(<numba.core.ir.Assign object at 0x7f15913b7790>,
                               96)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x7f159123baf0>, 0)],
             '$phi34.1': [(<numba.core.ir.Assign object at 0x7f15913b4ca0>,
                           32)],
             'bool102': [(<numba.core.ir.Assign object at 0x7f15913b7a90>, 96)],
             'bool114': [(<numba.core.ir.Assign object at 0x7f15913a4670>,
                          108)],
             'bool122': [(<numba.core.ir.Assign object at 0x7f15913a4df0>,
                          116)],
             'bool94': [(<numba.core.ir.Assign object at 0x7f15913b7310>, 88)],
             'dim': [(<numba.core.ir.Assign object at 0x7f15913a7670>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f15913b52a0>, 34)],
             'l1_norm_x': [(<numba.core.ir.Assign object at 0x7f159123bbe0>, 0),
                           (<numba.core.ir.Assign object at 0x7f15913b6ad0>,
                            34)],
             'l1_norm_y': [(<numba.core.ir.Assign object at 0x7f159123be80>, 0),
                           (<numba.core.ir.Assign object at 0x7f15913b7040>,
                            34)],
             'result': [(<numba.core.ir.Assign object at 0x7f159123a6e0>, 0),
                        (<numba.core.ir.Assign object at 0x7f15913b63b0>, 34)],
             'x': [(<numba.core.ir.Assign object at 0x7f159123a620>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f159123a980>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15913a7fd0>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $58inplace_add.13
DEBUG:numba.core.ssa:replaced with: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15913a6e30>],
             34: [<numba.core.ir.Assign object at 0x7f15913a6dd0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:replaced with: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a68f0>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result / $146call_method.9
DEBUG:numba.core.ssa:find_def var='result' stmt=$148binary_true_divide.10 = result / $146call_method.9
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $148binary_true_divide.10 = result.2 / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.ssa:Fix SSA violator on var l1_norm_x
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7c10>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: l1_norm_x
DEBUG:numba.core.ssa:replaced with: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7c10>
DEBUG:numba.core.ssa:on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:603), Var(result.1, distances.py:609)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7c10>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:replaced with: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7c10>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7c10>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7c10>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7c10>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7c10>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7c10>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7c10>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result.2 / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15913a7340>],
             34: [<numba.core.ir.Assign object at 0x7f15913a7be0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a73a0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a73a0>
DEBUG:numba.core.ssa:on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:603), Var(result.1, distances.py:609)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a73a0>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node l1_norm_x.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:replaced with: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x.2, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a73a0>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $92compare_op.2 = l1_norm_x.2 == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a73a0>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a73a0>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a73a0>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $112compare_op.2 = l1_norm_x.2 == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a73a0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a73a0>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a73a0>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$144binary_multiply.8 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $144binary_multiply.8 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result.2 / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.ssa:Fix SSA violator on var l1_norm_y
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7190>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: l1_norm_y
DEBUG:numba.core.ssa:replaced with: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7190>
DEBUG:numba.core.ssa:on stmt: l1_norm_x.2 = phi(incoming_values=[Var(l1_norm_x, distances.py:604), Var(l1_norm_x.1, distances.py:610)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:603), Var(result.1, distances.py:609)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7190>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x.2, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:replaced with: l1_norm_y.1 = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7190>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x.2 == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7190>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7190>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7190>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x.2 == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7190>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7190>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15913a7190>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result.2 / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15913a7370>],
             34: [<numba.core.ir.Assign object at 0x7f15913a6ef0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a7a90>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a7a90>
DEBUG:numba.core.ssa:on stmt: l1_norm_x.2 = phi(incoming_values=[Var(l1_norm_x, distances.py:604), Var(l1_norm_x.1, distances.py:610)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:603), Var(result.1, distances.py:609)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a7a90>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x.2, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node l1_norm_y.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def l1_norm_y.1 = $82inplace_add.23
DEBUG:numba.core.ssa:replaced with: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y.2, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y.1 = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a7a90>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x.2 == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a7a90>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:find_def_from_top label 96
DEBUG:numba.core.ssa:idom 88 from label 96
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $100compare_op.2 = l1_norm_y.2 == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a7a90>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a7a90>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x.2 == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a7a90>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $120compare_op.2 = l1_norm_y.2 == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a7a90>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15913a7a90>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$144binary_multiply.8 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $144binary_multiply.8 = l1_norm_x.2 * l1_norm_y.2
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result.2 / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=585)
           2	LOAD_CONST(arg=1, lineno=603)
           4	STORE_FAST(arg=2, lineno=603)
           6	LOAD_CONST(arg=1, lineno=604)
           8	STORE_FAST(arg=3, lineno=604)
          10	LOAD_CONST(arg=1, lineno=605)
          12	STORE_FAST(arg=4, lineno=605)
          14	LOAD_FAST(arg=0, lineno=606)
          16	LOAD_ATTR(arg=0, lineno=606)
          18	LOAD_CONST(arg=2, lineno=606)
          20	BINARY_SUBSCR(arg=None, lineno=606)
          22	STORE_FAST(arg=5, lineno=606)
          24	LOAD_GLOBAL(arg=1, lineno=608)
          26	LOAD_FAST(arg=5, lineno=608)
          28	CALL_FUNCTION(arg=1, lineno=608)
          30	GET_ITER(arg=None, lineno=608)
>         32	FOR_ITER(arg=27, lineno=608)
          34	STORE_FAST(arg=6, lineno=608)
          36	LOAD_FAST(arg=2, lineno=609)
          38	LOAD_GLOBAL(arg=2, lineno=609)
          40	LOAD_METHOD(arg=3, lineno=609)
          42	LOAD_FAST(arg=0, lineno=609)
          44	LOAD_FAST(arg=6, lineno=609)
          46	BINARY_SUBSCR(arg=None, lineno=609)
          48	LOAD_FAST(arg=1, lineno=609)
          50	LOAD_FAST(arg=6, lineno=609)
          52	BINARY_SUBSCR(arg=None, lineno=609)
          54	BINARY_MULTIPLY(arg=None, lineno=609)
          56	CALL_METHOD(arg=1, lineno=609)
          58	INPLACE_ADD(arg=None, lineno=609)
          60	STORE_FAST(arg=2, lineno=609)
          62	LOAD_FAST(arg=3, lineno=610)
          64	LOAD_FAST(arg=0, lineno=610)
          66	LOAD_FAST(arg=6, lineno=610)
          68	BINARY_SUBSCR(arg=None, lineno=610)
          70	INPLACE_ADD(arg=None, lineno=610)
          72	STORE_FAST(arg=3, lineno=610)
          74	LOAD_FAST(arg=4, lineno=611)
          76	LOAD_FAST(arg=1, lineno=611)
          78	LOAD_FAST(arg=6, lineno=611)
          80	BINARY_SUBSCR(arg=None, lineno=611)
          82	INPLACE_ADD(arg=None, lineno=611)
          84	STORE_FAST(arg=4, lineno=611)
          86	JUMP_ABSOLUTE(arg=17, lineno=611)
>         88	LOAD_FAST(arg=3, lineno=613)
          90	LOAD_CONST(arg=2, lineno=613)
          92	COMPARE_OP(arg=2, lineno=613)
          94	POP_JUMP_IF_FALSE(arg=55, lineno=613)
          96	LOAD_FAST(arg=4, lineno=613)
          98	LOAD_CONST(arg=2, lineno=613)
         100	COMPARE_OP(arg=2, lineno=613)
         102	POP_JUMP_IF_FALSE(arg=55, lineno=613)
         104	LOAD_CONST(arg=1, lineno=614)
         106	RETURN_VALUE(arg=None, lineno=614)
>        108	LOAD_FAST(arg=3, lineno=615)
         110	LOAD_CONST(arg=2, lineno=615)
         112	COMPARE_OP(arg=2, lineno=615)
         114	POP_JUMP_IF_TRUE(arg=63, lineno=615)
         116	LOAD_FAST(arg=4, lineno=615)
         118	LOAD_CONST(arg=2, lineno=615)
         120	COMPARE_OP(arg=2, lineno=615)
         122	POP_JUMP_IF_FALSE(arg=65, lineno=615)
>        124	LOAD_CONST(arg=3, lineno=616)
         126	RETURN_VALUE(arg=None, lineno=616)
>        128	LOAD_GLOBAL(arg=2, lineno=618)
         130	LOAD_METHOD(arg=3, lineno=618)
         132	LOAD_CONST(arg=4, lineno=618)
         134	LOAD_FAST(arg=2, lineno=618)
         136	LOAD_GLOBAL(arg=2, lineno=618)
         138	LOAD_METHOD(arg=3, lineno=618)
         140	LOAD_FAST(arg=3, lineno=618)
         142	LOAD_FAST(arg=4, lineno=618)
         144	BINARY_MULTIPLY(arg=None, lineno=618)
         146	CALL_METHOD(arg=1, lineno=618)
         148	BINARY_TRUE_DIVIDE(arg=None, lineno=618)
         150	BINARY_SUBTRACT(arg=None, lineno=618)
         152	CALL_METHOD(arg=1, lineno=618)
         154	RETURN_VALUE(arg=None, lineno=618)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=585)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=603)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=603)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=604)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=604)
DEBUG:numba.core.byteflow:stack ['$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=605)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_FAST(arg=4, lineno=605)
DEBUG:numba.core.byteflow:stack ['$const10.2.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=606)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_ATTR(arg=0, lineno=606)
DEBUG:numba.core.byteflow:stack ['$x14.3']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=606)
DEBUG:numba.core.byteflow:stack ['$16load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=606)
DEBUG:numba.core.byteflow:stack ['$16load_attr.4', '$const18.5.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=5, lineno=606)
DEBUG:numba.core.byteflow:stack ['$20binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_GLOBAL(arg=1, lineno=608)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=608)
DEBUG:numba.core.byteflow:stack ['$24load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=608)
DEBUG:numba.core.byteflow:stack ['$24load_global.7', '$dim26.8']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=608)
DEBUG:numba.core.byteflow:stack ['$28call_function.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.10',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=27, lineno=608)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=88, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=88 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=88 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=3, lineno=613)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=2, lineno=613)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x88.0']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=COMPARE_OP(arg=2, lineno=613)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x88.0', '$const90.1.2']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=POP_JUMP_IF_FALSE(arg=55, lineno=613)
DEBUG:numba.core.byteflow:stack ['$92compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0), Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=96 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=6, lineno=608)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=2, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_METHOD(arg=3, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$38load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=6, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$x42.5']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$x42.5', '$i44.6']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7', '$y48.8']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7', '$y48.8', '$i50.9']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=BINARY_MULTIPLY(arg=None, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7', '$52binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$54binary_multiply.11']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=INPLACE_ADD(arg=None, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$56call_method.12']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=STORE_FAST(arg=2, lineno=609)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$58inplace_add.13']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=3, lineno=610)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=610)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=610)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14', '$x64.15']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=610)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14', '$x64.15', '$i66.16']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=INPLACE_ADD(arg=None, lineno=610)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14', '$68binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=STORE_FAST(arg=3, lineno=610)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$70inplace_add.18']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=1, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=6, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19', '$y76.20']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19', '$y76.20', '$i78.21']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=INPLACE_ADD(arg=None, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19', '$80binary_subscr.22']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=STORE_FAST(arg=4, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$82inplace_add.23']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=JUMP_ABSOLUTE(arg=17, lineno=611)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=96 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=4, lineno=613)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=2, lineno=613)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y96.0']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=COMPARE_OP(arg=2, lineno=613)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y96.0', '$const98.1.2']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=POP_JUMP_IF_FALSE(arg=55, lineno=613)
DEBUG:numba.core.byteflow:stack ['$100compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=32 nstack_initial=1), State(pc_initial=104 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=3, lineno=615)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=615)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x108.0']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=COMPARE_OP(arg=2, lineno=615)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x108.0', '$const110.1.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=POP_JUMP_IF_TRUE(arg=63, lineno=615)
DEBUG:numba.core.byteflow:stack ['$112compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=124, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=104 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=1, lineno=614)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=614)
DEBUG:numba.core.byteflow:stack ['$const104.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=4, lineno=615)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_CONST(arg=2, lineno=615)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y116.0']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=COMPARE_OP(arg=2, lineno=615)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y116.0', '$const118.1.2']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=POP_JUMP_IF_FALSE(arg=65, lineno=615)
DEBUG:numba.core.byteflow:stack ['$120compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=124, stack=(), blockstack=(), npush=0), Edge(pc=128, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=124 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=124 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_CONST(arg=3, lineno=616)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=RETURN_VALUE(arg=None, lineno=616)
DEBUG:numba.core.byteflow:stack ['$const124.0.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=128 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_GLOBAL(arg=2, lineno=618)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_METHOD(arg=3, lineno=618)
DEBUG:numba.core.byteflow:stack ['$128load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_CONST(arg=4, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_FAST(arg=2, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_GLOBAL(arg=2, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_METHOD(arg=3, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3', '$136load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=3, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3', '$138load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_FAST(arg=4, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3', '$138load_method.5', '$l1_norm_x140.6']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=BINARY_MULTIPLY(arg=None, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3', '$138load_method.5', '$l1_norm_x140.6', '$l1_norm_y142.7']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=CALL_METHOD(arg=1, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3', '$138load_method.5', '$144binary_multiply.8']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$result134.3', '$146call_method.9']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=BINARY_SUBTRACT(arg=None, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$const132.2.4', '$148binary_true_divide.10']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=CALL_METHOD(arg=1, lineno=618)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$150binary_subtract.11']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=RETURN_VALUE(arg=None, lineno=618)
DEBUG:numba.core.byteflow:stack ['$152call_method.12']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=88 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=128 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.10', State(pc_initial=0 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$30get_iter.10'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$const6.1.1'}), (8, {'value': '$const6.1.1'}), (10, {'res': '$const10.2.1'}), (12, {'value': '$const10.2.1'}), (14, {'res': '$x14.3'}), (16, {'item': '$x14.3', 'res': '$16load_attr.4'}), (18, {'res': '$const18.5.2'}), (20, {'index': '$const18.5.2', 'target': '$16load_attr.4', 'res': '$20binary_subscr.6'}), (22, {'value': '$20binary_subscr.6'}), (24, {'res': '$24load_global.7'}), (26, {'res': '$dim26.8'}), (28, {'func': '$24load_global.7', 'args': ['$dim26.8'], 'res': '$28call_function.9'}), (30, {'value': '$28call_function.9', 'res': '$30get_iter.10'})), outgoing_phis={'$phi32.0': '$30get_iter.10'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.10',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$result36.2'}), (38, {'res': '$38load_global.3'}), (40, {'item': '$38load_global.3', 'res': '$40load_method.4'}), (42, {'res': '$x42.5'}), (44, {'res': '$i44.6'}), (46, {'index': '$i44.6', 'target': '$x42.5', 'res': '$46binary_subscr.7'}), (48, {'res': '$y48.8'}), (50, {'res': '$i50.9'}), (52, {'index': '$i50.9', 'target': '$y48.8', 'res': '$52binary_subscr.10'}), (54, {'lhs': '$46binary_subscr.7', 'rhs': '$52binary_subscr.10', 'res': '$54binary_multiply.11'}), (56, {'func': '$40load_method.4', 'args': ['$54binary_multiply.11'], 'res': '$56call_method.12'}), (58, {'lhs': '$result36.2', 'rhs': '$56call_method.12', 'res': '$58inplace_add.13'}), (60, {'value': '$58inplace_add.13'}), (62, {'res': '$l1_norm_x62.14'}), (64, {'res': '$x64.15'}), (66, {'res': '$i66.16'}), (68, {'index': '$i66.16', 'target': '$x64.15', 'res': '$68binary_subscr.17'}), (70, {'lhs': '$l1_norm_x62.14', 'rhs': '$68binary_subscr.17', 'res': '$70inplace_add.18'}), (72, {'value': '$70inplace_add.18'}), (74, {'res': '$l1_norm_y74.19'}), (76, {'res': '$y76.20'}), (78, {'res': '$i78.21'}), (80, {'index': '$i78.21', 'target': '$y76.20', 'res': '$80binary_subscr.22'}), (82, {'lhs': '$l1_norm_y74.19', 'rhs': '$80binary_subscr.22', 'res': '$82inplace_add.23'}), (84, {'value': '$82inplace_add.23'}), (86, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$l1_norm_x88.0'}), (90, {'res': '$const90.1.2'}), (92, {'lhs': '$l1_norm_x88.0', 'rhs': '$const90.1.2', 'res': '$92compare_op.2'}), (94, {'pred': '$92compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: (), 108: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$l1_norm_y96.0'}), (98, {'res': '$const98.1.2'}), (100, {'lhs': '$l1_norm_y96.0', 'rhs': '$const98.1.2', 'res': '$100compare_op.2'}), (102, {'pred': '$100compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 108: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$const104.0.1'}), (106, {'retval': '$const104.0.1', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$l1_norm_x108.0'}), (110, {'res': '$const110.1.2'}), (112, {'lhs': '$l1_norm_x108.0', 'rhs': '$const110.1.2', 'res': '$112compare_op.2'}), (114, {'pred': '$112compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 124: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$l1_norm_y116.0'}), (118, {'res': '$const118.1.2'}), (120, {'lhs': '$l1_norm_y116.0', 'rhs': '$const118.1.2', 'res': '$120compare_op.2'}), (122, {'pred': '$120compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: (), 128: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$const124.0.3'}), (126, {'retval': '$const124.0.3', 'castval': '$126return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=128 nstack_initial=0):
AdaptBlockInfo(insts=((128, {'res': '$128load_global.0'}), (130, {'item': '$128load_global.0', 'res': '$130load_method.1'}), (132, {'res': '$const132.2.4'}), (134, {'res': '$result134.3'}), (136, {'res': '$136load_global.4'}), (138, {'item': '$136load_global.4', 'res': '$138load_method.5'}), (140, {'res': '$l1_norm_x140.6'}), (142, {'res': '$l1_norm_y142.7'}), (144, {'lhs': '$l1_norm_x140.6', 'rhs': '$l1_norm_y142.7', 'res': '$144binary_multiply.8'}), (146, {'func': '$138load_method.5', 'args': ['$144binary_multiply.8'], 'res': '$146call_method.9'}), (148, {'lhs': '$result134.3', 'rhs': '$146call_method.9', 'res': '$148binary_true_divide.10'}), (150, {'lhs': '$const132.2.4', 'rhs': '$148binary_true_divide.10', 'res': '$150binary_subtract.11'}), (152, {'func': '$130load_method.1', 'args': ['$150binary_subtract.11'], 'res': '$152call_method.12'}), (154, {'retval': '$152call_method.12', 'castval': '$154return_value.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    l1_norm_x = const(float, 0.0)            ['l1_norm_x']
    l1_norm_y = const(float, 0.0)            ['l1_norm_y']
    $16load_attr.4 = getattr(value=x, attr=shape) ['$16load_attr.4', 'x']
    $const18.5.2 = const(int, 0)             ['$const18.5.2']
    dim = getitem(value=$16load_attr.4, index=$const18.5.2, fn=<built-in function getitem>) ['$16load_attr.4', '$const18.5.2', 'dim']
    $24load_global.7 = global(range: <class 'range'>) ['$24load_global.7']
    $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.7', '$28call_function.9', 'dim']
    $30get_iter.10 = getiter(value=$28call_function.9) ['$28call_function.9', '$30get_iter.10']
    $phi32.0 = $30get_iter.10                ['$30get_iter.10', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 88             ['$32for_iter.3']
label 34:
    i = $phi34.1                             ['$phi34.1', 'i']
    $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$38load_global.3']
    $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt) ['$38load_global.3', '$40load_method.4']
    $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$46binary_subscr.7', 'i', 'x']
    $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$52binary_subscr.10', 'i', 'y']
    $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10 ['$46binary_subscr.7', '$52binary_subscr.10', '$54binary_multiply.11']
    $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_method.4', '$54binary_multiply.11', '$56call_method.12']
    $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined) ['$56call_method.12', '$58inplace_add.13', 'result']
    result = $58inplace_add.13               ['$58inplace_add.13', 'result']
    $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$68binary_subscr.17', 'i', 'x']
    $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined) ['$68binary_subscr.17', '$70inplace_add.18', 'l1_norm_x']
    l1_norm_x = $70inplace_add.18            ['$70inplace_add.18', 'l1_norm_x']
    $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$80binary_subscr.22', 'i', 'y']
    $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined) ['$80binary_subscr.22', '$82inplace_add.23', 'l1_norm_y']
    l1_norm_y = $82inplace_add.23            ['$82inplace_add.23', 'l1_norm_y']
    jump 32                                  []
label 88:
    $const90.1.2 = const(int, 0)             ['$const90.1.2']
    $92compare_op.2 = l1_norm_x == $const90.1.2 ['$92compare_op.2', '$const90.1.2', 'l1_norm_x']
    bool94 = global(bool: <class 'bool'>)    ['bool94']
    $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None) ['$92compare_op.2', '$94pred', 'bool94']
    branch $94pred, 96, 108                  ['$94pred']
label 96:
    $const98.1.2 = const(int, 0)             ['$const98.1.2']
    $100compare_op.2 = l1_norm_y == $const98.1.2 ['$100compare_op.2', '$const98.1.2', 'l1_norm_y']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None) ['$100compare_op.2', '$102pred', 'bool102']
    branch $102pred, 104, 108                ['$102pred']
label 104:
    $const104.0.1 = const(float, 0.0)        ['$const104.0.1']
    $106return_value.1 = cast(value=$const104.0.1) ['$106return_value.1', '$const104.0.1']
    return $106return_value.1                ['$106return_value.1']
label 108:
    $const110.1.2 = const(int, 0)            ['$const110.1.2']
    $112compare_op.2 = l1_norm_x == $const110.1.2 ['$112compare_op.2', '$const110.1.2', 'l1_norm_x']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None) ['$112compare_op.2', '$114pred', 'bool114']
    branch $114pred, 124, 116                ['$114pred']
label 116:
    $const118.1.2 = const(int, 0)            ['$const118.1.2']
    $120compare_op.2 = l1_norm_y == $const118.1.2 ['$120compare_op.2', '$const118.1.2', 'l1_norm_y']
    bool122 = global(bool: <class 'bool'>)   ['bool122']
    $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None) ['$120compare_op.2', '$122pred', 'bool122']
    branch $122pred, 124, 128                ['$122pred']
label 124:
    $const124.0.3 = const(float, 1.0)        ['$const124.0.3']
    $126return_value.1 = cast(value=$const124.0.3) ['$126return_value.1', '$const124.0.3']
    return $126return_value.1                ['$126return_value.1']
label 128:
    $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$128load_global.0']
    $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt) ['$128load_global.0', '$130load_method.1']
    $const132.2.4 = const(int, 1)            ['$const132.2.4']
    $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$136load_global.4']
    $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt) ['$136load_global.4', '$138load_method.5']
    $144binary_multiply.8 = l1_norm_x * l1_norm_y ['$144binary_multiply.8', 'l1_norm_x', 'l1_norm_y']
    $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None) ['$138load_method.5', '$144binary_multiply.8', '$146call_method.9']
    $148binary_true_divide.10 = result / $146call_method.9 ['$146call_method.9', '$148binary_true_divide.10', 'result']
    $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10 ['$148binary_true_divide.10', '$150binary_subtract.11', '$const132.2.4']
    $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None) ['$130load_method.1', '$150binary_subtract.11', '$152call_method.12']
    $154return_value.13 = cast(value=$152call_method.12) ['$152call_method.12', '$154return_value.13']
    return $154return_value.13               ['$154return_value.13']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15912fab60>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15912fab60>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15912fab60>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15912fab60>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block analysis pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15912fab60>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15912fab60>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15912fab60>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block analysis pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15912fab60>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block analysis pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15912fab60>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15912fab60>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100compare_op.2': [(<numba.core.ir.Assign object at 0x7f15912f2050>,
                                   96)],
             '$102pred': [(<numba.core.ir.Assign object at 0x7f15912f22c0>,
                           96)],
             '$106return_value.1': [(<numba.core.ir.Assign object at 0x7f15912f2680>,
                                     104)],
             '$112compare_op.2': [(<numba.core.ir.Assign object at 0x7f15912f2bf0>,
                                   108)],
             '$114pred': [(<numba.core.ir.Assign object at 0x7f15912f2e60>,
                           108)],
             '$120compare_op.2': [(<numba.core.ir.Assign object at 0x7f15912f3370>,
                                   116)],
             '$122pred': [(<numba.core.ir.Assign object at 0x7f15912f35e0>,
                           116)],
             '$126return_value.1': [(<numba.core.ir.Assign object at 0x7f15912f39a0>,
                                     124)],
             '$128load_global.0': [(<numba.core.ir.Assign object at 0x7f15912f3c40>,
                                    128)],
             '$130load_method.1': [(<numba.core.ir.Assign object at 0x7f15912f3dc0>,
                                    128)],
             '$136load_global.4': [(<numba.core.ir.Assign object at 0x7f15912f8220>,
                                    128)],
             '$138load_method.5': [(<numba.core.ir.Assign object at 0x7f15912f83a0>,
                                    128)],
             '$144binary_multiply.8': [(<numba.core.ir.Assign object at 0x7f15912f8790>,
                                        128)],
             '$146call_method.9': [(<numba.core.ir.Assign object at 0x7f15912f8970>,
                                    128)],
             '$148binary_true_divide.10': [(<numba.core.ir.Assign object at 0x7f15912f8a90>,
                                            128)],
             '$150binary_subtract.11': [(<numba.core.ir.Assign object at 0x7f15912f8c10>,
                                         128)],
             '$152call_method.12': [(<numba.core.ir.Assign object at 0x7f15912f8df0>,
                                     128)],
             '$154return_value.13': [(<numba.core.ir.Assign object at 0x7f15912f8ee0>,
                                      128)],
             '$16load_attr.4': [(<numba.core.ir.Assign object at 0x7f1591397730>,
                                 0)],
             '$24load_global.7': [(<numba.core.ir.Assign object at 0x7f15912ded40>,
                                   0)],
             '$28call_function.9': [(<numba.core.ir.Assign object at 0x7f15912df040>,
                                     0)],
             '$30get_iter.10': [(<numba.core.ir.Assign object at 0x7f15912df160>,
                                 0)],
             '$32for_iter.1': [(<numba.core.ir.Assign object at 0x7f15912df2b0>,
                                32)],
             '$32for_iter.2': [(<numba.core.ir.Assign object at 0x7f15912df3d0>,
                                32)],
             '$32for_iter.3': [(<numba.core.ir.Assign object at 0x7f15912df4f0>,
                                32)],
             '$38load_global.3': [(<numba.core.ir.Assign object at 0x7f15912dfa60>,
                                   34)],
             '$40load_method.4': [(<numba.core.ir.Assign object at 0x7f15912dfbe0>,
                                   34)],
             '$46binary_subscr.7': [(<numba.core.ir.Assign object at 0x7f15912dffd0>,
                                     34)],
             '$52binary_subscr.10': [(<numba.core.ir.Assign object at 0x7f15912f03d0>,
                                      34)],
             '$54binary_multiply.11': [(<numba.core.ir.Assign object at 0x7f15912f0550>,
                                        34)],
             '$56call_method.12': [(<numba.core.ir.Assign object at 0x7f15912f0730>,
                                    34)],
             '$58inplace_add.13': [(<numba.core.ir.Assign object at 0x7f15912f0850>,
                                    34)],
             '$68binary_subscr.17': [(<numba.core.ir.Assign object at 0x7f15912f0df0>,
                                      34)],
             '$70inplace_add.18': [(<numba.core.ir.Assign object at 0x7f15912f0f70>,
                                    34)],
             '$80binary_subscr.22': [(<numba.core.ir.Assign object at 0x7f15912f1510>,
                                      34)],
             '$82inplace_add.23': [(<numba.core.ir.Assign object at 0x7f15912f1690>,
                                    34)],
             '$92compare_op.2': [(<numba.core.ir.Assign object at 0x7f15912f18d0>,
                                  88)],
             '$94pred': [(<numba.core.ir.Assign object at 0x7f15912f1b40>, 88)],
             '$const104.0.1': [(<numba.core.ir.Assign object at 0x7f15912f2500>,
                                104)],
             '$const110.1.2': [(<numba.core.ir.Assign object at 0x7f15912f2a40>,
                                108)],
             '$const118.1.2': [(<numba.core.ir.Assign object at 0x7f15912f31c0>,
                                116)],
             '$const124.0.3': [(<numba.core.ir.Assign object at 0x7f15912f3820>,
                                124)],
             '$const132.2.4': [(<numba.core.ir.Assign object at 0x7f15912f3f40>,
                                128)],
             '$const18.5.2': [(<numba.core.ir.Assign object at 0x7f1591396ec0>,
                               0)],
             '$const90.1.2': [(<numba.core.ir.Assign object at 0x7f15912f0cd0>,
                               88)],
             '$const98.1.2': [(<numba.core.ir.Assign object at 0x7f15912f1ea0>,
                               96)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x7f15912498d0>, 0)],
             '$phi34.1': [(<numba.core.ir.Assign object at 0x7f15912df1c0>,
                           32)],
             'bool102': [(<numba.core.ir.Assign object at 0x7f15912f21a0>, 96)],
             'bool114': [(<numba.core.ir.Assign object at 0x7f15912f2d40>,
                          108)],
             'bool122': [(<numba.core.ir.Assign object at 0x7f15912f34c0>,
                          116)],
             'bool94': [(<numba.core.ir.Assign object at 0x7f15912f1a20>, 88)],
             'dim': [(<numba.core.ir.Assign object at 0x7f15912f9d20>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f15912df7c0>, 34)],
             'l1_norm_x': [(<numba.core.ir.Assign object at 0x7f15913a62c0>, 0),
                           (<numba.core.ir.Assign object at 0x7f15912f1030>,
                            34)],
             'l1_norm_y': [(<numba.core.ir.Assign object at 0x7f1591248190>, 0),
                           (<numba.core.ir.Assign object at 0x7f15912f1750>,
                            34)],
             'result': [(<numba.core.ir.Assign object at 0x7f15913a7880>, 0),
                        (<numba.core.ir.Assign object at 0x7f15912f0910>, 34)],
             'x': [(<numba.core.ir.Assign object at 0x7f15913a5a20>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f15913a7a90>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15912382b0>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $58inplace_add.13
DEBUG:numba.core.ssa:replaced with: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15912388b0>],
             34: [<numba.core.ir.Assign object at 0x7f1591239f00>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:replaced with: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result / $146call_method.9
DEBUG:numba.core.ssa:find_def var='result' stmt=$148binary_true_divide.10 = result / $146call_method.9
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $148binary_true_divide.10 = result.2 / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.ssa:Fix SSA violator on var l1_norm_x
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: l1_norm_x
DEBUG:numba.core.ssa:replaced with: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:603), Var(result.1, distances.py:609)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:replaced with: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result.2 / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f159123a530>],
             34: [<numba.core.ir.Assign object at 0x7f159123b1c0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:603), Var(result.1, distances.py:609)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node l1_norm_x.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:replaced with: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x.2, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $92compare_op.2 = l1_norm_x.2 == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $112compare_op.2 = l1_norm_x.2 == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1591238040>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$144binary_multiply.8 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $144binary_multiply.8 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result.2 / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.ssa:Fix SSA violator on var l1_norm_y
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238100>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: l1_norm_y
DEBUG:numba.core.ssa:replaced with: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238100>
DEBUG:numba.core.ssa:on stmt: l1_norm_x.2 = phi(incoming_values=[Var(l1_norm_x, distances.py:604), Var(l1_norm_x.1, distances.py:610)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:603), Var(result.1, distances.py:609)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238100>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x.2, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:replaced with: l1_norm_y.1 = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238100>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x.2 == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238100>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238100>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238100>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x.2 == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238100>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238100>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591238100>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result.2 / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1591238850>],
             34: [<numba.core.ir.Assign object at 0x7f15912fb790>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:606)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: l1_norm_x.2 = phi(incoming_values=[Var(l1_norm_x, distances.py:604), Var(l1_norm_x.1, distances.py:610)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:603), Var(result.1, distances.py:609)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:609)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x.2, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node l1_norm_y.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def l1_norm_y.1 = $82inplace_add.23
DEBUG:numba.core.ssa:replaced with: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y.2, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y.1 = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x.2 == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:find_def_from_top label 96
DEBUG:numba.core.ssa:idom 88 from label 96
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $100compare_op.2 = l1_norm_y.2 == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:613),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x.2 == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $120compare_op.2 = l1_norm_y.2 == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $const124.0.3 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$const124.0.3)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159123ad40>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const132.2.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $136load_global.4 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.5 = getattr(value=$136load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $144binary_multiply.8 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$144binary_multiply.8 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $144binary_multiply.8 = l1_norm_x.2 * l1_norm_y.2
DEBUG:numba.core.ssa:on stmt: $146call_method.9 = call $138load_method.5($144binary_multiply.8, func=$138load_method.5, args=[Var($144binary_multiply.8, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $148binary_true_divide.10 = result.2 / $146call_method.9
DEBUG:numba.core.ssa:on stmt: $150binary_subtract.11 = $const132.2.4 - $148binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $152call_method.12 = call $130load_method.1($150binary_subtract.11, func=$130load_method.1, args=[Var($150binary_subtract.11, distances.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154return_value.13 = cast(value=$152call_method.12)
DEBUG:numba.core.ssa:on stmt: return $154return_value.13
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=621)
           2	LOAD_CONST(arg=1, lineno=639)
           4	STORE_FAST(arg=2, lineno=639)
           6	LOAD_CONST(arg=1, lineno=640)
           8	STORE_FAST(arg=3, lineno=640)
          10	LOAD_CONST(arg=1, lineno=641)
          12	STORE_FAST(arg=4, lineno=641)
          14	LOAD_FAST(arg=0, lineno=642)
          16	LOAD_ATTR(arg=0, lineno=642)
          18	LOAD_CONST(arg=2, lineno=642)
          20	BINARY_SUBSCR(arg=None, lineno=642)
          22	STORE_FAST(arg=5, lineno=642)
          24	LOAD_GLOBAL(arg=1, lineno=644)
          26	LOAD_FAST(arg=5, lineno=644)
          28	CALL_FUNCTION(arg=1, lineno=644)
          30	GET_ITER(arg=None, lineno=644)
>         32	FOR_ITER(arg=27, lineno=644)
          34	STORE_FAST(arg=6, lineno=644)
          36	LOAD_FAST(arg=2, lineno=645)
          38	LOAD_GLOBAL(arg=2, lineno=645)
          40	LOAD_METHOD(arg=3, lineno=645)
          42	LOAD_FAST(arg=0, lineno=645)
          44	LOAD_FAST(arg=6, lineno=645)
          46	BINARY_SUBSCR(arg=None, lineno=645)
          48	LOAD_FAST(arg=1, lineno=645)
          50	LOAD_FAST(arg=6, lineno=645)
          52	BINARY_SUBSCR(arg=None, lineno=645)
          54	BINARY_MULTIPLY(arg=None, lineno=645)
          56	CALL_METHOD(arg=1, lineno=645)
          58	INPLACE_ADD(arg=None, lineno=645)
          60	STORE_FAST(arg=2, lineno=645)
          62	LOAD_FAST(arg=3, lineno=646)
          64	LOAD_FAST(arg=0, lineno=646)
          66	LOAD_FAST(arg=6, lineno=646)
          68	BINARY_SUBSCR(arg=None, lineno=646)
          70	INPLACE_ADD(arg=None, lineno=646)
          72	STORE_FAST(arg=3, lineno=646)
          74	LOAD_FAST(arg=4, lineno=647)
          76	LOAD_FAST(arg=1, lineno=647)
          78	LOAD_FAST(arg=6, lineno=647)
          80	BINARY_SUBSCR(arg=None, lineno=647)
          82	INPLACE_ADD(arg=None, lineno=647)
          84	STORE_FAST(arg=4, lineno=647)
          86	JUMP_ABSOLUTE(arg=17, lineno=647)
>         88	LOAD_FAST(arg=3, lineno=649)
          90	LOAD_CONST(arg=2, lineno=649)
          92	COMPARE_OP(arg=2, lineno=649)
          94	POP_JUMP_IF_FALSE(arg=55, lineno=649)
          96	LOAD_FAST(arg=4, lineno=649)
          98	LOAD_CONST(arg=2, lineno=649)
         100	COMPARE_OP(arg=2, lineno=649)
         102	POP_JUMP_IF_FALSE(arg=55, lineno=649)
         104	LOAD_CONST(arg=1, lineno=650)
         106	RETURN_VALUE(arg=None, lineno=650)
>        108	LOAD_FAST(arg=3, lineno=651)
         110	LOAD_CONST(arg=2, lineno=651)
         112	COMPARE_OP(arg=2, lineno=651)
         114	POP_JUMP_IF_TRUE(arg=63, lineno=651)
         116	LOAD_FAST(arg=4, lineno=651)
         118	LOAD_CONST(arg=2, lineno=651)
         120	COMPARE_OP(arg=2, lineno=651)
         122	POP_JUMP_IF_FALSE(arg=65, lineno=651)
>        124	LOAD_GLOBAL(arg=4, lineno=652)
         126	RETURN_VALUE(arg=None, lineno=652)
>        128	LOAD_FAST(arg=2, lineno=653)
         130	LOAD_CONST(arg=2, lineno=653)
         132	COMPARE_OP(arg=1, lineno=653)
         134	POP_JUMP_IF_FALSE(arg=71, lineno=653)
         136	LOAD_GLOBAL(arg=4, lineno=654)
         138	RETURN_VALUE(arg=None, lineno=654)
>        140	LOAD_GLOBAL(arg=2, lineno=656)
         142	LOAD_METHOD(arg=3, lineno=656)
         144	LOAD_FAST(arg=3, lineno=656)
         146	LOAD_FAST(arg=4, lineno=656)
         148	BINARY_MULTIPLY(arg=None, lineno=656)
         150	CALL_METHOD(arg=1, lineno=656)
         152	LOAD_FAST(arg=2, lineno=656)
         154	BINARY_TRUE_DIVIDE(arg=None, lineno=656)
         156	STORE_FAST(arg=2, lineno=656)
         158	LOAD_GLOBAL(arg=2, lineno=657)
         160	LOAD_METHOD(arg=5, lineno=657)
         162	LOAD_FAST(arg=2, lineno=657)
         164	CALL_METHOD(arg=1, lineno=657)
         166	RETURN_VALUE(arg=None, lineno=657)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=621)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=639)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=639)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=640)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=640)
DEBUG:numba.core.byteflow:stack ['$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=641)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_FAST(arg=4, lineno=641)
DEBUG:numba.core.byteflow:stack ['$const10.2.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=642)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_ATTR(arg=0, lineno=642)
DEBUG:numba.core.byteflow:stack ['$x14.3']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=642)
DEBUG:numba.core.byteflow:stack ['$16load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=642)
DEBUG:numba.core.byteflow:stack ['$16load_attr.4', '$const18.5.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=5, lineno=642)
DEBUG:numba.core.byteflow:stack ['$20binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_GLOBAL(arg=1, lineno=644)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=644)
DEBUG:numba.core.byteflow:stack ['$24load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=644)
DEBUG:numba.core.byteflow:stack ['$24load_global.7', '$dim26.8']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=644)
DEBUG:numba.core.byteflow:stack ['$28call_function.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.10',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=27, lineno=644)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=88, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=88 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=88 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=3, lineno=649)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=2, lineno=649)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x88.0']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=COMPARE_OP(arg=2, lineno=649)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x88.0', '$const90.1.2']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=POP_JUMP_IF_FALSE(arg=55, lineno=649)
DEBUG:numba.core.byteflow:stack ['$92compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0), Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=96 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=6, lineno=644)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=2, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_METHOD(arg=3, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$38load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=6, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$x42.5']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$x42.5', '$i44.6']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7', '$y48.8']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7', '$y48.8', '$i50.9']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=BINARY_MULTIPLY(arg=None, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7', '$52binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$54binary_multiply.11']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=INPLACE_ADD(arg=None, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$56call_method.12']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=STORE_FAST(arg=2, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$58inplace_add.13']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=3, lineno=646)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=646)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=646)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14', '$x64.15']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=646)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14', '$x64.15', '$i66.16']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=INPLACE_ADD(arg=None, lineno=646)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14', '$68binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=STORE_FAST(arg=3, lineno=646)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$70inplace_add.18']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=1, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=6, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19', '$y76.20']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19', '$y76.20', '$i78.21']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=INPLACE_ADD(arg=None, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19', '$80binary_subscr.22']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=STORE_FAST(arg=4, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$82inplace_add.23']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=JUMP_ABSOLUTE(arg=17, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=96 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=4, lineno=649)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=2, lineno=649)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y96.0']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=COMPARE_OP(arg=2, lineno=649)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y96.0', '$const98.1.2']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=POP_JUMP_IF_FALSE(arg=55, lineno=649)
DEBUG:numba.core.byteflow:stack ['$100compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=32 nstack_initial=1), State(pc_initial=104 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=3, lineno=651)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=651)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x108.0']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=COMPARE_OP(arg=2, lineno=651)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x108.0', '$const110.1.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=POP_JUMP_IF_TRUE(arg=63, lineno=651)
DEBUG:numba.core.byteflow:stack ['$112compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=124, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=104 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=1, lineno=650)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=650)
DEBUG:numba.core.byteflow:stack ['$const104.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=4, lineno=651)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_CONST(arg=2, lineno=651)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y116.0']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=COMPARE_OP(arg=2, lineno=651)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y116.0', '$const118.1.2']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=POP_JUMP_IF_FALSE(arg=65, lineno=651)
DEBUG:numba.core.byteflow:stack ['$120compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=124, stack=(), blockstack=(), npush=0), Edge(pc=128, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=124 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=124 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_GLOBAL(arg=4, lineno=652)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=RETURN_VALUE(arg=None, lineno=652)
DEBUG:numba.core.byteflow:stack ['$124load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=128 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=653)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_CONST(arg=2, lineno=653)
DEBUG:numba.core.byteflow:stack ['$result128.0']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=COMPARE_OP(arg=1, lineno=653)
DEBUG:numba.core.byteflow:stack ['$result128.0', '$const130.1.2']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=POP_JUMP_IF_FALSE(arg=71, lineno=653)
DEBUG:numba.core.byteflow:stack ['$132compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=136, stack=(), blockstack=(), npush=0), Edge(pc=140, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=136 nstack_initial=0), State(pc_initial=140 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=136 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_GLOBAL(arg=4, lineno=654)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=138, inst=RETURN_VALUE(arg=None, lineno=654)
DEBUG:numba.core.byteflow:stack ['$136load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=140 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=140 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_GLOBAL(arg=2, lineno=656)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_METHOD(arg=3, lineno=656)
DEBUG:numba.core.byteflow:stack ['$140load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=LOAD_FAST(arg=3, lineno=656)
DEBUG:numba.core.byteflow:stack ['$142load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_FAST(arg=4, lineno=656)
DEBUG:numba.core.byteflow:stack ['$142load_method.1', '$l1_norm_x144.2']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=BINARY_MULTIPLY(arg=None, lineno=656)
DEBUG:numba.core.byteflow:stack ['$142load_method.1', '$l1_norm_x144.2', '$l1_norm_y146.3']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=CALL_METHOD(arg=1, lineno=656)
DEBUG:numba.core.byteflow:stack ['$142load_method.1', '$148binary_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=2, lineno=656)
DEBUG:numba.core.byteflow:stack ['$150call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=656)
DEBUG:numba.core.byteflow:stack ['$150call_method.5', '$result152.6']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=STORE_FAST(arg=2, lineno=656)
DEBUG:numba.core.byteflow:stack ['$154binary_true_divide.7']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_GLOBAL(arg=2, lineno=657)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_METHOD(arg=5, lineno=657)
DEBUG:numba.core.byteflow:stack ['$158load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=2, lineno=657)
DEBUG:numba.core.byteflow:stack ['$160load_method.9']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=CALL_METHOD(arg=1, lineno=657)
DEBUG:numba.core.byteflow:stack ['$160load_method.9', '$result162.10']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=RETURN_VALUE(arg=None, lineno=657)
DEBUG:numba.core.byteflow:stack ['$164call_method.11']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=88 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=128 nstack_initial=0): set(),
             State(pc_initial=136 nstack_initial=0): set(),
             State(pc_initial=140 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.10', State(pc_initial=0 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$30get_iter.10'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$const6.1.1'}), (8, {'value': '$const6.1.1'}), (10, {'res': '$const10.2.1'}), (12, {'value': '$const10.2.1'}), (14, {'res': '$x14.3'}), (16, {'item': '$x14.3', 'res': '$16load_attr.4'}), (18, {'res': '$const18.5.2'}), (20, {'index': '$const18.5.2', 'target': '$16load_attr.4', 'res': '$20binary_subscr.6'}), (22, {'value': '$20binary_subscr.6'}), (24, {'res': '$24load_global.7'}), (26, {'res': '$dim26.8'}), (28, {'func': '$24load_global.7', 'args': ['$dim26.8'], 'res': '$28call_function.9'}), (30, {'value': '$28call_function.9', 'res': '$30get_iter.10'})), outgoing_phis={'$phi32.0': '$30get_iter.10'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.10',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$result36.2'}), (38, {'res': '$38load_global.3'}), (40, {'item': '$38load_global.3', 'res': '$40load_method.4'}), (42, {'res': '$x42.5'}), (44, {'res': '$i44.6'}), (46, {'index': '$i44.6', 'target': '$x42.5', 'res': '$46binary_subscr.7'}), (48, {'res': '$y48.8'}), (50, {'res': '$i50.9'}), (52, {'index': '$i50.9', 'target': '$y48.8', 'res': '$52binary_subscr.10'}), (54, {'lhs': '$46binary_subscr.7', 'rhs': '$52binary_subscr.10', 'res': '$54binary_multiply.11'}), (56, {'func': '$40load_method.4', 'args': ['$54binary_multiply.11'], 'res': '$56call_method.12'}), (58, {'lhs': '$result36.2', 'rhs': '$56call_method.12', 'res': '$58inplace_add.13'}), (60, {'value': '$58inplace_add.13'}), (62, {'res': '$l1_norm_x62.14'}), (64, {'res': '$x64.15'}), (66, {'res': '$i66.16'}), (68, {'index': '$i66.16', 'target': '$x64.15', 'res': '$68binary_subscr.17'}), (70, {'lhs': '$l1_norm_x62.14', 'rhs': '$68binary_subscr.17', 'res': '$70inplace_add.18'}), (72, {'value': '$70inplace_add.18'}), (74, {'res': '$l1_norm_y74.19'}), (76, {'res': '$y76.20'}), (78, {'res': '$i78.21'}), (80, {'index': '$i78.21', 'target': '$y76.20', 'res': '$80binary_subscr.22'}), (82, {'lhs': '$l1_norm_y74.19', 'rhs': '$80binary_subscr.22', 'res': '$82inplace_add.23'}), (84, {'value': '$82inplace_add.23'}), (86, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$l1_norm_x88.0'}), (90, {'res': '$const90.1.2'}), (92, {'lhs': '$l1_norm_x88.0', 'rhs': '$const90.1.2', 'res': '$92compare_op.2'}), (94, {'pred': '$92compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: (), 108: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$l1_norm_y96.0'}), (98, {'res': '$const98.1.2'}), (100, {'lhs': '$l1_norm_y96.0', 'rhs': '$const98.1.2', 'res': '$100compare_op.2'}), (102, {'pred': '$100compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 108: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$const104.0.1'}), (106, {'retval': '$const104.0.1', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$l1_norm_x108.0'}), (110, {'res': '$const110.1.2'}), (112, {'lhs': '$l1_norm_x108.0', 'rhs': '$const110.1.2', 'res': '$112compare_op.2'}), (114, {'pred': '$112compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 124: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$l1_norm_y116.0'}), (118, {'res': '$const118.1.2'}), (120, {'lhs': '$l1_norm_y116.0', 'rhs': '$const118.1.2', 'res': '$120compare_op.2'}), (122, {'pred': '$120compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: (), 128: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$124load_global.0'}), (126, {'retval': '$124load_global.0', 'castval': '$126return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=128 nstack_initial=0):
AdaptBlockInfo(insts=((128, {'res': '$result128.0'}), (130, {'res': '$const130.1.2'}), (132, {'lhs': '$result128.0', 'rhs': '$const130.1.2', 'res': '$132compare_op.2'}), (134, {'pred': '$132compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={136: (), 140: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=136 nstack_initial=0):
AdaptBlockInfo(insts=((136, {'res': '$136load_global.0'}), (138, {'retval': '$136load_global.0', 'castval': '$138return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=140 nstack_initial=0):
AdaptBlockInfo(insts=((140, {'res': '$140load_global.0'}), (142, {'item': '$140load_global.0', 'res': '$142load_method.1'}), (144, {'res': '$l1_norm_x144.2'}), (146, {'res': '$l1_norm_y146.3'}), (148, {'lhs': '$l1_norm_x144.2', 'rhs': '$l1_norm_y146.3', 'res': '$148binary_multiply.4'}), (150, {'func': '$142load_method.1', 'args': ['$148binary_multiply.4'], 'res': '$150call_method.5'}), (152, {'res': '$result152.6'}), (154, {'lhs': '$150call_method.5', 'rhs': '$result152.6', 'res': '$154binary_true_divide.7'}), (156, {'value': '$154binary_true_divide.7'}), (158, {'res': '$158load_global.8'}), (160, {'item': '$158load_global.8', 'res': '$160load_method.9'}), (162, {'res': '$result162.10'}), (164, {'func': '$160load_method.9', 'args': ['$result162.10'], 'res': '$164call_method.11'}), (166, {'retval': '$164call_method.11', 'castval': '$166return_value.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    l1_norm_x = const(float, 0.0)            ['l1_norm_x']
    l1_norm_y = const(float, 0.0)            ['l1_norm_y']
    $16load_attr.4 = getattr(value=x, attr=shape) ['$16load_attr.4', 'x']
    $const18.5.2 = const(int, 0)             ['$const18.5.2']
    dim = getitem(value=$16load_attr.4, index=$const18.5.2, fn=<built-in function getitem>) ['$16load_attr.4', '$const18.5.2', 'dim']
    $24load_global.7 = global(range: <class 'range'>) ['$24load_global.7']
    $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.7', '$28call_function.9', 'dim']
    $30get_iter.10 = getiter(value=$28call_function.9) ['$28call_function.9', '$30get_iter.10']
    $phi32.0 = $30get_iter.10                ['$30get_iter.10', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 88             ['$32for_iter.3']
label 34:
    i = $phi34.1                             ['$phi34.1', 'i']
    $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$38load_global.3']
    $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt) ['$38load_global.3', '$40load_method.4']
    $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$46binary_subscr.7', 'i', 'x']
    $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$52binary_subscr.10', 'i', 'y']
    $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10 ['$46binary_subscr.7', '$52binary_subscr.10', '$54binary_multiply.11']
    $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_method.4', '$54binary_multiply.11', '$56call_method.12']
    $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined) ['$56call_method.12', '$58inplace_add.13', 'result']
    result = $58inplace_add.13               ['$58inplace_add.13', 'result']
    $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$68binary_subscr.17', 'i', 'x']
    $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined) ['$68binary_subscr.17', '$70inplace_add.18', 'l1_norm_x']
    l1_norm_x = $70inplace_add.18            ['$70inplace_add.18', 'l1_norm_x']
    $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$80binary_subscr.22', 'i', 'y']
    $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined) ['$80binary_subscr.22', '$82inplace_add.23', 'l1_norm_y']
    l1_norm_y = $82inplace_add.23            ['$82inplace_add.23', 'l1_norm_y']
    jump 32                                  []
label 88:
    $const90.1.2 = const(int, 0)             ['$const90.1.2']
    $92compare_op.2 = l1_norm_x == $const90.1.2 ['$92compare_op.2', '$const90.1.2', 'l1_norm_x']
    bool94 = global(bool: <class 'bool'>)    ['bool94']
    $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None) ['$92compare_op.2', '$94pred', 'bool94']
    branch $94pred, 96, 108                  ['$94pred']
label 96:
    $const98.1.2 = const(int, 0)             ['$const98.1.2']
    $100compare_op.2 = l1_norm_y == $const98.1.2 ['$100compare_op.2', '$const98.1.2', 'l1_norm_y']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None) ['$100compare_op.2', '$102pred', 'bool102']
    branch $102pred, 104, 108                ['$102pred']
label 104:
    $const104.0.1 = const(float, 0.0)        ['$const104.0.1']
    $106return_value.1 = cast(value=$const104.0.1) ['$106return_value.1', '$const104.0.1']
    return $106return_value.1                ['$106return_value.1']
label 108:
    $const110.1.2 = const(int, 0)            ['$const110.1.2']
    $112compare_op.2 = l1_norm_x == $const110.1.2 ['$112compare_op.2', '$const110.1.2', 'l1_norm_x']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None) ['$112compare_op.2', '$114pred', 'bool114']
    branch $114pred, 124, 116                ['$114pred']
label 116:
    $const118.1.2 = const(int, 0)            ['$const118.1.2']
    $120compare_op.2 = l1_norm_y == $const118.1.2 ['$120compare_op.2', '$const118.1.2', 'l1_norm_y']
    bool122 = global(bool: <class 'bool'>)   ['bool122']
    $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None) ['$120compare_op.2', '$122pred', 'bool122']
    branch $122pred, 124, 128                ['$122pred']
label 124:
    $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38) ['$124load_global.0']
    $126return_value.1 = cast(value=$124load_global.0) ['$124load_global.0', '$126return_value.1']
    return $126return_value.1                ['$126return_value.1']
label 128:
    $const130.1.2 = const(int, 0)            ['$const130.1.2']
    $132compare_op.2 = result <= $const130.1.2 ['$132compare_op.2', '$const130.1.2', 'result']
    bool134 = global(bool: <class 'bool'>)   ['bool134']
    $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None) ['$132compare_op.2', '$134pred', 'bool134']
    branch $134pred, 136, 140                ['$134pred']
label 136:
    $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38) ['$136load_global.0']
    $138return_value.1 = cast(value=$136load_global.0) ['$136load_global.0', '$138return_value.1']
    return $138return_value.1                ['$138return_value.1']
label 140:
    $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$140load_global.0']
    $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt) ['$140load_global.0', '$142load_method.1']
    $148binary_multiply.4 = l1_norm_x * l1_norm_y ['$148binary_multiply.4', 'l1_norm_x', 'l1_norm_y']
    $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None) ['$142load_method.1', '$148binary_multiply.4', '$150call_method.5']
    $154binary_true_divide.7 = $150call_method.5 / result ['$150call_method.5', '$154binary_true_divide.7', 'result']
    result = $154binary_true_divide.7        ['$154binary_true_divide.7', 'result']
    $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$158load_global.8']
    $160load_method.9 = getattr(value=$158load_global.8, attr=log2) ['$158load_global.8', '$160load_method.9']
    $164call_method.11 = call $160load_method.9(result, func=$160load_method.9, args=[Var(result, distances.py:639)], kws=(), vararg=None, varkwarg=None, target=None) ['$160load_method.9', '$164call_method.11', 'result']
    $166return_value.12 = cast(value=$164call_method.11) ['$164call_method.11', '$166return_value.12']
    return $166return_value.12               ['$166return_value.12']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159117f910>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159117f910>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159117f910>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159117f910>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block analysis pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159117f910>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159117f910>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159117f910>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block analysis pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159117f910>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block analysis pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159117f910>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159117f910>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block analysis pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159117f910>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f159117f910>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result
DEBUG:numba.core.ssa:on stmt: result = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result, func=$160load_method.9, args=[Var(result, distances.py:639)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591176470>,
                                   96)],
             '$102pred': [(<numba.core.ir.Assign object at 0x7f15911766e0>,
                           96)],
             '$106return_value.1': [(<numba.core.ir.Assign object at 0x7f1591176aa0>,
                                     104)],
             '$112compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591177010>,
                                   108)],
             '$114pred': [(<numba.core.ir.Assign object at 0x7f1591177280>,
                           108)],
             '$120compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591177790>,
                                   116)],
             '$122pred': [(<numba.core.ir.Assign object at 0x7f1591177a00>,
                           116)],
             '$124load_global.0': [(<numba.core.ir.Assign object at 0x7f1591177c40>,
                                    124)],
             '$126return_value.1': [(<numba.core.ir.Assign object at 0x7f1591177dc0>,
                                     124)],
             '$132compare_op.2': [(<numba.core.ir.Assign object at 0x7f159117c370>,
                                   128)],
             '$134pred': [(<numba.core.ir.Assign object at 0x7f159117c5e0>,
                           128)],
             '$136load_global.0': [(<numba.core.ir.Assign object at 0x7f159117c820>,
                                    136)],
             '$138return_value.1': [(<numba.core.ir.Assign object at 0x7f159117c9a0>,
                                     136)],
             '$140load_global.0': [(<numba.core.ir.Assign object at 0x7f159117cc40>,
                                    140)],
             '$142load_method.1': [(<numba.core.ir.Assign object at 0x7f159117cdc0>,
                                    140)],
             '$148binary_multiply.4': [(<numba.core.ir.Assign object at 0x7f159117d1b0>,
                                        140)],
             '$150call_method.5': [(<numba.core.ir.Assign object at 0x7f159117d390>,
                                    140)],
             '$154binary_true_divide.7': [(<numba.core.ir.Assign object at 0x7f159117d5d0>,
                                           140)],
             '$158load_global.8': [(<numba.core.ir.Assign object at 0x7f159117d7e0>,
                                    140)],
             '$160load_method.9': [(<numba.core.ir.Assign object at 0x7f159117d960>,
                                    140)],
             '$164call_method.11': [(<numba.core.ir.Assign object at 0x7f159117dc90>,
                                     140)],
             '$166return_value.12': [(<numba.core.ir.Assign object at 0x7f159117dd80>,
                                      140)],
             '$16load_attr.4': [(<numba.core.ir.Assign object at 0x7f159130e080>,
                                 0)],
             '$24load_global.7': [(<numba.core.ir.Assign object at 0x7f1591142950>,
                                   0)],
             '$28call_function.9': [(<numba.core.ir.Assign object at 0x7f159115b460>,
                                     0)],
             '$30get_iter.10': [(<numba.core.ir.Assign object at 0x7f159115b580>,
                                 0)],
             '$32for_iter.1': [(<numba.core.ir.Assign object at 0x7f159115b6d0>,
                                32)],
             '$32for_iter.2': [(<numba.core.ir.Assign object at 0x7f159115b7f0>,
                                32)],
             '$32for_iter.3': [(<numba.core.ir.Assign object at 0x7f159115b910>,
                                32)],
             '$38load_global.3': [(<numba.core.ir.Assign object at 0x7f159115be80>,
                                   34)],
             '$40load_method.4': [(<numba.core.ir.Assign object at 0x7f1591174040>,
                                   34)],
             '$46binary_subscr.7': [(<numba.core.ir.Assign object at 0x7f1591174430>,
                                     34)],
             '$52binary_subscr.10': [(<numba.core.ir.Assign object at 0x7f15911747f0>,
                                      34)],
             '$54binary_multiply.11': [(<numba.core.ir.Assign object at 0x7f1591174970>,
                                        34)],
             '$56call_method.12': [(<numba.core.ir.Assign object at 0x7f1591174b50>,
                                    34)],
             '$58inplace_add.13': [(<numba.core.ir.Assign object at 0x7f1591174c70>,
                                    34)],
             '$68binary_subscr.17': [(<numba.core.ir.Assign object at 0x7f1591175210>,
                                      34)],
             '$70inplace_add.18': [(<numba.core.ir.Assign object at 0x7f1591175390>,
                                    34)],
             '$80binary_subscr.22': [(<numba.core.ir.Assign object at 0x7f1591175930>,
                                      34)],
             '$82inplace_add.23': [(<numba.core.ir.Assign object at 0x7f1591175ab0>,
                                    34)],
             '$92compare_op.2': [(<numba.core.ir.Assign object at 0x7f1591175cf0>,
                                  88)],
             '$94pred': [(<numba.core.ir.Assign object at 0x7f1591175f60>, 88)],
             '$const104.0.1': [(<numba.core.ir.Assign object at 0x7f1591176920>,
                                104)],
             '$const110.1.2': [(<numba.core.ir.Assign object at 0x7f1591176e60>,
                                108)],
             '$const118.1.2': [(<numba.core.ir.Assign object at 0x7f15911775e0>,
                                116)],
             '$const130.1.2': [(<numba.core.ir.Assign object at 0x7f159117c1c0>,
                                128)],
             '$const18.5.2': [(<numba.core.ir.Assign object at 0x7f159130c160>,
                               0)],
             '$const90.1.2': [(<numba.core.ir.Assign object at 0x7f15911750f0>,
                               88)],
             '$const98.1.2': [(<numba.core.ir.Assign object at 0x7f15911762c0>,
                               96)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x7f15913b57e0>, 0)],
             '$phi34.1': [(<numba.core.ir.Assign object at 0x7f159115b5e0>,
                           32)],
             'bool102': [(<numba.core.ir.Assign object at 0x7f15911765c0>, 96)],
             'bool114': [(<numba.core.ir.Assign object at 0x7f1591177160>,
                          108)],
             'bool122': [(<numba.core.ir.Assign object at 0x7f15911778e0>,
                          116)],
             'bool134': [(<numba.core.ir.Assign object at 0x7f159117c4c0>,
                          128)],
             'bool94': [(<numba.core.ir.Assign object at 0x7f1591175e40>, 88)],
             'dim': [(<numba.core.ir.Assign object at 0x7f159117eda0>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f159115bbe0>, 34)],
             'l1_norm_x': [(<numba.core.ir.Assign object at 0x7f15913b4520>, 0),
                           (<numba.core.ir.Assign object at 0x7f1591175450>,
                            34)],
             'l1_norm_y': [(<numba.core.ir.Assign object at 0x7f15912dfd90>, 0),
                           (<numba.core.ir.Assign object at 0x7f1591175b70>,
                            34)],
             'result': [(<numba.core.ir.Assign object at 0x7f15913b6290>, 0),
                        (<numba.core.ir.Assign object at 0x7f1591174d30>, 34),
                        (<numba.core.ir.Assign object at 0x7f159117d690>, 140)],
             'x': [(<numba.core.ir.Assign object at 0x7f15912f3af0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1591238190>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15913a7ca0>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $58inplace_add.13
DEBUG:numba.core.ssa:replaced with: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result
DEBUG:numba.core.ssa:on stmt: result = $154binary_true_divide.7
DEBUG:numba.core.ssa:replaced with: result.2 = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result, func=$160load_method.9, args=[Var(result, distances.py:639)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15912f07f0>],
             34: [<numba.core.ir.Assign object at 0x7f15912f1030>],
             140: [<numba.core.ir.Assign object at 0x7f159115abc0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node result.3 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:replaced with: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result <= $const130.1.2
DEBUG:numba.core.ssa:find_def var='result' stmt=$132compare_op.2 = result <= $const130.1.2
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $132compare_op.2 = result.3 <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result
DEBUG:numba.core.ssa:find_def var='result' stmt=$154binary_true_divide.7 = $150call_method.5 / result
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 128 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 128
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $154binary_true_divide.7 = $150call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result, func=$160load_method.9, args=[Var(result, distances.py:639)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='result' stmt=$164call_method.11 = call $160load_method.9(result, func=$160load_method.9, args=[Var(result, distances.py:639)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $164call_method.11 = call $160load_method.9(result.2, func=$160load_method.9, args=[Var(result.2, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.ssa:Fix SSA violator on var l1_norm_x
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: l1_norm_x
DEBUG:numba.core.ssa:replaced with: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:639), Var(result.1, distances.py:645)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:replaced with: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result.3 <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result.2, func=$160load_method.9, args=[Var(result.2, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15912f1720>],
             34: [<numba.core.ir.Assign object at 0x7f15912f0f10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:639), Var(result.1, distances.py:645)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node l1_norm_x.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:replaced with: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x.2, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $92compare_op.2 = l1_norm_x.2 == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $112compare_op.2 = l1_norm_x.2 == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result.3 <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f1000>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$148binary_multiply.4 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 128 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 128
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $148binary_multiply.4 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result.2, func=$160load_method.9, args=[Var(result.2, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.ssa:Fix SSA violator on var l1_norm_y
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f0910>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: l1_norm_y
DEBUG:numba.core.ssa:replaced with: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f0910>
DEBUG:numba.core.ssa:on stmt: l1_norm_x.2 = phi(incoming_values=[Var(l1_norm_x, distances.py:640), Var(l1_norm_x.1, distances.py:646)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:639), Var(result.1, distances.py:645)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f0910>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x.2, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:replaced with: l1_norm_y.1 = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f0910>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x.2 == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f0910>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f0910>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f0910>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x.2 == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f0910>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f0910>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f0910>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result.3 <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f0910>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15912f0910>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result.2, func=$160load_method.9, args=[Var(result.2, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15912f08e0>],
             34: [<numba.core.ir.Assign object at 0x7f159115b070>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: l1_norm_x.2 = phi(incoming_values=[Var(l1_norm_x, distances.py:640), Var(l1_norm_x.1, distances.py:646)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:639), Var(result.1, distances.py:645)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x.2, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node l1_norm_y.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def l1_norm_y.1 = $82inplace_add.23
DEBUG:numba.core.ssa:replaced with: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y.2, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y.1 = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x.2 == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:find_def_from_top label 96
DEBUG:numba.core.ssa:idom 88 from label 96
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $100compare_op.2 = l1_norm_y.2 == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x.2 == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $120compare_op.2 = l1_norm_y.2 == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result.3 <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15912f2b60>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$148binary_multiply.4 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 128 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 128
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $148binary_multiply.4 = l1_norm_x.2 * l1_norm_y.2
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result.2, func=$160load_method.9, args=[Var(result.2, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=621)
           2	LOAD_CONST(arg=1, lineno=639)
           4	STORE_FAST(arg=2, lineno=639)
           6	LOAD_CONST(arg=1, lineno=640)
           8	STORE_FAST(arg=3, lineno=640)
          10	LOAD_CONST(arg=1, lineno=641)
          12	STORE_FAST(arg=4, lineno=641)
          14	LOAD_FAST(arg=0, lineno=642)
          16	LOAD_ATTR(arg=0, lineno=642)
          18	LOAD_CONST(arg=2, lineno=642)
          20	BINARY_SUBSCR(arg=None, lineno=642)
          22	STORE_FAST(arg=5, lineno=642)
          24	LOAD_GLOBAL(arg=1, lineno=644)
          26	LOAD_FAST(arg=5, lineno=644)
          28	CALL_FUNCTION(arg=1, lineno=644)
          30	GET_ITER(arg=None, lineno=644)
>         32	FOR_ITER(arg=27, lineno=644)
          34	STORE_FAST(arg=6, lineno=644)
          36	LOAD_FAST(arg=2, lineno=645)
          38	LOAD_GLOBAL(arg=2, lineno=645)
          40	LOAD_METHOD(arg=3, lineno=645)
          42	LOAD_FAST(arg=0, lineno=645)
          44	LOAD_FAST(arg=6, lineno=645)
          46	BINARY_SUBSCR(arg=None, lineno=645)
          48	LOAD_FAST(arg=1, lineno=645)
          50	LOAD_FAST(arg=6, lineno=645)
          52	BINARY_SUBSCR(arg=None, lineno=645)
          54	BINARY_MULTIPLY(arg=None, lineno=645)
          56	CALL_METHOD(arg=1, lineno=645)
          58	INPLACE_ADD(arg=None, lineno=645)
          60	STORE_FAST(arg=2, lineno=645)
          62	LOAD_FAST(arg=3, lineno=646)
          64	LOAD_FAST(arg=0, lineno=646)
          66	LOAD_FAST(arg=6, lineno=646)
          68	BINARY_SUBSCR(arg=None, lineno=646)
          70	INPLACE_ADD(arg=None, lineno=646)
          72	STORE_FAST(arg=3, lineno=646)
          74	LOAD_FAST(arg=4, lineno=647)
          76	LOAD_FAST(arg=1, lineno=647)
          78	LOAD_FAST(arg=6, lineno=647)
          80	BINARY_SUBSCR(arg=None, lineno=647)
          82	INPLACE_ADD(arg=None, lineno=647)
          84	STORE_FAST(arg=4, lineno=647)
          86	JUMP_ABSOLUTE(arg=17, lineno=647)
>         88	LOAD_FAST(arg=3, lineno=649)
          90	LOAD_CONST(arg=2, lineno=649)
          92	COMPARE_OP(arg=2, lineno=649)
          94	POP_JUMP_IF_FALSE(arg=55, lineno=649)
          96	LOAD_FAST(arg=4, lineno=649)
          98	LOAD_CONST(arg=2, lineno=649)
         100	COMPARE_OP(arg=2, lineno=649)
         102	POP_JUMP_IF_FALSE(arg=55, lineno=649)
         104	LOAD_CONST(arg=1, lineno=650)
         106	RETURN_VALUE(arg=None, lineno=650)
>        108	LOAD_FAST(arg=3, lineno=651)
         110	LOAD_CONST(arg=2, lineno=651)
         112	COMPARE_OP(arg=2, lineno=651)
         114	POP_JUMP_IF_TRUE(arg=63, lineno=651)
         116	LOAD_FAST(arg=4, lineno=651)
         118	LOAD_CONST(arg=2, lineno=651)
         120	COMPARE_OP(arg=2, lineno=651)
         122	POP_JUMP_IF_FALSE(arg=65, lineno=651)
>        124	LOAD_GLOBAL(arg=4, lineno=652)
         126	RETURN_VALUE(arg=None, lineno=652)
>        128	LOAD_FAST(arg=2, lineno=653)
         130	LOAD_CONST(arg=2, lineno=653)
         132	COMPARE_OP(arg=1, lineno=653)
         134	POP_JUMP_IF_FALSE(arg=71, lineno=653)
         136	LOAD_GLOBAL(arg=4, lineno=654)
         138	RETURN_VALUE(arg=None, lineno=654)
>        140	LOAD_GLOBAL(arg=2, lineno=656)
         142	LOAD_METHOD(arg=3, lineno=656)
         144	LOAD_FAST(arg=3, lineno=656)
         146	LOAD_FAST(arg=4, lineno=656)
         148	BINARY_MULTIPLY(arg=None, lineno=656)
         150	CALL_METHOD(arg=1, lineno=656)
         152	LOAD_FAST(arg=2, lineno=656)
         154	BINARY_TRUE_DIVIDE(arg=None, lineno=656)
         156	STORE_FAST(arg=2, lineno=656)
         158	LOAD_GLOBAL(arg=2, lineno=657)
         160	LOAD_METHOD(arg=5, lineno=657)
         162	LOAD_FAST(arg=2, lineno=657)
         164	CALL_METHOD(arg=1, lineno=657)
         166	RETURN_VALUE(arg=None, lineno=657)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=621)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=639)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=639)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=640)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=640)
DEBUG:numba.core.byteflow:stack ['$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=641)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_FAST(arg=4, lineno=641)
DEBUG:numba.core.byteflow:stack ['$const10.2.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=642)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_ATTR(arg=0, lineno=642)
DEBUG:numba.core.byteflow:stack ['$x14.3']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=642)
DEBUG:numba.core.byteflow:stack ['$16load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=642)
DEBUG:numba.core.byteflow:stack ['$16load_attr.4', '$const18.5.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=5, lineno=642)
DEBUG:numba.core.byteflow:stack ['$20binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_GLOBAL(arg=1, lineno=644)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=644)
DEBUG:numba.core.byteflow:stack ['$24load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=644)
DEBUG:numba.core.byteflow:stack ['$24load_global.7', '$dim26.8']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=644)
DEBUG:numba.core.byteflow:stack ['$28call_function.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.10',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=27, lineno=644)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=88, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=88 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=88 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=3, lineno=649)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=2, lineno=649)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x88.0']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=COMPARE_OP(arg=2, lineno=649)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x88.0', '$const90.1.2']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=POP_JUMP_IF_FALSE(arg=55, lineno=649)
DEBUG:numba.core.byteflow:stack ['$92compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0), Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=96 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=6, lineno=644)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=2, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_METHOD(arg=3, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$38load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=6, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$x42.5']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$x42.5', '$i44.6']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7', '$y48.8']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7', '$y48.8', '$i50.9']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=BINARY_MULTIPLY(arg=None, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$46binary_subscr.7', '$52binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$40load_method.4', '$54binary_multiply.11']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=INPLACE_ADD(arg=None, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$result36.2', '$56call_method.12']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=STORE_FAST(arg=2, lineno=645)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$58inplace_add.13']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=3, lineno=646)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=646)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=646)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14', '$x64.15']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=646)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14', '$x64.15', '$i66.16']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=INPLACE_ADD(arg=None, lineno=646)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_x62.14', '$68binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=STORE_FAST(arg=3, lineno=646)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$70inplace_add.18']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=1, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=6, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19', '$y76.20']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19', '$y76.20', '$i78.21']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=INPLACE_ADD(arg=None, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$l1_norm_y74.19', '$80binary_subscr.22']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=STORE_FAST(arg=4, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$82inplace_add.23']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=JUMP_ABSOLUTE(arg=17, lineno=647)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=96 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=4, lineno=649)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=2, lineno=649)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y96.0']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=COMPARE_OP(arg=2, lineno=649)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y96.0', '$const98.1.2']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=POP_JUMP_IF_FALSE(arg=55, lineno=649)
DEBUG:numba.core.byteflow:stack ['$100compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=32 nstack_initial=1), State(pc_initial=104 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=3, lineno=651)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_CONST(arg=2, lineno=651)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x108.0']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=COMPARE_OP(arg=2, lineno=651)
DEBUG:numba.core.byteflow:stack ['$l1_norm_x108.0', '$const110.1.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=POP_JUMP_IF_TRUE(arg=63, lineno=651)
DEBUG:numba.core.byteflow:stack ['$112compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=124, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=104 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=1, lineno=650)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=650)
DEBUG:numba.core.byteflow:stack ['$const104.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=4, lineno=651)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_CONST(arg=2, lineno=651)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y116.0']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=COMPARE_OP(arg=2, lineno=651)
DEBUG:numba.core.byteflow:stack ['$l1_norm_y116.0', '$const118.1.2']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=POP_JUMP_IF_FALSE(arg=65, lineno=651)
DEBUG:numba.core.byteflow:stack ['$120compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=124, stack=(), blockstack=(), npush=0), Edge(pc=128, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=124 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=124 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_GLOBAL(arg=4, lineno=652)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=RETURN_VALUE(arg=None, lineno=652)
DEBUG:numba.core.byteflow:stack ['$124load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=128 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=653)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_CONST(arg=2, lineno=653)
DEBUG:numba.core.byteflow:stack ['$result128.0']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=COMPARE_OP(arg=1, lineno=653)
DEBUG:numba.core.byteflow:stack ['$result128.0', '$const130.1.2']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=POP_JUMP_IF_FALSE(arg=71, lineno=653)
DEBUG:numba.core.byteflow:stack ['$132compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=136, stack=(), blockstack=(), npush=0), Edge(pc=140, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=136 nstack_initial=0), State(pc_initial=140 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=136 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_GLOBAL(arg=4, lineno=654)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=138, inst=RETURN_VALUE(arg=None, lineno=654)
DEBUG:numba.core.byteflow:stack ['$136load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=140 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=140 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_GLOBAL(arg=2, lineno=656)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_METHOD(arg=3, lineno=656)
DEBUG:numba.core.byteflow:stack ['$140load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=LOAD_FAST(arg=3, lineno=656)
DEBUG:numba.core.byteflow:stack ['$142load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_FAST(arg=4, lineno=656)
DEBUG:numba.core.byteflow:stack ['$142load_method.1', '$l1_norm_x144.2']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=BINARY_MULTIPLY(arg=None, lineno=656)
DEBUG:numba.core.byteflow:stack ['$142load_method.1', '$l1_norm_x144.2', '$l1_norm_y146.3']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=CALL_METHOD(arg=1, lineno=656)
DEBUG:numba.core.byteflow:stack ['$142load_method.1', '$148binary_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=2, lineno=656)
DEBUG:numba.core.byteflow:stack ['$150call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=656)
DEBUG:numba.core.byteflow:stack ['$150call_method.5', '$result152.6']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=STORE_FAST(arg=2, lineno=656)
DEBUG:numba.core.byteflow:stack ['$154binary_true_divide.7']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_GLOBAL(arg=2, lineno=657)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_METHOD(arg=5, lineno=657)
DEBUG:numba.core.byteflow:stack ['$158load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=2, lineno=657)
DEBUG:numba.core.byteflow:stack ['$160load_method.9']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=CALL_METHOD(arg=1, lineno=657)
DEBUG:numba.core.byteflow:stack ['$160load_method.9', '$result162.10']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=RETURN_VALUE(arg=None, lineno=657)
DEBUG:numba.core.byteflow:stack ['$164call_method.11']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=88 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=128 nstack_initial=0): set(),
             State(pc_initial=136 nstack_initial=0): set(),
             State(pc_initial=140 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.10',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.10', State(pc_initial=0 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi32.0': '$30get_iter.10'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$const6.1.1'}), (8, {'value': '$const6.1.1'}), (10, {'res': '$const10.2.1'}), (12, {'value': '$const10.2.1'}), (14, {'res': '$x14.3'}), (16, {'item': '$x14.3', 'res': '$16load_attr.4'}), (18, {'res': '$const18.5.2'}), (20, {'index': '$const18.5.2', 'target': '$16load_attr.4', 'res': '$20binary_subscr.6'}), (22, {'value': '$20binary_subscr.6'}), (24, {'res': '$24load_global.7'}), (26, {'res': '$dim26.8'}), (28, {'func': '$24load_global.7', 'args': ['$dim26.8'], 'res': '$28call_function.9'}), (30, {'value': '$28call_function.9', 'res': '$30get_iter.10'})), outgoing_phis={'$phi32.0': '$30get_iter.10'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.10',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$result36.2'}), (38, {'res': '$38load_global.3'}), (40, {'item': '$38load_global.3', 'res': '$40load_method.4'}), (42, {'res': '$x42.5'}), (44, {'res': '$i44.6'}), (46, {'index': '$i44.6', 'target': '$x42.5', 'res': '$46binary_subscr.7'}), (48, {'res': '$y48.8'}), (50, {'res': '$i50.9'}), (52, {'index': '$i50.9', 'target': '$y48.8', 'res': '$52binary_subscr.10'}), (54, {'lhs': '$46binary_subscr.7', 'rhs': '$52binary_subscr.10', 'res': '$54binary_multiply.11'}), (56, {'func': '$40load_method.4', 'args': ['$54binary_multiply.11'], 'res': '$56call_method.12'}), (58, {'lhs': '$result36.2', 'rhs': '$56call_method.12', 'res': '$58inplace_add.13'}), (60, {'value': '$58inplace_add.13'}), (62, {'res': '$l1_norm_x62.14'}), (64, {'res': '$x64.15'}), (66, {'res': '$i66.16'}), (68, {'index': '$i66.16', 'target': '$x64.15', 'res': '$68binary_subscr.17'}), (70, {'lhs': '$l1_norm_x62.14', 'rhs': '$68binary_subscr.17', 'res': '$70inplace_add.18'}), (72, {'value': '$70inplace_add.18'}), (74, {'res': '$l1_norm_y74.19'}), (76, {'res': '$y76.20'}), (78, {'res': '$i78.21'}), (80, {'index': '$i78.21', 'target': '$y76.20', 'res': '$80binary_subscr.22'}), (82, {'lhs': '$l1_norm_y74.19', 'rhs': '$80binary_subscr.22', 'res': '$82inplace_add.23'}), (84, {'value': '$82inplace_add.23'}), (86, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$l1_norm_x88.0'}), (90, {'res': '$const90.1.2'}), (92, {'lhs': '$l1_norm_x88.0', 'rhs': '$const90.1.2', 'res': '$92compare_op.2'}), (94, {'pred': '$92compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: (), 108: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$l1_norm_y96.0'}), (98, {'res': '$const98.1.2'}), (100, {'lhs': '$l1_norm_y96.0', 'rhs': '$const98.1.2', 'res': '$100compare_op.2'}), (102, {'pred': '$100compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 108: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$const104.0.1'}), (106, {'retval': '$const104.0.1', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$l1_norm_x108.0'}), (110, {'res': '$const110.1.2'}), (112, {'lhs': '$l1_norm_x108.0', 'rhs': '$const110.1.2', 'res': '$112compare_op.2'}), (114, {'pred': '$112compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 124: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$l1_norm_y116.0'}), (118, {'res': '$const118.1.2'}), (120, {'lhs': '$l1_norm_y116.0', 'rhs': '$const118.1.2', 'res': '$120compare_op.2'}), (122, {'pred': '$120compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: (), 128: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$124load_global.0'}), (126, {'retval': '$124load_global.0', 'castval': '$126return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=128 nstack_initial=0):
AdaptBlockInfo(insts=((128, {'res': '$result128.0'}), (130, {'res': '$const130.1.2'}), (132, {'lhs': '$result128.0', 'rhs': '$const130.1.2', 'res': '$132compare_op.2'}), (134, {'pred': '$132compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={136: (), 140: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=136 nstack_initial=0):
AdaptBlockInfo(insts=((136, {'res': '$136load_global.0'}), (138, {'retval': '$136load_global.0', 'castval': '$138return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=140 nstack_initial=0):
AdaptBlockInfo(insts=((140, {'res': '$140load_global.0'}), (142, {'item': '$140load_global.0', 'res': '$142load_method.1'}), (144, {'res': '$l1_norm_x144.2'}), (146, {'res': '$l1_norm_y146.3'}), (148, {'lhs': '$l1_norm_x144.2', 'rhs': '$l1_norm_y146.3', 'res': '$148binary_multiply.4'}), (150, {'func': '$142load_method.1', 'args': ['$148binary_multiply.4'], 'res': '$150call_method.5'}), (152, {'res': '$result152.6'}), (154, {'lhs': '$150call_method.5', 'rhs': '$result152.6', 'res': '$154binary_true_divide.7'}), (156, {'value': '$154binary_true_divide.7'}), (158, {'res': '$158load_global.8'}), (160, {'item': '$158load_global.8', 'res': '$160load_method.9'}), (162, {'res': '$result162.10'}), (164, {'func': '$160load_method.9', 'args': ['$result162.10'], 'res': '$164call_method.11'}), (166, {'retval': '$164call_method.11', 'castval': '$166return_value.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    l1_norm_x = const(float, 0.0)            ['l1_norm_x']
    l1_norm_y = const(float, 0.0)            ['l1_norm_y']
    $16load_attr.4 = getattr(value=x, attr=shape) ['$16load_attr.4', 'x']
    $const18.5.2 = const(int, 0)             ['$const18.5.2']
    dim = getitem(value=$16load_attr.4, index=$const18.5.2, fn=<built-in function getitem>) ['$16load_attr.4', '$const18.5.2', 'dim']
    $24load_global.7 = global(range: <class 'range'>) ['$24load_global.7']
    $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.7', '$28call_function.9', 'dim']
    $30get_iter.10 = getiter(value=$28call_function.9) ['$28call_function.9', '$30get_iter.10']
    $phi32.0 = $30get_iter.10                ['$30get_iter.10', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 88             ['$32for_iter.3']
label 34:
    i = $phi34.1                             ['$phi34.1', 'i']
    $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$38load_global.3']
    $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt) ['$38load_global.3', '$40load_method.4']
    $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$46binary_subscr.7', 'i', 'x']
    $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$52binary_subscr.10', 'i', 'y']
    $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10 ['$46binary_subscr.7', '$52binary_subscr.10', '$54binary_multiply.11']
    $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_method.4', '$54binary_multiply.11', '$56call_method.12']
    $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined) ['$56call_method.12', '$58inplace_add.13', 'result']
    result = $58inplace_add.13               ['$58inplace_add.13', 'result']
    $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$68binary_subscr.17', 'i', 'x']
    $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined) ['$68binary_subscr.17', '$70inplace_add.18', 'l1_norm_x']
    l1_norm_x = $70inplace_add.18            ['$70inplace_add.18', 'l1_norm_x']
    $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$80binary_subscr.22', 'i', 'y']
    $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined) ['$80binary_subscr.22', '$82inplace_add.23', 'l1_norm_y']
    l1_norm_y = $82inplace_add.23            ['$82inplace_add.23', 'l1_norm_y']
    jump 32                                  []
label 88:
    $const90.1.2 = const(int, 0)             ['$const90.1.2']
    $92compare_op.2 = l1_norm_x == $const90.1.2 ['$92compare_op.2', '$const90.1.2', 'l1_norm_x']
    bool94 = global(bool: <class 'bool'>)    ['bool94']
    $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None) ['$92compare_op.2', '$94pred', 'bool94']
    branch $94pred, 96, 108                  ['$94pred']
label 96:
    $const98.1.2 = const(int, 0)             ['$const98.1.2']
    $100compare_op.2 = l1_norm_y == $const98.1.2 ['$100compare_op.2', '$const98.1.2', 'l1_norm_y']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None) ['$100compare_op.2', '$102pred', 'bool102']
    branch $102pred, 104, 108                ['$102pred']
label 104:
    $const104.0.1 = const(float, 0.0)        ['$const104.0.1']
    $106return_value.1 = cast(value=$const104.0.1) ['$106return_value.1', '$const104.0.1']
    return $106return_value.1                ['$106return_value.1']
label 108:
    $const110.1.2 = const(int, 0)            ['$const110.1.2']
    $112compare_op.2 = l1_norm_x == $const110.1.2 ['$112compare_op.2', '$const110.1.2', 'l1_norm_x']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None) ['$112compare_op.2', '$114pred', 'bool114']
    branch $114pred, 124, 116                ['$114pred']
label 116:
    $const118.1.2 = const(int, 0)            ['$const118.1.2']
    $120compare_op.2 = l1_norm_y == $const118.1.2 ['$120compare_op.2', '$const118.1.2', 'l1_norm_y']
    bool122 = global(bool: <class 'bool'>)   ['bool122']
    $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None) ['$120compare_op.2', '$122pred', 'bool122']
    branch $122pred, 124, 128                ['$122pred']
label 124:
    $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38) ['$124load_global.0']
    $126return_value.1 = cast(value=$124load_global.0) ['$124load_global.0', '$126return_value.1']
    return $126return_value.1                ['$126return_value.1']
label 128:
    $const130.1.2 = const(int, 0)            ['$const130.1.2']
    $132compare_op.2 = result <= $const130.1.2 ['$132compare_op.2', '$const130.1.2', 'result']
    bool134 = global(bool: <class 'bool'>)   ['bool134']
    $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None) ['$132compare_op.2', '$134pred', 'bool134']
    branch $134pred, 136, 140                ['$134pred']
label 136:
    $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38) ['$136load_global.0']
    $138return_value.1 = cast(value=$136load_global.0) ['$136load_global.0', '$138return_value.1']
    return $138return_value.1                ['$138return_value.1']
label 140:
    $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$140load_global.0']
    $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt) ['$140load_global.0', '$142load_method.1']
    $148binary_multiply.4 = l1_norm_x * l1_norm_y ['$148binary_multiply.4', 'l1_norm_x', 'l1_norm_y']
    $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None) ['$142load_method.1', '$148binary_multiply.4', '$150call_method.5']
    $154binary_true_divide.7 = $150call_method.5 / result ['$150call_method.5', '$154binary_true_divide.7', 'result']
    result = $154binary_true_divide.7        ['$154binary_true_divide.7', 'result']
    $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$158load_global.8']
    $160load_method.9 = getattr(value=$158load_global.8, attr=log2) ['$158load_global.8', '$160load_method.9']
    $164call_method.11 = call $160load_method.9(result, func=$160load_method.9, args=[Var(result, distances.py:639)], kws=(), vararg=None, varkwarg=None, target=None) ['$160load_method.9', '$164call_method.11', 'result']
    $166return_value.12 = cast(value=$164call_method.11) ['$164call_method.11', '$166return_value.12']
    return $166return_value.12               ['$166return_value.12']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911f1d80>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911f1d80>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911f1d80>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911f1d80>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block analysis pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911f1d80>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911f1d80>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911f1d80>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block analysis pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911f1d80>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block analysis pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911f1d80>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911f1d80>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block analysis pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911f1d80>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911f1d80>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result
DEBUG:numba.core.ssa:on stmt: result = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result, func=$160load_method.9, args=[Var(result, distances.py:639)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100compare_op.2': [(<numba.core.ir.Assign object at 0x7f15911a1b10>,
                                   96)],
             '$102pred': [(<numba.core.ir.Assign object at 0x7f15911a15d0>,
                           96)],
             '$106return_value.1': [(<numba.core.ir.Assign object at 0x7f15911a09a0>,
                                     104)],
             '$112compare_op.2': [(<numba.core.ir.Assign object at 0x7f15911a0e50>,
                                   108)],
             '$114pred': [(<numba.core.ir.Assign object at 0x7f15911a10c0>,
                           108)],
             '$120compare_op.2': [(<numba.core.ir.Assign object at 0x7f15911a29e0>,
                                   116)],
             '$122pred': [(<numba.core.ir.Assign object at 0x7f159112d6f0>,
                           116)],
             '$124load_global.0': [(<numba.core.ir.Assign object at 0x7f159112ece0>,
                                    124)],
             '$126return_value.1': [(<numba.core.ir.Assign object at 0x7f159112d030>,
                                     124)],
             '$132compare_op.2': [(<numba.core.ir.Assign object at 0x7f159112ead0>,
                                   128)],
             '$134pred': [(<numba.core.ir.Assign object at 0x7f159112fd00>,
                           128)],
             '$136load_global.0': [(<numba.core.ir.Assign object at 0x7f1591151c30>,
                                    136)],
             '$138return_value.1': [(<numba.core.ir.Assign object at 0x7f1591151e10>,
                                     136)],
             '$140load_global.0': [(<numba.core.ir.Assign object at 0x7f1591132560>,
                                    140)],
             '$142load_method.1': [(<numba.core.ir.Assign object at 0x7f15911321a0>,
                                    140)],
             '$148binary_multiply.4': [(<numba.core.ir.Assign object at 0x7f1591159c00>,
                                        140)],
             '$150call_method.5': [(<numba.core.ir.Assign object at 0x7f159115a860>,
                                    140)],
             '$154binary_true_divide.7': [(<numba.core.ir.Assign object at 0x7f1591158a30>,
                                           140)],
             '$158load_global.8': [(<numba.core.ir.Assign object at 0x7f15911419c0>,
                                    140)],
             '$160load_method.9': [(<numba.core.ir.Assign object at 0x7f1591141e70>,
                                    140)],
             '$164call_method.11': [(<numba.core.ir.Assign object at 0x7f1591141390>,
                                     140)],
             '$166return_value.12': [(<numba.core.ir.Assign object at 0x7f1591142c80>,
                                      140)],
             '$16load_attr.4': [(<numba.core.ir.Assign object at 0x7f15911c43d0>,
                                 0)],
             '$24load_global.7': [(<numba.core.ir.Assign object at 0x7f15912fa470>,
                                   0)],
             '$28call_function.9': [(<numba.core.ir.Assign object at 0x7f15913b78b0>,
                                     0)],
             '$30get_iter.10': [(<numba.core.ir.Assign object at 0x7f159117d5d0>,
                                 0)],
             '$32for_iter.1': [(<numba.core.ir.Assign object at 0x7f15911c5030>,
                                32)],
             '$32for_iter.2': [(<numba.core.ir.Assign object at 0x7f15911c6080>,
                                32)],
             '$32for_iter.3': [(<numba.core.ir.Assign object at 0x7f15911c4cd0>,
                                32)],
             '$38load_global.3': [(<numba.core.ir.Assign object at 0x7f15911c5bd0>,
                                   34)],
             '$40load_method.4': [(<numba.core.ir.Assign object at 0x7f15911a1420>,
                                   34)],
             '$46binary_subscr.7': [(<numba.core.ir.Assign object at 0x7f15911a2e00>,
                                     34)],
             '$52binary_subscr.10': [(<numba.core.ir.Assign object at 0x7f15911a3b50>,
                                      34)],
             '$54binary_multiply.11': [(<numba.core.ir.Assign object at 0x7f15911a3a30>,
                                        34)],
             '$56call_method.12': [(<numba.core.ir.Assign object at 0x7f15911a3970>,
                                    34)],
             '$58inplace_add.13': [(<numba.core.ir.Assign object at 0x7f15911a3520>,
                                    34)],
             '$68binary_subscr.17': [(<numba.core.ir.Assign object at 0x7f15911a0730>,
                                      34)],
             '$70inplace_add.18': [(<numba.core.ir.Assign object at 0x7f15911a2f80>,
                                    34)],
             '$80binary_subscr.22': [(<numba.core.ir.Assign object at 0x7f15911a2680>,
                                      34)],
             '$82inplace_add.23': [(<numba.core.ir.Assign object at 0x7f15911a2410>,
                                    34)],
             '$92compare_op.2': [(<numba.core.ir.Assign object at 0x7f15911a1c30>,
                                  88)],
             '$94pred': [(<numba.core.ir.Assign object at 0x7f15911a1de0>, 88)],
             '$const104.0.1': [(<numba.core.ir.Assign object at 0x7f15911a1300>,
                                104)],
             '$const110.1.2': [(<numba.core.ir.Assign object at 0x7f15911a0ca0>,
                                108)],
             '$const118.1.2': [(<numba.core.ir.Assign object at 0x7f15911a3e50>,
                                116)],
             '$const130.1.2': [(<numba.core.ir.Assign object at 0x7f159112d090>,
                                128)],
             '$const18.5.2': [(<numba.core.ir.Assign object at 0x7f15911c4310>,
                               0)],
             '$const90.1.2': [(<numba.core.ir.Assign object at 0x7f15911a2d70>,
                               88)],
             '$const98.1.2': [(<numba.core.ir.Assign object at 0x7f15911a18a0>,
                               96)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x7f15912b7790>, 0)],
             '$phi34.1': [(<numba.core.ir.Assign object at 0x7f15911c5cf0>,
                           32)],
             'bool102': [(<numba.core.ir.Assign object at 0x7f15911a3310>, 96)],
             'bool114': [(<numba.core.ir.Assign object at 0x7f15911a0fa0>,
                          108)],
             'bool122': [(<numba.core.ir.Assign object at 0x7f15911a1fc0>,
                          116)],
             'bool134': [(<numba.core.ir.Assign object at 0x7f159112cb20>,
                          128)],
             'bool94': [(<numba.core.ir.Assign object at 0x7f15911a1d20>, 88)],
             'dim': [(<numba.core.ir.Assign object at 0x7f15911f1510>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f15911c52d0>, 34)],
             'l1_norm_x': [(<numba.core.ir.Assign object at 0x7f15911c5330>, 0),
                           (<numba.core.ir.Assign object at 0x7f15911a3760>,
                            34)],
             'l1_norm_y': [(<numba.core.ir.Assign object at 0x7f15911c4ee0>, 0),
                           (<numba.core.ir.Assign object at 0x7f15911a22c0>,
                            34)],
             'result': [(<numba.core.ir.Assign object at 0x7f15911c5a20>, 0),
                        (<numba.core.ir.Assign object at 0x7f15911a3580>, 34),
                        (<numba.core.ir.Assign object at 0x7f159115ab00>, 140)],
             'x': [(<numba.core.ir.Assign object at 0x7f15911c60b0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f15911c5ed0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1591131cf0>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $58inplace_add.13
DEBUG:numba.core.ssa:replaced with: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result
DEBUG:numba.core.ssa:on stmt: result = $154binary_true_divide.7
DEBUG:numba.core.ssa:replaced with: result.2 = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result, func=$160load_method.9, args=[Var(result, distances.py:639)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1591175420>],
             34: [<numba.core.ir.Assign object at 0x7f159117dd20>],
             140: [<numba.core.ir.Assign object at 0x7f15911427d0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node result.3 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:replaced with: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result <= $const130.1.2
DEBUG:numba.core.ssa:find_def var='result' stmt=$132compare_op.2 = result <= $const130.1.2
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $132compare_op.2 = result.3 <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result
DEBUG:numba.core.ssa:find_def var='result' stmt=$154binary_true_divide.7 = $150call_method.5 / result
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 128 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 128
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $154binary_true_divide.7 = $150call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result, func=$160load_method.9, args=[Var(result, distances.py:639)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='result' stmt=$164call_method.11 = call $160load_method.9(result, func=$160load_method.9, args=[Var(result, distances.py:639)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $164call_method.11 = call $160load_method.9(result.2, func=$160load_method.9, args=[Var(result.2, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.ssa:Fix SSA violator on var l1_norm_x
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591141a20>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: l1_norm_x
DEBUG:numba.core.ssa:replaced with: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591141a20>
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:639), Var(result.1, distances.py:645)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591141a20>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = $70inplace_add.18
DEBUG:numba.core.ssa:replaced with: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591141a20>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591141a20>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591141a20>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591141a20>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591141a20>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591141a20>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591141a20>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result.3 <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591141a20>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1591141a20>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result.2, func=$160load_method.9, args=[Var(result.2, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1591142770>],
             34: [<numba.core.ir.Assign object at 0x7f159117d540>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:639), Var(result.1, distances.py:645)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node l1_norm_x.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:replaced with: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x.2, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$92compare_op.2 = l1_norm_x == $const90.1.2
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $92compare_op.2 = l1_norm_x.2 == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$112compare_op.2 = l1_norm_x == $const110.1.2
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $112compare_op.2 = l1_norm_x.2 == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result.3 <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:find_def var='l1_norm_x' stmt=$148binary_multiply.4 = l1_norm_x * l1_norm_y
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 128 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 128
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $148binary_multiply.4 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result.2, func=$160load_method.9, args=[Var(result.2, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.ssa:Fix SSA violator on var l1_norm_y
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911754b0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: l1_norm_y
DEBUG:numba.core.ssa:replaced with: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911754b0>
DEBUG:numba.core.ssa:on stmt: l1_norm_x.2 = phi(incoming_values=[Var(l1_norm_x, distances.py:640), Var(l1_norm_x.1, distances.py:646)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:639), Var(result.1, distances.py:645)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911754b0>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x.2, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = $82inplace_add.23
DEBUG:numba.core.ssa:replaced with: l1_norm_y.1 = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911754b0>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x.2 == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911754b0>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911754b0>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911754b0>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x.2 == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911754b0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911754b0>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911754b0>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result.3 <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911754b0>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15911754b0>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result.2, func=$160load_method.9, args=[Var(result.2, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1591175330>],
             34: [<numba.core.ir.Assign object at 0x7f15912f0910>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_x = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $16load_attr.4 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const18.5.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$16load_attr.4, index=0, index_var=$const18.5.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $24load_global.7 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $28call_function.9 = call $24load_global.7(dim, func=$24load_global.7, args=[Var(dim, distances.py:642)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.10 = getiter(value=$28call_function.9)
DEBUG:numba.core.ssa:on stmt: $phi32.0 = $30get_iter.10
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: l1_norm_x.2 = phi(incoming_values=[Var(l1_norm_x, distances.py:640), Var(l1_norm_x.1, distances.py:646)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: result.3 = phi(incoming_values=[Var(result, distances.py:639), Var(result.1, distances.py:645)], incoming_blocks=[0, 34])
DEBUG:numba.core.ssa:on stmt: $32for_iter.1 = iternext(value=$phi32.0)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2 = pair_first(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3 = pair_second(value=$32for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi34.1 = $32for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3, 34, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: i = $phi34.1
DEBUG:numba.core.ssa:on stmt: $38load_global.3 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.4 = getattr(value=$38load_global.3, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_subscr.7 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.10 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $46binary_subscr.7 * $52binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $56call_method.12 = call $40load_method.4($54binary_multiply.11, func=$40load_method.4, args=[Var($54binary_multiply.11, distances.py:645)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.3, rhs=$56call_method.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $58inplace_add.13
DEBUG:numba.core.ssa:on stmt: $68binary_subscr.17 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70inplace_add.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_x.2, rhs=$68binary_subscr.17, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_x.1 = $70inplace_add.18
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.22 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 32 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node l1_norm_y.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def l1_norm_y = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def l1_norm_y.1 = $82inplace_add.23
DEBUG:numba.core.ssa:replaced with: $82inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=l1_norm_y.2, rhs=$80binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: l1_norm_y.1 = $82inplace_add.23
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const90.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = l1_norm_x.2 == $const90.1.2
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const98.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$100compare_op.2 = l1_norm_y == $const98.1.2
DEBUG:numba.core.ssa:find_def_from_top label 96
DEBUG:numba.core.ssa:idom 88 from label 96
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $100compare_op.2 = l1_norm_y.2 == $const98.1.2
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, distances.py:649),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const104.0.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0.1)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const110.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = l1_norm_x.2 == $const110.1.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 124, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$120compare_op.2 = l1_norm_y == $const118.1.2
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $120compare_op.2 = l1_norm_y.2 == $const118.1.2
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120compare_op.2, func=bool122, args=(Var($120compare_op.2, distances.py:651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=$124load_global.0)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $const130.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $132compare_op.2 = result.3 <= $const130.1.2
DEBUG:numba.core.ssa:on stmt: bool134 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $134pred = call bool134($132compare_op.2, func=bool134, args=(Var($132compare_op.2, distances.py:653),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $134pred, 136, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $136load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=$136load_global.0)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15911c4760>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $142load_method.1 = getattr(value=$140load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $148binary_multiply.4 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:find_def var='l1_norm_y' stmt=$148binary_multiply.4 = l1_norm_x.2 * l1_norm_y
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 128 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 128
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 116 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 108 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:idom 88 from label 108
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 32 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $148binary_multiply.4 = l1_norm_x.2 * l1_norm_y.2
DEBUG:numba.core.ssa:on stmt: $150call_method.5 = call $142load_method.1($148binary_multiply.4, func=$142load_method.1, args=[Var($148binary_multiply.4, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154binary_true_divide.7 = $150call_method.5 / result.3
DEBUG:numba.core.ssa:on stmt: result.2 = $154binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: $158load_global.8 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $160load_method.9 = getattr(value=$158load_global.8, attr=log2)
DEBUG:numba.core.ssa:on stmt: $164call_method.11 = call $160load_method.9(result.2, func=$160load_method.9, args=[Var(result.2, distances.py:656)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $166return_value.12 = cast(value=$164call_method.11)
DEBUG:numba.core.ssa:on stmt: return $166return_value.12
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=898)
           2	LOAD_CONST(arg=1, lineno=915)
           4	STORE_FAST(arg=2, lineno=915)
           6	LOAD_FAST(arg=0, lineno=916)
           8	LOAD_ATTR(arg=0, lineno=916)
          10	LOAD_CONST(arg=2, lineno=916)
          12	BINARY_SUBSCR(arg=None, lineno=916)
          14	STORE_FAST(arg=3, lineno=916)
          16	LOAD_GLOBAL(arg=1, lineno=918)
          18	LOAD_FAST(arg=3, lineno=918)
          20	CALL_FUNCTION(arg=1, lineno=918)
          22	GET_ITER(arg=None, lineno=918)
>         24	FOR_ITER(arg=16, lineno=918)
          26	STORE_FAST(arg=4, lineno=918)
          28	LOAD_FAST(arg=0, lineno=919)
          30	LOAD_FAST(arg=4, lineno=919)
          32	BINARY_SUBSCR(arg=None, lineno=919)
          34	LOAD_FAST(arg=1, lineno=919)
          36	LOAD_FAST(arg=4, lineno=919)
          38	BINARY_SUBSCR(arg=None, lineno=919)
          40	BINARY_XOR(arg=None, lineno=919)
          42	STORE_FAST(arg=5, lineno=919)
          44	LOAD_FAST(arg=2, lineno=920)
          46	LOAD_GLOBAL(arg=2, lineno=920)
          48	LOAD_FAST(arg=5, lineno=920)
          50	BINARY_SUBSCR(arg=None, lineno=920)
          52	INPLACE_ADD(arg=None, lineno=920)
          54	STORE_FAST(arg=2, lineno=920)
          56	JUMP_ABSOLUTE(arg=13, lineno=920)
>         58	LOAD_FAST(arg=2, lineno=922)
          60	RETURN_VALUE(arg=None, lineno=922)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=898)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=915)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=915)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=916)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=916)
DEBUG:numba.core.byteflow:stack ['$x6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=916)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=916)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2', '$const10.3.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=STORE_FAST(arg=3, lineno=916)
DEBUG:numba.core.byteflow:stack ['$12binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=918)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=918)
DEBUG:numba.core.byteflow:stack ['$16load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_FUNCTION(arg=1, lineno=918)
DEBUG:numba.core.byteflow:stack ['$16load_global.5', '$dim18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=GET_ITER(arg=None, lineno=918)
DEBUG:numba.core.byteflow:stack ['$20call_function.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$22get_iter.8',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi24.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=24 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=24, inst=FOR_ITER(arg=16, lineno=918)
DEBUG:numba.core.byteflow:stack ['$phi24.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=('$phi24.0', '$24for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=26 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=922)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=RETURN_VALUE(arg=None, lineno=922)
DEBUG:numba.core.byteflow:stack ['$result58.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=4, lineno=918)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=4, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$x28.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$x28.2', '$i30.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4', '$y34.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4', '$y34.5', '$i36.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_XOR(arg=None, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4', '$38binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=5, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$40binary_xor.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=2, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_GLOBAL(arg=2, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=5, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9', '$46load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9', '$46load_global.10', '$intersection48.11']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=INPLACE_ADD(arg=None, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9', '$50binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=2, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$52inplace_add.13']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=JUMP_ABSOLUTE(arg=13, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$phi26.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=26 nstack_initial=2): {'$phi26.1'},
             State(pc_initial=58 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi26.1': State(pc_initial=24 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi26.0': {('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi24.0': {('$22get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi26.1': {('$24for_iter.2', State(pc_initial=24 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$22get_iter.8'},
             State(pc_initial=24 nstack_initial=1): {'$phi26.1': '$24for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$x6.1'}), (8, {'item': '$x6.1', 'res': '$8load_attr.2'}), (10, {'res': '$const10.3.2'}), (12, {'index': '$const10.3.2', 'target': '$8load_attr.2', 'res': '$12binary_subscr.4'}), (14, {'value': '$12binary_subscr.4'}), (16, {'res': '$16load_global.5'}), (18, {'res': '$dim18.6'}), (20, {'func': '$16load_global.5', 'args': ['$dim18.6'], 'res': '$20call_function.7'}), (22, {'value': '$20call_function.7', 'res': '$22get_iter.8'})), outgoing_phis={'$phi24.0': '$22get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$22get_iter.8',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'iterator': '$phi24.0', 'pair': '$24for_iter.1', 'indval': '$24for_iter.2', 'pred': '$24for_iter.3'}),), outgoing_phis={'$phi26.1': '$24for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 26: ('$phi24.0', '$24for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=2):
AdaptBlockInfo(insts=((26, {'value': '$phi26.1'}), (28, {'res': '$x28.2'}), (30, {'res': '$i30.3'}), (32, {'index': '$i30.3', 'target': '$x28.2', 'res': '$32binary_subscr.4'}), (34, {'res': '$y34.5'}), (36, {'res': '$i36.6'}), (38, {'index': '$i36.6', 'target': '$y34.5', 'res': '$38binary_subscr.7'}), (40, {'lhs': '$32binary_subscr.4', 'rhs': '$38binary_subscr.7', 'res': '$40binary_xor.8'}), (42, {'value': '$40binary_xor.8'}), (44, {'res': '$result44.9'}), (46, {'res': '$46load_global.10'}), (48, {'res': '$intersection48.11'}), (50, {'index': '$intersection48.11', 'target': '$46load_global.10', 'res': '$50binary_subscr.12'}), (52, {'lhs': '$result44.9', 'rhs': '$50binary_subscr.12', 'res': '$52inplace_add.13'}), (54, {'value': '$52inplace_add.13'}), (56, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$phi26.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$result58.0'}), (60, {'retval': '$result58.0', 'castval': '$60return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    $8load_attr.2 = getattr(value=x, attr=shape) ['$8load_attr.2', 'x']
    $const10.3.2 = const(int, 0)             ['$const10.3.2']
    dim = getitem(value=$8load_attr.2, index=$const10.3.2, fn=<built-in function getitem>) ['$8load_attr.2', '$const10.3.2', 'dim']
    $16load_global.5 = global(range: <class 'range'>) ['$16load_global.5']
    $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:916)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.5', '$20call_function.7', 'dim']
    $22get_iter.8 = getiter(value=$20call_function.7) ['$20call_function.7', '$22get_iter.8']
    $phi24.0 = $22get_iter.8                 ['$22get_iter.8', '$phi24.0']
    jump 24                                  []
label 24:
    $24for_iter.1 = iternext(value=$phi24.0) ['$24for_iter.1', '$phi24.0']
    $24for_iter.2 = pair_first(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.2']
    $24for_iter.3 = pair_second(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.3']
    $phi26.1 = $24for_iter.2                 ['$24for_iter.2', '$phi26.1']
    branch $24for_iter.3, 26, 58             ['$24for_iter.3']
label 26:
    i = $phi26.1                             ['$phi26.1', 'i']
    $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$32binary_subscr.4', 'i', 'x']
    $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$38binary_subscr.7', 'i', 'y']
    intersection = $32binary_subscr.4 ^ $38binary_subscr.7 ['$32binary_subscr.4', '$38binary_subscr.7', 'intersection']
    $46load_global.10 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.]) ['$46load_global.10']
    $50binary_subscr.12 = getitem(value=$46load_global.10, index=intersection, fn=<built-in function getitem>) ['$46load_global.10', '$50binary_subscr.12', 'intersection']
    $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_subscr.12, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.12', '$52inplace_add.13', 'result']
    result = $52inplace_add.13               ['$52inplace_add.13', 'result']
    jump 24                                  []
label 58:
    $60return_value.1 = cast(value=result)   ['$60return_value.1', 'result']
    return $60return_value.1                 ['$60return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910b5120>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:916)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910b5120>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910b5120>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: intersection = $32binary_subscr.4 ^ $38binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $46load_global.10 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.12 = getitem(value=$46load_global.10, index=intersection, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_subscr.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $52inplace_add.13
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910b5120>
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16load_global.5': [(<numba.core.ir.Assign object at 0x7f15910b69b0>,
                                   0)],
             '$20call_function.7': [(<numba.core.ir.Assign object at 0x7f15910b6cb0>,
                                     0)],
             '$22get_iter.8': [(<numba.core.ir.Assign object at 0x7f15910b6dd0>,
                                0)],
             '$24for_iter.1': [(<numba.core.ir.Assign object at 0x7f15910b6fe0>,
                                24)],
             '$24for_iter.2': [(<numba.core.ir.Assign object at 0x7f15910b7100>,
                                24)],
             '$24for_iter.3': [(<numba.core.ir.Assign object at 0x7f15910b7220>,
                                24)],
             '$32binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f15910b78e0>,
                                     26)],
             '$38binary_subscr.7': [(<numba.core.ir.Assign object at 0x7f15910b5ae0>,
                                     26)],
             '$46load_global.10': [(<numba.core.ir.Assign object at 0x7f15910b4040>,
                                    26)],
             '$50binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f15910b46a0>,
                                      26)],
             '$52inplace_add.13': [(<numba.core.ir.Assign object at 0x7f15910b7ca0>,
                                    26)],
             '$60return_value.1': [(<numba.core.ir.Assign object at 0x7f15910b7eb0>,
                                    58)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f15910b6410>,
                                0)],
             '$const10.3.2': [(<numba.core.ir.Assign object at 0x7f15910b6590>,
                               0)],
             '$phi24.0': [(<numba.core.ir.Assign object at 0x7f15910b6200>, 0)],
             '$phi26.1': [(<numba.core.ir.Assign object at 0x7f15910b6f20>,
                           24)],
             'dim': [(<numba.core.ir.Assign object at 0x7f15910cd030>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f15910b74f0>, 26)],
             'intersection': [(<numba.core.ir.Assign object at 0x7f15910b57e0>,
                               26)],
             'result': [(<numba.core.ir.Assign object at 0x7f15910b6050>, 0),
                        (<numba.core.ir.Assign object at 0x7f15910b7d60>, 26)],
             'x': [(<numba.core.ir.Assign object at 0x7f15910b5db0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f15910b5ed0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15910b5120>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910b7430>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:916)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910b7430>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910b7430>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: intersection = $32binary_subscr.4 ^ $38binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $46load_global.10 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.12 = getitem(value=$46load_global.10, index=intersection, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_subscr.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $52inplace_add.13
DEBUG:numba.core.ssa:replaced with: result.1 = $52inplace_add.13
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910b7430>
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15910b7fa0>],
             26: [<numba.core.ir.Assign object at 0x7f15910b4be0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910b7430>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:916)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910b7430>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910b7430>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: intersection = $32binary_subscr.4 ^ $38binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $46load_global.10 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.12 = getitem(value=$46load_global.10, index=intersection, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_subscr.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_subscr.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 26
DEBUG:numba.core.ssa:idom 24 from label 26
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:find_def_from_top label 24
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 24
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:incoming_def result.1 = $52inplace_add.13
DEBUG:numba.core.ssa:replaced with: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$50binary_subscr.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.13
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910b7430>
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def var='result' stmt=$60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 24 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:replaced with: $60return_value.1 = cast(value=result.2)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=898)
           2	LOAD_CONST(arg=1, lineno=915)
           4	STORE_FAST(arg=2, lineno=915)
           6	LOAD_FAST(arg=0, lineno=916)
           8	LOAD_ATTR(arg=0, lineno=916)
          10	LOAD_CONST(arg=2, lineno=916)
          12	BINARY_SUBSCR(arg=None, lineno=916)
          14	STORE_FAST(arg=3, lineno=916)
          16	LOAD_GLOBAL(arg=1, lineno=918)
          18	LOAD_FAST(arg=3, lineno=918)
          20	CALL_FUNCTION(arg=1, lineno=918)
          22	GET_ITER(arg=None, lineno=918)
>         24	FOR_ITER(arg=16, lineno=918)
          26	STORE_FAST(arg=4, lineno=918)
          28	LOAD_FAST(arg=0, lineno=919)
          30	LOAD_FAST(arg=4, lineno=919)
          32	BINARY_SUBSCR(arg=None, lineno=919)
          34	LOAD_FAST(arg=1, lineno=919)
          36	LOAD_FAST(arg=4, lineno=919)
          38	BINARY_SUBSCR(arg=None, lineno=919)
          40	BINARY_XOR(arg=None, lineno=919)
          42	STORE_FAST(arg=5, lineno=919)
          44	LOAD_FAST(arg=2, lineno=920)
          46	LOAD_GLOBAL(arg=2, lineno=920)
          48	LOAD_FAST(arg=5, lineno=920)
          50	BINARY_SUBSCR(arg=None, lineno=920)
          52	INPLACE_ADD(arg=None, lineno=920)
          54	STORE_FAST(arg=2, lineno=920)
          56	JUMP_ABSOLUTE(arg=13, lineno=920)
>         58	LOAD_FAST(arg=2, lineno=922)
          60	RETURN_VALUE(arg=None, lineno=922)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=898)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=915)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=915)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=916)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=916)
DEBUG:numba.core.byteflow:stack ['$x6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=916)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=916)
DEBUG:numba.core.byteflow:stack ['$8load_attr.2', '$const10.3.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=STORE_FAST(arg=3, lineno=916)
DEBUG:numba.core.byteflow:stack ['$12binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=918)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=918)
DEBUG:numba.core.byteflow:stack ['$16load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_FUNCTION(arg=1, lineno=918)
DEBUG:numba.core.byteflow:stack ['$16load_global.5', '$dim18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=GET_ITER(arg=None, lineno=918)
DEBUG:numba.core.byteflow:stack ['$20call_function.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$22get_iter.8',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi24.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=24 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=24, inst=FOR_ITER(arg=16, lineno=918)
DEBUG:numba.core.byteflow:stack ['$phi24.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=('$phi24.0', '$24for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=26 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=922)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=RETURN_VALUE(arg=None, lineno=922)
DEBUG:numba.core.byteflow:stack ['$result58.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=4, lineno=918)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$phi26.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=4, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$x28.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$x28.2', '$i30.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4', '$y34.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4', '$y34.5', '$i36.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_XOR(arg=None, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$32binary_subscr.4', '$38binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=5, lineno=919)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$40binary_xor.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=2, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_GLOBAL(arg=2, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=5, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9', '$46load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9', '$46load_global.10', '$intersection48.11']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=INPLACE_ADD(arg=None, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$result44.9', '$50binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=2, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0', '$52inplace_add.13']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=JUMP_ABSOLUTE(arg=13, lineno=920)
DEBUG:numba.core.byteflow:stack ['$phi26.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=24, stack=('$phi26.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=24 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=26 nstack_initial=2): {'$phi26.1'},
             State(pc_initial=58 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi26.1': State(pc_initial=24 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi26.0', State(pc_initial=26 nstack_initial=2))},
             '$phi26.0': {('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi24.0', State(pc_initial=24 nstack_initial=1))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.0': {('$22get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi26.1': {('$24for_iter.2',
                           State(pc_initial=24 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi24.0': {('$22get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi26.1': {('$24for_iter.2', State(pc_initial=24 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$22get_iter.8'},
             State(pc_initial=24 nstack_initial=1): {'$phi26.1': '$24for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$x6.1'}), (8, {'item': '$x6.1', 'res': '$8load_attr.2'}), (10, {'res': '$const10.3.2'}), (12, {'index': '$const10.3.2', 'target': '$8load_attr.2', 'res': '$12binary_subscr.4'}), (14, {'value': '$12binary_subscr.4'}), (16, {'res': '$16load_global.5'}), (18, {'res': '$dim18.6'}), (20, {'func': '$16load_global.5', 'args': ['$dim18.6'], 'res': '$20call_function.7'}), (22, {'value': '$20call_function.7', 'res': '$22get_iter.8'})), outgoing_phis={'$phi24.0': '$22get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$22get_iter.8',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'iterator': '$phi24.0', 'pair': '$24for_iter.1', 'indval': '$24for_iter.2', 'pred': '$24for_iter.3'}),), outgoing_phis={'$phi26.1': '$24for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 26: ('$phi24.0', '$24for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=2):
AdaptBlockInfo(insts=((26, {'value': '$phi26.1'}), (28, {'res': '$x28.2'}), (30, {'res': '$i30.3'}), (32, {'index': '$i30.3', 'target': '$x28.2', 'res': '$32binary_subscr.4'}), (34, {'res': '$y34.5'}), (36, {'res': '$i36.6'}), (38, {'index': '$i36.6', 'target': '$y34.5', 'res': '$38binary_subscr.7'}), (40, {'lhs': '$32binary_subscr.4', 'rhs': '$38binary_subscr.7', 'res': '$40binary_xor.8'}), (42, {'value': '$40binary_xor.8'}), (44, {'res': '$result44.9'}), (46, {'res': '$46load_global.10'}), (48, {'res': '$intersection48.11'}), (50, {'index': '$intersection48.11', 'target': '$46load_global.10', 'res': '$50binary_subscr.12'}), (52, {'lhs': '$result44.9', 'rhs': '$50binary_subscr.12', 'res': '$52inplace_add.13'}), (54, {'value': '$52inplace_add.13'}), (56, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$phi26.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$result58.0'}), (60, {'retval': '$result58.0', 'castval': '$60return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    $8load_attr.2 = getattr(value=x, attr=shape) ['$8load_attr.2', 'x']
    $const10.3.2 = const(int, 0)             ['$const10.3.2']
    dim = getitem(value=$8load_attr.2, index=$const10.3.2, fn=<built-in function getitem>) ['$8load_attr.2', '$const10.3.2', 'dim']
    $16load_global.5 = global(range: <class 'range'>) ['$16load_global.5']
    $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:916)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.5', '$20call_function.7', 'dim']
    $22get_iter.8 = getiter(value=$20call_function.7) ['$20call_function.7', '$22get_iter.8']
    $phi24.0 = $22get_iter.8                 ['$22get_iter.8', '$phi24.0']
    jump 24                                  []
label 24:
    $24for_iter.1 = iternext(value=$phi24.0) ['$24for_iter.1', '$phi24.0']
    $24for_iter.2 = pair_first(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.2']
    $24for_iter.3 = pair_second(value=$24for_iter.1) ['$24for_iter.1', '$24for_iter.3']
    $phi26.1 = $24for_iter.2                 ['$24for_iter.2', '$phi26.1']
    branch $24for_iter.3, 26, 58             ['$24for_iter.3']
label 26:
    i = $phi26.1                             ['$phi26.1', 'i']
    $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$32binary_subscr.4', 'i', 'x']
    $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$38binary_subscr.7', 'i', 'y']
    intersection = $32binary_subscr.4 ^ $38binary_subscr.7 ['$32binary_subscr.4', '$38binary_subscr.7', 'intersection']
    $46load_global.10 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.]) ['$46load_global.10']
    $50binary_subscr.12 = getitem(value=$46load_global.10, index=intersection, fn=<built-in function getitem>) ['$46load_global.10', '$50binary_subscr.12', 'intersection']
    $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_subscr.12, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.12', '$52inplace_add.13', 'result']
    result = $52inplace_add.13               ['$52inplace_add.13', 'result']
    jump 24                                  []
label 58:
    $60return_value.1 = cast(value=result)   ['$60return_value.1', 'result']
    return $60return_value.1                 ['$60return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910cd180>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:916)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910cd180>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910cd180>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: intersection = $32binary_subscr.4 ^ $38binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $46load_global.10 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.12 = getitem(value=$46load_global.10, index=intersection, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_subscr.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $52inplace_add.13
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910cd180>
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16load_global.5': [(<numba.core.ir.Assign object at 0x7f1590f5df30>,
                                   0)],
             '$20call_function.7': [(<numba.core.ir.Assign object at 0x7f1590f5e230>,
                                     0)],
             '$22get_iter.8': [(<numba.core.ir.Assign object at 0x7f1590f5e350>,
                                0)],
             '$24for_iter.1': [(<numba.core.ir.Assign object at 0x7f1590f5e560>,
                                24)],
             '$24for_iter.2': [(<numba.core.ir.Assign object at 0x7f1590f5e680>,
                                24)],
             '$24for_iter.3': [(<numba.core.ir.Assign object at 0x7f1590f5e7a0>,
                                24)],
             '$32binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f1590f5ee60>,
                                     26)],
             '$38binary_subscr.7': [(<numba.core.ir.Assign object at 0x7f1590f5f220>,
                                     26)],
             '$46load_global.10': [(<numba.core.ir.Assign object at 0x7f1590f5f730>,
                                    26)],
             '$50binary_subscr.12': [(<numba.core.ir.Assign object at 0x7f1590f5fa00>,
                                      26)],
             '$52inplace_add.13': [(<numba.core.ir.Assign object at 0x7f1590f5fb80>,
                                    26)],
             '$60return_value.1': [(<numba.core.ir.Assign object at 0x7f1590f5fd90>,
                                    58)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7f1590f5d420>,
                                0)],
             '$const10.3.2': [(<numba.core.ir.Assign object at 0x7f1590f5db10>,
                               0)],
             '$phi24.0': [(<numba.core.ir.Assign object at 0x7f1590f5d6c0>, 0)],
             '$phi26.1': [(<numba.core.ir.Assign object at 0x7f1590f5e4a0>,
                           24)],
             'dim': [(<numba.core.ir.Assign object at 0x7f1590f70f10>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f1590f5ea70>, 26)],
             'intersection': [(<numba.core.ir.Assign object at 0x7f1590f5f3a0>,
                               26)],
             'result': [(<numba.core.ir.Assign object at 0x7f1590f5d900>, 0),
                        (<numba.core.ir.Assign object at 0x7f1590f5fc40>, 26)],
             'x': [(<numba.core.ir.Assign object at 0x7f15910b4f70>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f15910b4f40>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590f5fee0>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590f5ff40>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:916)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590f5ff40>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590f5ff40>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: intersection = $32binary_subscr.4 ^ $38binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $46load_global.10 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.12 = getitem(value=$46load_global.10, index=intersection, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_subscr.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $52inplace_add.13
DEBUG:numba.core.ssa:replaced with: result.1 = $52inplace_add.13
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590f5ff40>
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1590f5ff10>],
             26: [<numba.core.ir.Assign object at 0x7f15910cdfc0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590f5ff40>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$8load_attr.2, index=0, index_var=$const10.3.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16load_global.5 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $20call_function.7 = call $16load_global.5(dim, func=$16load_global.5, args=[Var(dim, distances.py:916)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22get_iter.8 = getiter(value=$20call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi24.0 = $22get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 24
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590f5ff40>
DEBUG:numba.core.ssa:on stmt: $24for_iter.1 = iternext(value=$phi24.0)
DEBUG:numba.core.ssa:on stmt: $24for_iter.2 = pair_first(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $24for_iter.3 = pair_second(value=$24for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi26.1 = $24for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $24for_iter.3, 26, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590f5ff40>
DEBUG:numba.core.ssa:on stmt: i = $phi26.1
DEBUG:numba.core.ssa:on stmt: $32binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: intersection = $32binary_subscr.4 ^ $38binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $46load_global.10 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.12 = getitem(value=$46load_global.10, index=intersection, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_subscr.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$50binary_subscr.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 26
DEBUG:numba.core.ssa:idom 24 from label 26
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:find_def_from_top label 24
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 24
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:incoming_def result.1 = $52inplace_add.13
DEBUG:numba.core.ssa:replaced with: $52inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$50binary_subscr.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $52inplace_add.13
DEBUG:numba.core.ssa:on stmt: jump 24
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590f5ff40>
DEBUG:numba.core.ssa:on stmt: $60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def var='result' stmt=$60return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 24 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 24
DEBUG:numba.core.ssa:replaced with: $60return_value.1 = cast(value=result.2)
DEBUG:numba.core.ssa:on stmt: return $60return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=925)
           2	LOAD_CONST(arg=1, lineno=944)
           4	STORE_FAST(arg=2, lineno=944)
           6	LOAD_CONST(arg=1, lineno=945)
           8	STORE_FAST(arg=3, lineno=945)
          10	LOAD_FAST(arg=0, lineno=946)
          12	LOAD_ATTR(arg=0, lineno=946)
          14	LOAD_CONST(arg=2, lineno=946)
          16	BINARY_SUBSCR(arg=None, lineno=946)
          18	STORE_FAST(arg=4, lineno=946)
          20	LOAD_GLOBAL(arg=1, lineno=948)
          22	LOAD_FAST(arg=4, lineno=948)
          24	CALL_FUNCTION(arg=1, lineno=948)
          26	GET_ITER(arg=None, lineno=948)
>         28	FOR_ITER(arg=30, lineno=948)
          30	STORE_FAST(arg=5, lineno=948)
          32	LOAD_FAST(arg=0, lineno=949)
          34	LOAD_FAST(arg=5, lineno=949)
          36	BINARY_SUBSCR(arg=None, lineno=949)
          38	LOAD_FAST(arg=1, lineno=949)
          40	LOAD_FAST(arg=5, lineno=949)
          42	BINARY_SUBSCR(arg=None, lineno=949)
          44	BINARY_AND(arg=None, lineno=949)
          46	STORE_FAST(arg=6, lineno=949)
          48	LOAD_FAST(arg=0, lineno=950)
          50	LOAD_FAST(arg=5, lineno=950)
          52	BINARY_SUBSCR(arg=None, lineno=950)
          54	LOAD_FAST(arg=1, lineno=950)
          56	LOAD_FAST(arg=5, lineno=950)
          58	BINARY_SUBSCR(arg=None, lineno=950)
          60	BINARY_OR(arg=None, lineno=950)
          62	STORE_FAST(arg=7, lineno=950)
          64	LOAD_FAST(arg=2, lineno=951)
          66	LOAD_GLOBAL(arg=2, lineno=951)
          68	LOAD_FAST(arg=6, lineno=951)
          70	BINARY_SUBSCR(arg=None, lineno=951)
          72	INPLACE_ADD(arg=None, lineno=951)
          74	STORE_FAST(arg=2, lineno=951)
          76	LOAD_FAST(arg=3, lineno=952)
          78	LOAD_GLOBAL(arg=2, lineno=952)
          80	LOAD_FAST(arg=7, lineno=952)
          82	BINARY_SUBSCR(arg=None, lineno=952)
          84	INPLACE_ADD(arg=None, lineno=952)
          86	STORE_FAST(arg=3, lineno=952)
          88	JUMP_ABSOLUTE(arg=15, lineno=952)
>         90	LOAD_GLOBAL(arg=3, lineno=954)
          92	LOAD_METHOD(arg=4, lineno=954)
          94	LOAD_FAST(arg=2, lineno=954)
          96	LOAD_FAST(arg=3, lineno=954)
          98	BINARY_TRUE_DIVIDE(arg=None, lineno=954)
         100	CALL_METHOD(arg=1, lineno=954)
         102	UNARY_NEGATIVE(arg=None, lineno=954)
         104	RETURN_VALUE(arg=None, lineno=954)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=925)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=944)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=944)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=945)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=945)
DEBUG:numba.core.byteflow:stack ['$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=946)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_ATTR(arg=0, lineno=946)
DEBUG:numba.core.byteflow:stack ['$x10.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=946)
DEBUG:numba.core.byteflow:stack ['$12load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=946)
DEBUG:numba.core.byteflow:stack ['$12load_attr.3', '$const14.4.2']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=4, lineno=946)
DEBUG:numba.core.byteflow:stack ['$16binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=948)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=4, lineno=948)
DEBUG:numba.core.byteflow:stack ['$20load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_FUNCTION(arg=1, lineno=948)
DEBUG:numba.core.byteflow:stack ['$20load_global.6', '$dim22.7']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=GET_ITER(arg=None, lineno=948)
DEBUG:numba.core.byteflow:stack ['$24call_function.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=('$26get_iter.9',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi28.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=28 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=28, inst=FOR_ITER(arg=30, lineno=948)
DEBUG:numba.core.byteflow:stack ['$phi28.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=('$phi28.0', '$28for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=30 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=90 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_GLOBAL(arg=3, lineno=954)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_METHOD(arg=4, lineno=954)
DEBUG:numba.core.byteflow:stack ['$90load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=2, lineno=954)
DEBUG:numba.core.byteflow:stack ['$92load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=3, lineno=954)
DEBUG:numba.core.byteflow:stack ['$92load_method.1', '$result94.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=954)
DEBUG:numba.core.byteflow:stack ['$92load_method.1', '$result94.2', '$denom96.3']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=CALL_METHOD(arg=1, lineno=954)
DEBUG:numba.core.byteflow:stack ['$92load_method.1', '$98binary_true_divide.4']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=UNARY_NEGATIVE(arg=None, lineno=954)
DEBUG:numba.core.byteflow:stack ['$100call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=RETURN_VALUE(arg=None, lineno=954)
DEBUG:numba.core.byteflow:stack ['$102unary_negative.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0', '$phi30.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=5, lineno=948)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$phi30.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=5, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$x32.2']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$x32.2', '$i34.3']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$36binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=5, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$36binary_subscr.4', '$y38.5']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$36binary_subscr.4', '$y38.5', '$i40.6']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_AND(arg=None, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$36binary_subscr.4', '$42binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=6, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$44binary_and.8']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$x48.9']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$x48.9', '$i50.10']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$52binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=5, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$52binary_subscr.11', '$y54.12']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$52binary_subscr.11', '$y54.12', '$i56.13']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=BINARY_OR(arg=None, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$52binary_subscr.11', '$58binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_FAST(arg=7, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$60binary_or.15']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=2, lineno=951)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_GLOBAL(arg=2, lineno=951)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$result64.16']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=6, lineno=951)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$result64.16', '$66load_global.17']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BINARY_SUBSCR(arg=None, lineno=951)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$result64.16', '$66load_global.17', '$and_68.18']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=INPLACE_ADD(arg=None, lineno=951)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$result64.16', '$70binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_FAST(arg=2, lineno=951)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$72inplace_add.20']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=3, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_GLOBAL(arg=2, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$denom76.21']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$denom76.21', '$78load_global.22']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$denom76.21', '$78load_global.22', '$or_80.23']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$denom76.21', '$82binary_subscr.24']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=STORE_FAST(arg=3, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$84inplace_add.25']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=JUMP_ABSOLUTE(arg=15, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=('$phi30.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=1): {'$phi28.0'},
             State(pc_initial=30 nstack_initial=2): {'$phi30.1'},
             State(pc_initial=90 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi28.0': State(pc_initial=0 nstack_initial=0),
 '$phi30.1': State(pc_initial=28 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=2))},
             '$phi30.0': {('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi28.0': {('$26get_iter.9', State(pc_initial=0 nstack_initial=0))},
 '$phi30.1': {('$28for_iter.2', State(pc_initial=28 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi28.0': '$26get_iter.9'},
             State(pc_initial=28 nstack_initial=1): {'$phi30.1': '$28for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$const6.1.1'}), (8, {'value': '$const6.1.1'}), (10, {'res': '$x10.2'}), (12, {'item': '$x10.2', 'res': '$12load_attr.3'}), (14, {'res': '$const14.4.2'}), (16, {'index': '$const14.4.2', 'target': '$12load_attr.3', 'res': '$16binary_subscr.5'}), (18, {'value': '$16binary_subscr.5'}), (20, {'res': '$20load_global.6'}), (22, {'res': '$dim22.7'}), (24, {'func': '$20load_global.6', 'args': ['$dim22.7'], 'res': '$24call_function.8'}), (26, {'value': '$24call_function.8', 'res': '$26get_iter.9'})), outgoing_phis={'$phi28.0': '$26get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$26get_iter.9',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=1):
AdaptBlockInfo(insts=((28, {'iterator': '$phi28.0', 'pair': '$28for_iter.1', 'indval': '$28for_iter.2', 'pred': '$28for_iter.3'}),), outgoing_phis={'$phi30.1': '$28for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 30: ('$phi28.0', '$28for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=2):
AdaptBlockInfo(insts=((30, {'value': '$phi30.1'}), (32, {'res': '$x32.2'}), (34, {'res': '$i34.3'}), (36, {'index': '$i34.3', 'target': '$x32.2', 'res': '$36binary_subscr.4'}), (38, {'res': '$y38.5'}), (40, {'res': '$i40.6'}), (42, {'index': '$i40.6', 'target': '$y38.5', 'res': '$42binary_subscr.7'}), (44, {'lhs': '$36binary_subscr.4', 'rhs': '$42binary_subscr.7', 'res': '$44binary_and.8'}), (46, {'value': '$44binary_and.8'}), (48, {'res': '$x48.9'}), (50, {'res': '$i50.10'}), (52, {'index': '$i50.10', 'target': '$x48.9', 'res': '$52binary_subscr.11'}), (54, {'res': '$y54.12'}), (56, {'res': '$i56.13'}), (58, {'index': '$i56.13', 'target': '$y54.12', 'res': '$58binary_subscr.14'}), (60, {'lhs': '$52binary_subscr.11', 'rhs': '$58binary_subscr.14', 'res': '$60binary_or.15'}), (62, {'value': '$60binary_or.15'}), (64, {'res': '$result64.16'}), (66, {'res': '$66load_global.17'}), (68, {'res': '$and_68.18'}), (70, {'index': '$and_68.18', 'target': '$66load_global.17', 'res': '$70binary_subscr.19'}), (72, {'lhs': '$result64.16', 'rhs': '$70binary_subscr.19', 'res': '$72inplace_add.20'}), (74, {'value': '$72inplace_add.20'}), (76, {'res': '$denom76.21'}), (78, {'res': '$78load_global.22'}), (80, {'res': '$or_80.23'}), (82, {'index': '$or_80.23', 'target': '$78load_global.22', 'res': '$82binary_subscr.24'}), (84, {'lhs': '$denom76.21', 'rhs': '$82binary_subscr.24', 'res': '$84inplace_add.25'}), (86, {'value': '$84inplace_add.25'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$phi30.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$90load_global.0'}), (92, {'item': '$90load_global.0', 'res': '$92load_method.1'}), (94, {'res': '$result94.2'}), (96, {'res': '$denom96.3'}), (98, {'lhs': '$result94.2', 'rhs': '$denom96.3', 'res': '$98binary_true_divide.4'}), (100, {'func': '$92load_method.1', 'args': ['$98binary_true_divide.4'], 'res': '$100call_method.5'}), (102, {'value': '$100call_method.5', 'res': '$102unary_negative.6'}), (104, {'retval': '$102unary_negative.6', 'castval': '$104return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    denom = const(float, 0.0)                ['denom']
    $12load_attr.3 = getattr(value=x, attr=shape) ['$12load_attr.3', 'x']
    $const14.4.2 = const(int, 0)             ['$const14.4.2']
    dim = getitem(value=$12load_attr.3, index=$const14.4.2, fn=<built-in function getitem>) ['$12load_attr.3', '$const14.4.2', 'dim']
    $20load_global.6 = global(range: <class 'range'>) ['$20load_global.6']
    $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:946)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.6', '$24call_function.8', 'dim']
    $26get_iter.9 = getiter(value=$24call_function.8) ['$24call_function.8', '$26get_iter.9']
    $phi28.0 = $26get_iter.9                 ['$26get_iter.9', '$phi28.0']
    jump 28                                  []
label 28:
    $28for_iter.1 = iternext(value=$phi28.0) ['$28for_iter.1', '$phi28.0']
    $28for_iter.2 = pair_first(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.2']
    $28for_iter.3 = pair_second(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.3']
    $phi30.1 = $28for_iter.2                 ['$28for_iter.2', '$phi30.1']
    branch $28for_iter.3, 30, 90             ['$28for_iter.3']
label 30:
    i = $phi30.1                             ['$phi30.1', 'i']
    $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$36binary_subscr.4', 'i', 'x']
    $42binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$42binary_subscr.7', 'i', 'y']
    and_ = $36binary_subscr.4 & $42binary_subscr.7 ['$36binary_subscr.4', '$42binary_subscr.7', 'and_']
    $52binary_subscr.11 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$52binary_subscr.11', 'i', 'x']
    $58binary_subscr.14 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$58binary_subscr.14', 'i', 'y']
    or_ = $52binary_subscr.11 | $58binary_subscr.14 ['$52binary_subscr.11', '$58binary_subscr.14', 'or_']
    $66load_global.17 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.]) ['$66load_global.17']
    $70binary_subscr.19 = getitem(value=$66load_global.17, index=and_, fn=<built-in function getitem>) ['$66load_global.17', '$70binary_subscr.19', 'and_']
    $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined) ['$70binary_subscr.19', '$72inplace_add.20', 'result']
    result = $72inplace_add.20               ['$72inplace_add.20', 'result']
    $78load_global.22 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.]) ['$78load_global.22']
    $82binary_subscr.24 = getitem(value=$78load_global.22, index=or_, fn=<built-in function getitem>) ['$78load_global.22', '$82binary_subscr.24', 'or_']
    $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_subscr.24', '$84inplace_add.25', 'denom']
    denom = $84inplace_add.25                ['$84inplace_add.25', 'denom']
    jump 28                                  []
label 90:
    $90load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.0']
    $92load_method.1 = getattr(value=$90load_global.0, attr=log) ['$90load_global.0', '$92load_method.1']
    $98binary_true_divide.4 = result / denom ['$98binary_true_divide.4', 'denom', 'result']
    $100call_method.5 = call $92load_method.1($98binary_true_divide.4, func=$92load_method.1, args=[Var($98binary_true_divide.4, distances.py:954)], kws=(), vararg=None, varkwarg=None, target=None) ['$100call_method.5', '$92load_method.1', '$98binary_true_divide.4']
    $102unary_negative.6 = unary(fn=<built-in function neg>, value=$100call_method.5) ['$100call_method.5', '$102unary_negative.6']
    $104return_value.7 = cast(value=$102unary_negative.6) ['$102unary_negative.6', '$104return_value.7']
    return $104return_value.7                ['$104return_value.7']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590fdd990>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: denom = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:946)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590fdd990>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 90
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590fdd990>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: and_ = $36binary_subscr.4 & $42binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.11 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.14 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: or_ = $52binary_subscr.11 | $58binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $66load_global.17 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.19 = getitem(value=$66load_global.17, index=and_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $72inplace_add.20
DEBUG:numba.core.ssa:on stmt: $78load_global.22 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.24 = getitem(value=$78load_global.22, index=or_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: denom = $84inplace_add.25
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590fdd990>
DEBUG:numba.core.ssa:on stmt: $90load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_method.1 = getattr(value=$90load_global.0, attr=log)
DEBUG:numba.core.ssa:on stmt: $98binary_true_divide.4 = result / denom
DEBUG:numba.core.ssa:on stmt: $100call_method.5 = call $92load_method.1($98binary_true_divide.4, func=$92load_method.1, args=[Var($98binary_true_divide.4, distances.py:954)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $102unary_negative.6 = unary(fn=<built-in function neg>, value=$100call_method.5)
DEBUG:numba.core.ssa:on stmt: $104return_value.7 = cast(value=$102unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $104return_value.7
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100call_method.5': [(<numba.core.ir.Assign object at 0x7f1590fcf580>,
                                    90)],
             '$102unary_negative.6': [(<numba.core.ir.Assign object at 0x7f1590fcf670>,
                                       90)],
             '$104return_value.7': [(<numba.core.ir.Assign object at 0x7f1590fcf7f0>,
                                     90)],
             '$12load_attr.3': [(<numba.core.ir.Assign object at 0x7f1590fcc610>,
                                 0)],
             '$20load_global.6': [(<numba.core.ir.Assign object at 0x7f15910b67d0>,
                                   0)],
             '$24call_function.8': [(<numba.core.ir.Assign object at 0x7f1590f71210>,
                                     0)],
             '$26get_iter.9': [(<numba.core.ir.Assign object at 0x7f1590f5fd60>,
                                0)],
             '$28for_iter.1': [(<numba.core.ir.Assign object at 0x7f1590fcc820>,
                                28)],
             '$28for_iter.2': [(<numba.core.ir.Assign object at 0x7f1590fcc940>,
                                28)],
             '$28for_iter.3': [(<numba.core.ir.Assign object at 0x7f1590fcca60>,
                                28)],
             '$36binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f1590fcd120>,
                                     30)],
             '$42binary_subscr.7': [(<numba.core.ir.Assign object at 0x7f1590fcd4e0>,
                                     30)],
             '$52binary_subscr.11': [(<numba.core.ir.Assign object at 0x7f1590fcdb40>,
                                      30)],
             '$58binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f1590fcdf00>,
                                      30)],
             '$66load_global.17': [(<numba.core.ir.Assign object at 0x7f1590fce410>,
                                    30)],
             '$70binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f1590fce6e0>,
                                      30)],
             '$72inplace_add.20': [(<numba.core.ir.Assign object at 0x7f1590fce860>,
                                    30)],
             '$78load_global.22': [(<numba.core.ir.Assign object at 0x7f1590fceb90>,
                                    30)],
             '$82binary_subscr.24': [(<numba.core.ir.Assign object at 0x7f1590fcee60>,
                                      30)],
             '$84inplace_add.25': [(<numba.core.ir.Assign object at 0x7f1590fcefe0>,
                                    30)],
             '$90load_global.0': [(<numba.core.ir.Assign object at 0x7f1590fcd870>,
                                   90)],
             '$92load_method.1': [(<numba.core.ir.Assign object at 0x7f1590fce170>,
                                   90)],
             '$98binary_true_divide.4': [(<numba.core.ir.Assign object at 0x7f1590fcf3a0>,
                                          90)],
             '$const14.4.2': [(<numba.core.ir.Assign object at 0x7f1590fa5f90>,
                               0)],
             '$phi28.0': [(<numba.core.ir.Assign object at 0x7f1590f71600>, 0)],
             '$phi30.1': [(<numba.core.ir.Assign object at 0x7f1590fcc760>,
                           28)],
             'and_': [(<numba.core.ir.Assign object at 0x7f1590fcd660>, 30)],
             'denom': [(<numba.core.ir.Assign object at 0x7f1590fcc250>, 0),
                       (<numba.core.ir.Assign object at 0x7f1590fcf0a0>, 30)],
             'dim': [(<numba.core.ir.Assign object at 0x7f1590fdd360>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f1590fccd30>, 30)],
             'or_': [(<numba.core.ir.Assign object at 0x7f1590fce080>, 30)],
             'result': [(<numba.core.ir.Assign object at 0x7f1590fa7f70>, 0),
                        (<numba.core.ir.Assign object at 0x7f1590fce920>, 30)],
             'x': [(<numba.core.ir.Assign object at 0x7f1590fa5c00>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1590fa4b50>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590f5fee0>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159108aaa0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: denom = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:946)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159108aaa0>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 90
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159108aaa0>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: and_ = $36binary_subscr.4 & $42binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.11 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.14 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: or_ = $52binary_subscr.11 | $58binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $66load_global.17 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.19 = getitem(value=$66load_global.17, index=and_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $72inplace_add.20
DEBUG:numba.core.ssa:replaced with: result.1 = $72inplace_add.20
DEBUG:numba.core.ssa:on stmt: $78load_global.22 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.24 = getitem(value=$78load_global.22, index=or_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: denom = $84inplace_add.25
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f159108aaa0>
DEBUG:numba.core.ssa:on stmt: $90load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_method.1 = getattr(value=$90load_global.0, attr=log)
DEBUG:numba.core.ssa:on stmt: $98binary_true_divide.4 = result / denom
DEBUG:numba.core.ssa:on stmt: $100call_method.5 = call $92load_method.1($98binary_true_divide.4, func=$92load_method.1, args=[Var($98binary_true_divide.4, distances.py:954)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $102unary_negative.6 = unary(fn=<built-in function neg>, value=$100call_method.5)
DEBUG:numba.core.ssa:on stmt: $104return_value.7 = cast(value=$102unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $104return_value.7
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15910b73d0>],
             30: [<numba.core.ir.Assign object at 0x7f1590fcf9a0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159108aaa0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: denom = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:946)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159108aaa0>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 90
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159108aaa0>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: and_ = $36binary_subscr.4 & $42binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.11 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.14 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: or_ = $52binary_subscr.11 | $58binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $66load_global.17 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.19 = getitem(value=$66load_global.17, index=and_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 30
DEBUG:numba.core.ssa:idom 28 from label 30
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:find_def_from_top label 28
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 30
DEBUG:numba.core.ssa:incoming_def result.1 = $72inplace_add.20
DEBUG:numba.core.ssa:replaced with: $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $72inplace_add.20
DEBUG:numba.core.ssa:on stmt: $78load_global.22 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.24 = getitem(value=$78load_global.22, index=or_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: denom = $84inplace_add.25
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159108aaa0>
DEBUG:numba.core.ssa:on stmt: $90load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_method.1 = getattr(value=$90load_global.0, attr=log)
DEBUG:numba.core.ssa:on stmt: $98binary_true_divide.4 = result / denom
DEBUG:numba.core.ssa:find_def var='result' stmt=$98binary_true_divide.4 = result / denom
DEBUG:numba.core.ssa:find_def_from_top label 90
DEBUG:numba.core.ssa:idom 28 from label 90
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $98binary_true_divide.4 = result.2 / denom
DEBUG:numba.core.ssa:on stmt: $100call_method.5 = call $92load_method.1($98binary_true_divide.4, func=$92load_method.1, args=[Var($98binary_true_divide.4, distances.py:954)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $102unary_negative.6 = unary(fn=<built-in function neg>, value=$100call_method.5)
DEBUG:numba.core.ssa:on stmt: $104return_value.7 = cast(value=$102unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $104return_value.7
DEBUG:numba.core.ssa:Fix SSA violator on var denom
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590f72a70>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: denom = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: denom
DEBUG:numba.core.ssa:replaced with: denom = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:946)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590f72a70>
DEBUG:numba.core.ssa:on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:944), Var(result.1, distances.py:951)], incoming_blocks=[0, 30])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 90
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590f72a70>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: and_ = $36binary_subscr.4 & $42binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.11 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.14 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: or_ = $52binary_subscr.11 | $58binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $66load_global.17 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.19 = getitem(value=$66load_global.17, index=and_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $72inplace_add.20
DEBUG:numba.core.ssa:on stmt: $78load_global.22 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.24 = getitem(value=$78load_global.22, index=or_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: denom = $84inplace_add.25
DEBUG:numba.core.ssa:replaced with: denom.1 = $84inplace_add.25
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590f72a70>
DEBUG:numba.core.ssa:on stmt: $90load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_method.1 = getattr(value=$90load_global.0, attr=log)
DEBUG:numba.core.ssa:on stmt: $98binary_true_divide.4 = result.2 / denom
DEBUG:numba.core.ssa:on stmt: $100call_method.5 = call $92load_method.1($98binary_true_divide.4, func=$92load_method.1, args=[Var($98binary_true_divide.4, distances.py:954)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $102unary_negative.6 = unary(fn=<built-in function neg>, value=$100call_method.5)
DEBUG:numba.core.ssa:on stmt: $104return_value.7 = cast(value=$102unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $104return_value.7
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15910b7730>],
             30: [<numba.core.ir.Assign object at 0x7f1590fcfdc0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159108aaa0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: denom = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:946)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159108aaa0>
DEBUG:numba.core.ssa:on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:944), Var(result.1, distances.py:951)], incoming_blocks=[0, 30])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 90
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159108aaa0>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: and_ = $36binary_subscr.4 & $42binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.11 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.14 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: or_ = $52binary_subscr.11 | $58binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $66load_global.17 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.19 = getitem(value=$66load_global.17, index=and_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $72inplace_add.20
DEBUG:numba.core.ssa:on stmt: $78load_global.22 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.24 = getitem(value=$78load_global.22, index=or_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='denom' stmt=$84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 30
DEBUG:numba.core.ssa:idom 28 from label 30
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:find_def_from_top label 28
DEBUG:numba.core.ssa:insert phi node denom.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def denom = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 30
DEBUG:numba.core.ssa:incoming_def denom.1 = $84inplace_add.25
DEBUG:numba.core.ssa:replaced with: $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom.2, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: denom.1 = $84inplace_add.25
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f159108aaa0>
DEBUG:numba.core.ssa:on stmt: $90load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_method.1 = getattr(value=$90load_global.0, attr=log)
DEBUG:numba.core.ssa:on stmt: $98binary_true_divide.4 = result.2 / denom
DEBUG:numba.core.ssa:find_def var='denom' stmt=$98binary_true_divide.4 = result.2 / denom
DEBUG:numba.core.ssa:find_def_from_top label 90
DEBUG:numba.core.ssa:idom 28 from label 90
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $98binary_true_divide.4 = result.2 / denom.2
DEBUG:numba.core.ssa:on stmt: $100call_method.5 = call $92load_method.1($98binary_true_divide.4, func=$92load_method.1, args=[Var($98binary_true_divide.4, distances.py:954)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $102unary_negative.6 = unary(fn=<built-in function neg>, value=$100call_method.5)
DEBUG:numba.core.ssa:on stmt: $104return_value.7 = cast(value=$102unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $104return_value.7
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=925)
           2	LOAD_CONST(arg=1, lineno=944)
           4	STORE_FAST(arg=2, lineno=944)
           6	LOAD_CONST(arg=1, lineno=945)
           8	STORE_FAST(arg=3, lineno=945)
          10	LOAD_FAST(arg=0, lineno=946)
          12	LOAD_ATTR(arg=0, lineno=946)
          14	LOAD_CONST(arg=2, lineno=946)
          16	BINARY_SUBSCR(arg=None, lineno=946)
          18	STORE_FAST(arg=4, lineno=946)
          20	LOAD_GLOBAL(arg=1, lineno=948)
          22	LOAD_FAST(arg=4, lineno=948)
          24	CALL_FUNCTION(arg=1, lineno=948)
          26	GET_ITER(arg=None, lineno=948)
>         28	FOR_ITER(arg=30, lineno=948)
          30	STORE_FAST(arg=5, lineno=948)
          32	LOAD_FAST(arg=0, lineno=949)
          34	LOAD_FAST(arg=5, lineno=949)
          36	BINARY_SUBSCR(arg=None, lineno=949)
          38	LOAD_FAST(arg=1, lineno=949)
          40	LOAD_FAST(arg=5, lineno=949)
          42	BINARY_SUBSCR(arg=None, lineno=949)
          44	BINARY_AND(arg=None, lineno=949)
          46	STORE_FAST(arg=6, lineno=949)
          48	LOAD_FAST(arg=0, lineno=950)
          50	LOAD_FAST(arg=5, lineno=950)
          52	BINARY_SUBSCR(arg=None, lineno=950)
          54	LOAD_FAST(arg=1, lineno=950)
          56	LOAD_FAST(arg=5, lineno=950)
          58	BINARY_SUBSCR(arg=None, lineno=950)
          60	BINARY_OR(arg=None, lineno=950)
          62	STORE_FAST(arg=7, lineno=950)
          64	LOAD_FAST(arg=2, lineno=951)
          66	LOAD_GLOBAL(arg=2, lineno=951)
          68	LOAD_FAST(arg=6, lineno=951)
          70	BINARY_SUBSCR(arg=None, lineno=951)
          72	INPLACE_ADD(arg=None, lineno=951)
          74	STORE_FAST(arg=2, lineno=951)
          76	LOAD_FAST(arg=3, lineno=952)
          78	LOAD_GLOBAL(arg=2, lineno=952)
          80	LOAD_FAST(arg=7, lineno=952)
          82	BINARY_SUBSCR(arg=None, lineno=952)
          84	INPLACE_ADD(arg=None, lineno=952)
          86	STORE_FAST(arg=3, lineno=952)
          88	JUMP_ABSOLUTE(arg=15, lineno=952)
>         90	LOAD_GLOBAL(arg=3, lineno=954)
          92	LOAD_METHOD(arg=4, lineno=954)
          94	LOAD_FAST(arg=2, lineno=954)
          96	LOAD_FAST(arg=3, lineno=954)
          98	BINARY_TRUE_DIVIDE(arg=None, lineno=954)
         100	CALL_METHOD(arg=1, lineno=954)
         102	UNARY_NEGATIVE(arg=None, lineno=954)
         104	RETURN_VALUE(arg=None, lineno=954)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=925)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=944)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=944)
DEBUG:numba.core.byteflow:stack ['$const2.0.1']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=945)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=945)
DEBUG:numba.core.byteflow:stack ['$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=946)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_ATTR(arg=0, lineno=946)
DEBUG:numba.core.byteflow:stack ['$x10.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=946)
DEBUG:numba.core.byteflow:stack ['$12load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=946)
DEBUG:numba.core.byteflow:stack ['$12load_attr.3', '$const14.4.2']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=4, lineno=946)
DEBUG:numba.core.byteflow:stack ['$16binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=948)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=4, lineno=948)
DEBUG:numba.core.byteflow:stack ['$20load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_FUNCTION(arg=1, lineno=948)
DEBUG:numba.core.byteflow:stack ['$20load_global.6', '$dim22.7']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=GET_ITER(arg=None, lineno=948)
DEBUG:numba.core.byteflow:stack ['$24call_function.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=('$26get_iter.9',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi28.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=28 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=28, inst=FOR_ITER(arg=30, lineno=948)
DEBUG:numba.core.byteflow:stack ['$phi28.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=('$phi28.0', '$28for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=30 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=90 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_GLOBAL(arg=3, lineno=954)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_METHOD(arg=4, lineno=954)
DEBUG:numba.core.byteflow:stack ['$90load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=2, lineno=954)
DEBUG:numba.core.byteflow:stack ['$92load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=3, lineno=954)
DEBUG:numba.core.byteflow:stack ['$92load_method.1', '$result94.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=954)
DEBUG:numba.core.byteflow:stack ['$92load_method.1', '$result94.2', '$denom96.3']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=CALL_METHOD(arg=1, lineno=954)
DEBUG:numba.core.byteflow:stack ['$92load_method.1', '$98binary_true_divide.4']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=UNARY_NEGATIVE(arg=None, lineno=954)
DEBUG:numba.core.byteflow:stack ['$100call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=RETURN_VALUE(arg=None, lineno=954)
DEBUG:numba.core.byteflow:stack ['$102unary_negative.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0', '$phi30.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=5, lineno=948)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$phi30.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=5, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$x32.2']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$x32.2', '$i34.3']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$36binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=5, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$36binary_subscr.4', '$y38.5']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$36binary_subscr.4', '$y38.5', '$i40.6']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_AND(arg=None, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$36binary_subscr.4', '$42binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=6, lineno=949)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$44binary_and.8']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$x48.9']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$x48.9', '$i50.10']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$52binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=5, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$52binary_subscr.11', '$y54.12']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$52binary_subscr.11', '$y54.12', '$i56.13']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=BINARY_OR(arg=None, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$52binary_subscr.11', '$58binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_FAST(arg=7, lineno=950)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$60binary_or.15']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=2, lineno=951)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_GLOBAL(arg=2, lineno=951)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$result64.16']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=6, lineno=951)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$result64.16', '$66load_global.17']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BINARY_SUBSCR(arg=None, lineno=951)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$result64.16', '$66load_global.17', '$and_68.18']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=INPLACE_ADD(arg=None, lineno=951)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$result64.16', '$70binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_FAST(arg=2, lineno=951)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$72inplace_add.20']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=3, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_GLOBAL(arg=2, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$denom76.21']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$denom76.21', '$78load_global.22']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$denom76.21', '$78load_global.22', '$or_80.23']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$denom76.21', '$82binary_subscr.24']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=STORE_FAST(arg=3, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$84inplace_add.25']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=JUMP_ABSOLUTE(arg=15, lineno=952)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=('$phi30.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=1): {'$phi28.0'},
             State(pc_initial=30 nstack_initial=2): {'$phi30.1'},
             State(pc_initial=90 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi28.0': State(pc_initial=0 nstack_initial=0),
 '$phi30.1': State(pc_initial=28 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=2))},
             '$phi30.0': {('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi28.0': {('$26get_iter.9', State(pc_initial=0 nstack_initial=0))},
 '$phi30.1': {('$28for_iter.2', State(pc_initial=28 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi28.0': '$26get_iter.9'},
             State(pc_initial=28 nstack_initial=1): {'$phi30.1': '$28for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0.1'}), (4, {'value': '$const2.0.1'}), (6, {'res': '$const6.1.1'}), (8, {'value': '$const6.1.1'}), (10, {'res': '$x10.2'}), (12, {'item': '$x10.2', 'res': '$12load_attr.3'}), (14, {'res': '$const14.4.2'}), (16, {'index': '$const14.4.2', 'target': '$12load_attr.3', 'res': '$16binary_subscr.5'}), (18, {'value': '$16binary_subscr.5'}), (20, {'res': '$20load_global.6'}), (22, {'res': '$dim22.7'}), (24, {'func': '$20load_global.6', 'args': ['$dim22.7'], 'res': '$24call_function.8'}), (26, {'value': '$24call_function.8', 'res': '$26get_iter.9'})), outgoing_phis={'$phi28.0': '$26get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$26get_iter.9',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=1):
AdaptBlockInfo(insts=((28, {'iterator': '$phi28.0', 'pair': '$28for_iter.1', 'indval': '$28for_iter.2', 'pred': '$28for_iter.3'}),), outgoing_phis={'$phi30.1': '$28for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 30: ('$phi28.0', '$28for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=2):
AdaptBlockInfo(insts=((30, {'value': '$phi30.1'}), (32, {'res': '$x32.2'}), (34, {'res': '$i34.3'}), (36, {'index': '$i34.3', 'target': '$x32.2', 'res': '$36binary_subscr.4'}), (38, {'res': '$y38.5'}), (40, {'res': '$i40.6'}), (42, {'index': '$i40.6', 'target': '$y38.5', 'res': '$42binary_subscr.7'}), (44, {'lhs': '$36binary_subscr.4', 'rhs': '$42binary_subscr.7', 'res': '$44binary_and.8'}), (46, {'value': '$44binary_and.8'}), (48, {'res': '$x48.9'}), (50, {'res': '$i50.10'}), (52, {'index': '$i50.10', 'target': '$x48.9', 'res': '$52binary_subscr.11'}), (54, {'res': '$y54.12'}), (56, {'res': '$i56.13'}), (58, {'index': '$i56.13', 'target': '$y54.12', 'res': '$58binary_subscr.14'}), (60, {'lhs': '$52binary_subscr.11', 'rhs': '$58binary_subscr.14', 'res': '$60binary_or.15'}), (62, {'value': '$60binary_or.15'}), (64, {'res': '$result64.16'}), (66, {'res': '$66load_global.17'}), (68, {'res': '$and_68.18'}), (70, {'index': '$and_68.18', 'target': '$66load_global.17', 'res': '$70binary_subscr.19'}), (72, {'lhs': '$result64.16', 'rhs': '$70binary_subscr.19', 'res': '$72inplace_add.20'}), (74, {'value': '$72inplace_add.20'}), (76, {'res': '$denom76.21'}), (78, {'res': '$78load_global.22'}), (80, {'res': '$or_80.23'}), (82, {'index': '$or_80.23', 'target': '$78load_global.22', 'res': '$82binary_subscr.24'}), (84, {'lhs': '$denom76.21', 'rhs': '$82binary_subscr.24', 'res': '$84inplace_add.25'}), (86, {'value': '$84inplace_add.25'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$phi30.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$90load_global.0'}), (92, {'item': '$90load_global.0', 'res': '$92load_method.1'}), (94, {'res': '$result94.2'}), (96, {'res': '$denom96.3'}), (98, {'lhs': '$result94.2', 'rhs': '$denom96.3', 'res': '$98binary_true_divide.4'}), (100, {'func': '$92load_method.1', 'args': ['$98binary_true_divide.4'], 'res': '$100call_method.5'}), (102, {'value': '$100call_method.5', 'res': '$102unary_negative.6'}), (104, {'retval': '$102unary_negative.6', 'castval': '$104return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    denom = const(float, 0.0)                ['denom']
    $12load_attr.3 = getattr(value=x, attr=shape) ['$12load_attr.3', 'x']
    $const14.4.2 = const(int, 0)             ['$const14.4.2']
    dim = getitem(value=$12load_attr.3, index=$const14.4.2, fn=<built-in function getitem>) ['$12load_attr.3', '$const14.4.2', 'dim']
    $20load_global.6 = global(range: <class 'range'>) ['$20load_global.6']
    $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:946)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.6', '$24call_function.8', 'dim']
    $26get_iter.9 = getiter(value=$24call_function.8) ['$24call_function.8', '$26get_iter.9']
    $phi28.0 = $26get_iter.9                 ['$26get_iter.9', '$phi28.0']
    jump 28                                  []
label 28:
    $28for_iter.1 = iternext(value=$phi28.0) ['$28for_iter.1', '$phi28.0']
    $28for_iter.2 = pair_first(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.2']
    $28for_iter.3 = pair_second(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.3']
    $phi30.1 = $28for_iter.2                 ['$28for_iter.2', '$phi30.1']
    branch $28for_iter.3, 30, 90             ['$28for_iter.3']
label 30:
    i = $phi30.1                             ['$phi30.1', 'i']
    $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$36binary_subscr.4', 'i', 'x']
    $42binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$42binary_subscr.7', 'i', 'y']
    and_ = $36binary_subscr.4 & $42binary_subscr.7 ['$36binary_subscr.4', '$42binary_subscr.7', 'and_']
    $52binary_subscr.11 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$52binary_subscr.11', 'i', 'x']
    $58binary_subscr.14 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$58binary_subscr.14', 'i', 'y']
    or_ = $52binary_subscr.11 | $58binary_subscr.14 ['$52binary_subscr.11', '$58binary_subscr.14', 'or_']
    $66load_global.17 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.]) ['$66load_global.17']
    $70binary_subscr.19 = getitem(value=$66load_global.17, index=and_, fn=<built-in function getitem>) ['$66load_global.17', '$70binary_subscr.19', 'and_']
    $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined) ['$70binary_subscr.19', '$72inplace_add.20', 'result']
    result = $72inplace_add.20               ['$72inplace_add.20', 'result']
    $78load_global.22 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.]) ['$78load_global.22']
    $82binary_subscr.24 = getitem(value=$78load_global.22, index=or_, fn=<built-in function getitem>) ['$78load_global.22', '$82binary_subscr.24', 'or_']
    $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_subscr.24', '$84inplace_add.25', 'denom']
    denom = $84inplace_add.25                ['$84inplace_add.25', 'denom']
    jump 28                                  []
label 90:
    $90load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.0']
    $92load_method.1 = getattr(value=$90load_global.0, attr=log) ['$90load_global.0', '$92load_method.1']
    $98binary_true_divide.4 = result / denom ['$98binary_true_divide.4', 'denom', 'result']
    $100call_method.5 = call $92load_method.1($98binary_true_divide.4, func=$92load_method.1, args=[Var($98binary_true_divide.4, distances.py:954)], kws=(), vararg=None, varkwarg=None, target=None) ['$100call_method.5', '$92load_method.1', '$98binary_true_divide.4']
    $102unary_negative.6 = unary(fn=<built-in function neg>, value=$100call_method.5) ['$100call_method.5', '$102unary_negative.6']
    $104return_value.7 = cast(value=$102unary_negative.6) ['$102unary_negative.6', '$104return_value.7']
    return $104return_value.7                ['$104return_value.7']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590f5fca0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: denom = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:946)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590f5fca0>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 90
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590f5fca0>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: and_ = $36binary_subscr.4 & $42binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.11 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.14 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: or_ = $52binary_subscr.11 | $58binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $66load_global.17 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.19 = getitem(value=$66load_global.17, index=and_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $72inplace_add.20
DEBUG:numba.core.ssa:on stmt: $78load_global.22 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.24 = getitem(value=$78load_global.22, index=or_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: denom = $84inplace_add.25
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590f5fca0>
DEBUG:numba.core.ssa:on stmt: $90load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_method.1 = getattr(value=$90load_global.0, attr=log)
DEBUG:numba.core.ssa:on stmt: $98binary_true_divide.4 = result / denom
DEBUG:numba.core.ssa:on stmt: $100call_method.5 = call $92load_method.1($98binary_true_divide.4, func=$92load_method.1, args=[Var($98binary_true_divide.4, distances.py:954)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $102unary_negative.6 = unary(fn=<built-in function neg>, value=$100call_method.5)
DEBUG:numba.core.ssa:on stmt: $104return_value.7 = cast(value=$102unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $104return_value.7
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100call_method.5': [(<numba.core.ir.Assign object at 0x7f1590e71d20>,
                                    90)],
             '$102unary_negative.6': [(<numba.core.ir.Assign object at 0x7f1590e71e10>,
                                       90)],
             '$104return_value.7': [(<numba.core.ir.Assign object at 0x7f1590e71f90>,
                                     90)],
             '$12load_attr.3': [(<numba.core.ir.Assign object at 0x7f1590e5ad70>,
                                 0)],
             '$20load_global.6': [(<numba.core.ir.Assign object at 0x7f1590e5b310>,
                                   0)],
             '$24call_function.8': [(<numba.core.ir.Assign object at 0x7f1590e5b610>,
                                     0)],
             '$26get_iter.9': [(<numba.core.ir.Assign object at 0x7f1590e5b730>,
                                0)],
             '$28for_iter.1': [(<numba.core.ir.Assign object at 0x7f1590e5b8e0>,
                                28)],
             '$28for_iter.2': [(<numba.core.ir.Assign object at 0x7f1590e5ba00>,
                                28)],
             '$28for_iter.3': [(<numba.core.ir.Assign object at 0x7f1590e5bb20>,
                                28)],
             '$36binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f1590e70220>,
                                     30)],
             '$42binary_subscr.7': [(<numba.core.ir.Assign object at 0x7f1590e705e0>,
                                     30)],
             '$52binary_subscr.11': [(<numba.core.ir.Assign object at 0x7f1590e70c40>,
                                      30)],
             '$58binary_subscr.14': [(<numba.core.ir.Assign object at 0x7f1590e71000>,
                                      30)],
             '$66load_global.17': [(<numba.core.ir.Assign object at 0x7f1590e44880>,
                                    30)],
             '$70binary_subscr.19': [(<numba.core.ir.Assign object at 0x7f1590fcc040>,
                                      30)],
             '$72inplace_add.20': [(<numba.core.ir.Assign object at 0x7f1590fcfd30>,
                                    30)],
             '$78load_global.22': [(<numba.core.ir.Assign object at 0x7f1590e71330>,
                                    30)],
             '$82binary_subscr.24': [(<numba.core.ir.Assign object at 0x7f1590e71600>,
                                      30)],
             '$84inplace_add.25': [(<numba.core.ir.Assign object at 0x7f1590e71780>,
                                    30)],
             '$90load_global.0': [(<numba.core.ir.Assign object at 0x7f1590e5a3b0>,
                                   90)],
             '$92load_method.1': [(<numba.core.ir.Assign object at 0x7f1590e708e0>,
                                   90)],
             '$98binary_true_divide.4': [(<numba.core.ir.Assign object at 0x7f1590e71b40>,
                                          90)],
             '$const14.4.2': [(<numba.core.ir.Assign object at 0x7f1590e5aef0>,
                               0)],
             '$phi28.0': [(<numba.core.ir.Assign object at 0x7f1590e5a8c0>, 0)],
             '$phi30.1': [(<numba.core.ir.Assign object at 0x7f1590e5b820>,
                           28)],
             'and_': [(<numba.core.ir.Assign object at 0x7f1590e70760>, 30)],
             'denom': [(<numba.core.ir.Assign object at 0x7f1590e5a9b0>, 0),
                       (<numba.core.ir.Assign object at 0x7f1590e71840>, 30)],
             'dim': [(<numba.core.ir.Assign object at 0x7f1590e73ac0>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f1590e5bdf0>, 30)],
             'or_': [(<numba.core.ir.Assign object at 0x7f1590e71180>, 30)],
             'result': [(<numba.core.ir.Assign object at 0x7f1590e5a710>, 0),
                        (<numba.core.ir.Assign object at 0x7f1590fcfdf0>, 30)],
             'x': [(<numba.core.ir.Assign object at 0x7f1590e5a470>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7f1590e5a590>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590f5fca0>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590e73b50>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: denom = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:946)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590e73b50>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 90
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590e73b50>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: and_ = $36binary_subscr.4 & $42binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.11 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.14 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: or_ = $52binary_subscr.11 | $58binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $66load_global.17 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.19 = getitem(value=$66load_global.17, index=and_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $72inplace_add.20
DEBUG:numba.core.ssa:replaced with: result.1 = $72inplace_add.20
DEBUG:numba.core.ssa:on stmt: $78load_global.22 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.24 = getitem(value=$78load_global.22, index=or_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: denom = $84inplace_add.25
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590e73b50>
DEBUG:numba.core.ssa:on stmt: $90load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_method.1 = getattr(value=$90load_global.0, attr=log)
DEBUG:numba.core.ssa:on stmt: $98binary_true_divide.4 = result / denom
DEBUG:numba.core.ssa:on stmt: $100call_method.5 = call $92load_method.1($98binary_true_divide.4, func=$92load_method.1, args=[Var($98binary_true_divide.4, distances.py:954)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $102unary_negative.6 = unary(fn=<built-in function neg>, value=$100call_method.5)
DEBUG:numba.core.ssa:on stmt: $104return_value.7 = cast(value=$102unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $104return_value.7
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1590e73eb0>],
             30: [<numba.core.ir.Assign object at 0x7f1590e73940>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590e73b50>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: denom = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:946)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590e73b50>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 90
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590e73b50>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: and_ = $36binary_subscr.4 & $42binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.11 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.14 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: or_ = $52binary_subscr.11 | $58binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $66load_global.17 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.19 = getitem(value=$66load_global.17, index=and_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 30
DEBUG:numba.core.ssa:idom 28 from label 30
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:find_def_from_top label 28
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 30
DEBUG:numba.core.ssa:incoming_def result.1 = $72inplace_add.20
DEBUG:numba.core.ssa:replaced with: $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $72inplace_add.20
DEBUG:numba.core.ssa:on stmt: $78load_global.22 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.24 = getitem(value=$78load_global.22, index=or_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: denom = $84inplace_add.25
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590e73b50>
DEBUG:numba.core.ssa:on stmt: $90load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_method.1 = getattr(value=$90load_global.0, attr=log)
DEBUG:numba.core.ssa:on stmt: $98binary_true_divide.4 = result / denom
DEBUG:numba.core.ssa:find_def var='result' stmt=$98binary_true_divide.4 = result / denom
DEBUG:numba.core.ssa:find_def_from_top label 90
DEBUG:numba.core.ssa:idom 28 from label 90
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $98binary_true_divide.4 = result.2 / denom
DEBUG:numba.core.ssa:on stmt: $100call_method.5 = call $92load_method.1($98binary_true_divide.4, func=$92load_method.1, args=[Var($98binary_true_divide.4, distances.py:954)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $102unary_negative.6 = unary(fn=<built-in function neg>, value=$100call_method.5)
DEBUG:numba.core.ssa:on stmt: $104return_value.7 = cast(value=$102unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $104return_value.7
DEBUG:numba.core.ssa:Fix SSA violator on var denom
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590e738e0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: denom = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: denom
DEBUG:numba.core.ssa:replaced with: denom = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:946)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590e738e0>
DEBUG:numba.core.ssa:on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:944), Var(result.1, distances.py:951)], incoming_blocks=[0, 30])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 90
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590e738e0>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: and_ = $36binary_subscr.4 & $42binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.11 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.14 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: or_ = $52binary_subscr.11 | $58binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $66load_global.17 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.19 = getitem(value=$66load_global.17, index=and_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $72inplace_add.20
DEBUG:numba.core.ssa:on stmt: $78load_global.22 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.24 = getitem(value=$78load_global.22, index=or_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: denom = $84inplace_add.25
DEBUG:numba.core.ssa:replaced with: denom.1 = $84inplace_add.25
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590e738e0>
DEBUG:numba.core.ssa:on stmt: $90load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_method.1 = getattr(value=$90load_global.0, attr=log)
DEBUG:numba.core.ssa:on stmt: $98binary_true_divide.4 = result.2 / denom
DEBUG:numba.core.ssa:on stmt: $100call_method.5 = call $92load_method.1($98binary_true_divide.4, func=$92load_method.1, args=[Var($98binary_true_divide.4, distances.py:954)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $102unary_negative.6 = unary(fn=<built-in function neg>, value=$100call_method.5)
DEBUG:numba.core.ssa:on stmt: $104return_value.7 = cast(value=$102unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $104return_value.7
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1590e73f10>],
             30: [<numba.core.ir.Assign object at 0x7f1590e734f0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590e73d00>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: denom = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $12load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const14.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dim = static_getitem(value=$12load_attr.3, index=0, index_var=$const14.4.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24call_function.8 = call $20load_global.6(dim, func=$20load_global.6, args=[Var(dim, distances.py:946)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590e73d00>
DEBUG:numba.core.ssa:on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:944), Var(result.1, distances.py:951)], incoming_blocks=[0, 30])
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 90
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590e73d00>
DEBUG:numba.core.ssa:on stmt: i = $phi30.1
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.4 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.7 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: and_ = $36binary_subscr.4 & $42binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.11 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.14 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: or_ = $52binary_subscr.11 | $58binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $66load_global.17 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.19 = getitem(value=$66load_global.17, index=and_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$70binary_subscr.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $72inplace_add.20
DEBUG:numba.core.ssa:on stmt: $78load_global.22 = global(popcnt: [0. 1. 1. 2. 1. 2. 2. 3. 1. 2. 2. 3. 2. 3. 3. 4. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 1. 2. 2. 3. 2. 3. 3. 4.
 2. 3. 3. 4. 3. 4. 4. 5. 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 1. 2. 2. 3. 2. 3. 3. 4. 2. 3. 3. 4. 3. 4. 4. 5.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 2. 3. 3. 4. 3. 4. 4. 5.
 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 2. 3. 3. 4. 3. 4. 4. 5. 3. 4. 4. 5. 4. 5. 5. 6. 3. 4. 4. 5. 4. 5. 5. 6.
 4. 5. 5. 6. 5. 6. 6. 7. 3. 4. 4. 5. 4. 5. 5. 6. 4. 5. 5. 6. 5. 6. 6. 7.
 4. 5. 5. 6. 5. 6. 6. 7. 5. 6. 6. 7. 6. 7. 7. 8.])
DEBUG:numba.core.ssa:on stmt: $82binary_subscr.24 = getitem(value=$78load_global.22, index=or_, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='denom' stmt=$84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 30
DEBUG:numba.core.ssa:idom 28 from label 30
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:find_def_from_top label 28
DEBUG:numba.core.ssa:insert phi node denom.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def denom = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 30
DEBUG:numba.core.ssa:incoming_def denom.1 = $84inplace_add.25
DEBUG:numba.core.ssa:replaced with: $84inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=denom.2, rhs=$82binary_subscr.24, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: denom.1 = $84inplace_add.25
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590e73d00>
DEBUG:numba.core.ssa:on stmt: $90load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_method.1 = getattr(value=$90load_global.0, attr=log)
DEBUG:numba.core.ssa:on stmt: $98binary_true_divide.4 = result.2 / denom
DEBUG:numba.core.ssa:find_def var='denom' stmt=$98binary_true_divide.4 = result.2 / denom
DEBUG:numba.core.ssa:find_def_from_top label 90
DEBUG:numba.core.ssa:idom 28 from label 90
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $98binary_true_divide.4 = result.2 / denom.2
DEBUG:numba.core.ssa:on stmt: $100call_method.5 = call $92load_method.1($98binary_true_divide.4, func=$92load_method.1, args=[Var($98binary_true_divide.4, distances.py:954)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $102unary_negative.6 = unary(fn=<built-in function neg>, value=$100call_method.5)
DEBUG:numba.core.ssa:on stmt: $104return_value.7 = cast(value=$102unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $104return_value.7
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=58)
           2	LOAD_FAST(arg=0, lineno=72)
           4	LOAD_ATTR(arg=0, lineno=72)
           6	LOAD_CONST(arg=1, lineno=72)
           8	BINARY_SUBSCR(arg=None, lineno=72)
          10	LOAD_CONST(arg=1, lineno=72)
          12	COMPARE_OP(arg=2, lineno=72)
          14	POP_JUMP_IF_TRUE(arg=16, lineno=72)
          16	LOAD_FAST(arg=1, lineno=72)
          18	LOAD_ATTR(arg=0, lineno=72)
          20	LOAD_CONST(arg=1, lineno=72)
          22	BINARY_SUBSCR(arg=None, lineno=72)
          24	LOAD_CONST(arg=1, lineno=72)
          26	COMPARE_OP(arg=2, lineno=72)
          28	POP_JUMP_IF_FALSE(arg=18, lineno=72)
>         30	LOAD_CONST(arg=1, lineno=73)
          32	RETURN_VALUE(arg=None, lineno=73)
>         34	LOAD_CONST(arg=1, lineno=76)
          36	STORE_FAST(arg=2, lineno=76)
          38	LOAD_CONST(arg=1, lineno=77)
          40	STORE_FAST(arg=3, lineno=77)
          42	LOAD_FAST(arg=0, lineno=78)
          44	LOAD_ATTR(arg=0, lineno=78)
          46	LOAD_CONST(arg=1, lineno=78)
          48	BINARY_SUBSCR(arg=None, lineno=78)
          50	LOAD_CONST(arg=2, lineno=78)
          52	BINARY_SUBTRACT(arg=None, lineno=78)
          54	STORE_FAST(arg=4, lineno=78)
          56	LOAD_FAST(arg=1, lineno=79)
          58	LOAD_ATTR(arg=0, lineno=79)
          60	LOAD_CONST(arg=1, lineno=79)
          62	BINARY_SUBSCR(arg=None, lineno=79)
          64	LOAD_CONST(arg=2, lineno=79)
          66	BINARY_SUBTRACT(arg=None, lineno=79)
          68	STORE_FAST(arg=5, lineno=79)
          70	LOAD_FAST(arg=0, lineno=80)
          72	LOAD_FAST(arg=2, lineno=80)
          74	BINARY_SUBSCR(arg=None, lineno=80)
          76	STORE_FAST(arg=6, lineno=80)
          78	LOAD_FAST(arg=1, lineno=81)
          80	LOAD_FAST(arg=3, lineno=81)
          82	BINARY_SUBSCR(arg=None, lineno=81)
          84	STORE_FAST(arg=7, lineno=81)
          86	LOAD_CONST(arg=1, lineno=83)
          88	STORE_FAST(arg=8, lineno=83)
          90	NOP(arg=None, lineno=85)
>         92	LOAD_FAST(arg=6, lineno=86)
          94	LOAD_FAST(arg=7, lineno=86)
          96	COMPARE_OP(arg=2, lineno=86)
          98	POP_JUMP_IF_FALSE(arg=87, lineno=86)
         100	LOAD_FAST(arg=8, lineno=87)
         102	LOAD_CONST(arg=2, lineno=87)
         104	INPLACE_ADD(arg=None, lineno=87)
         106	STORE_FAST(arg=8, lineno=87)
         108	LOAD_FAST(arg=2, lineno=88)
         110	LOAD_FAST(arg=4, lineno=88)
         112	COMPARE_OP(arg=0, lineno=88)
         114	POP_JUMP_IF_FALSE(arg=68, lineno=88)
         116	LOAD_FAST(arg=2, lineno=89)
         118	LOAD_CONST(arg=2, lineno=89)
         120	INPLACE_ADD(arg=None, lineno=89)
         122	STORE_FAST(arg=2, lineno=89)
         124	LOAD_FAST(arg=0, lineno=90)
         126	LOAD_FAST(arg=2, lineno=90)
         128	BINARY_SUBSCR(arg=None, lineno=90)
         130	STORE_FAST(arg=6, lineno=90)
         132	JUMP_FORWARD(arg=3, lineno=90)
>        134	NOP(arg=None, lineno=92)
         136	LOAD_FAST(arg=8, lineno=109)
         138	RETURN_VALUE(arg=None, lineno=109)
>        140	LOAD_FAST(arg=3, lineno=94)
         142	LOAD_FAST(arg=5, lineno=94)
         144	COMPARE_OP(arg=0, lineno=94)
         146	POP_JUMP_IF_FALSE(arg=84, lineno=94)
         148	LOAD_FAST(arg=3, lineno=95)
         150	LOAD_CONST(arg=2, lineno=95)
         152	INPLACE_ADD(arg=None, lineno=95)
         154	STORE_FAST(arg=3, lineno=95)
         156	LOAD_FAST(arg=1, lineno=96)
         158	LOAD_FAST(arg=3, lineno=96)
         160	BINARY_SUBSCR(arg=None, lineno=96)
         162	STORE_FAST(arg=7, lineno=96)
         164	JUMP_FORWARD(arg=40, lineno=96)
>        166	NOP(arg=None, lineno=98)
         168	LOAD_FAST(arg=8, lineno=109)
         170	RETURN_VALUE(arg=None, lineno=109)
>        172	LOAD_FAST(arg=6, lineno=100)
         174	LOAD_FAST(arg=7, lineno=100)
         176	COMPARE_OP(arg=0, lineno=100)
         178	POP_JUMP_IF_FALSE(arg=104, lineno=100)
         180	LOAD_FAST(arg=2, lineno=100)
         182	LOAD_FAST(arg=4, lineno=100)
         184	COMPARE_OP(arg=0, lineno=100)
         186	POP_JUMP_IF_FALSE(arg=104, lineno=100)
         188	LOAD_FAST(arg=2, lineno=101)
         190	LOAD_CONST(arg=2, lineno=101)
         192	INPLACE_ADD(arg=None, lineno=101)
         194	STORE_FAST(arg=2, lineno=101)
         196	LOAD_FAST(arg=0, lineno=102)
         198	LOAD_FAST(arg=2, lineno=102)
         200	BINARY_SUBSCR(arg=None, lineno=102)
         202	STORE_FAST(arg=6, lineno=102)
         204	JUMP_FORWARD(arg=20, lineno=102)
>        206	LOAD_FAST(arg=7, lineno=103)
         208	LOAD_FAST(arg=6, lineno=103)
         210	COMPARE_OP(arg=0, lineno=103)
         212	POP_JUMP_IF_FALSE(arg=121, lineno=103)
         214	LOAD_FAST(arg=3, lineno=103)
         216	LOAD_FAST(arg=5, lineno=103)
         218	COMPARE_OP(arg=0, lineno=103)
         220	POP_JUMP_IF_FALSE(arg=121, lineno=103)
         222	LOAD_FAST(arg=3, lineno=104)
         224	LOAD_CONST(arg=2, lineno=104)
         226	INPLACE_ADD(arg=None, lineno=104)
         228	STORE_FAST(arg=3, lineno=104)
         230	LOAD_FAST(arg=1, lineno=105)
         232	LOAD_FAST(arg=3, lineno=105)
         234	BINARY_SUBSCR(arg=None, lineno=105)
         236	STORE_FAST(arg=7, lineno=105)
         238	JUMP_FORWARD(arg=3, lineno=105)
>        240	NOP(arg=None, lineno=107)
         242	LOAD_FAST(arg=8, lineno=109)
         244	RETURN_VALUE(arg=None, lineno=109)
>        246	JUMP_ABSOLUTE(arg=47, lineno=85)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=58)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack ['$ar12.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=72)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$const6.2.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=COMPARE_OP(arg=2, lineno=72)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.3', '$const10.4.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=16, lineno=72)
DEBUG:numba.core.byteflow:stack ['$12compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=16 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_ATTR(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack ['$ar216.0']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$18load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=72)
DEBUG:numba.core.byteflow:stack ['$18load_attr.1', '$const20.2.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$22binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=COMPARE_OP(arg=2, lineno=72)
DEBUG:numba.core.byteflow:stack ['$22binary_subscr.3', '$const24.4.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=18, lineno=72)
DEBUG:numba.core.byteflow:stack ['$26compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=30 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=73)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=73)
DEBUG:numba.core.byteflow:stack ['$const30.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=76)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=2, lineno=76)
DEBUG:numba.core.byteflow:stack ['$const34.0.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=77)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_FAST(arg=3, lineno=77)
DEBUG:numba.core.byteflow:stack ['$const38.1.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=78)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_ATTR(arg=0, lineno=78)
DEBUG:numba.core.byteflow:stack ['$ar142.2']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_CONST(arg=1, lineno=78)
DEBUG:numba.core.byteflow:stack ['$44load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=78)
DEBUG:numba.core.byteflow:stack ['$44load_attr.3', '$const46.4.1']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=2, lineno=78)
DEBUG:numba.core.byteflow:stack ['$48binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_SUBTRACT(arg=None, lineno=78)
DEBUG:numba.core.byteflow:stack ['$48binary_subscr.5', '$const50.6.2']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=4, lineno=78)
DEBUG:numba.core.byteflow:stack ['$52binary_subtract.7']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=79)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_ATTR(arg=0, lineno=79)
DEBUG:numba.core.byteflow:stack ['$ar256.8']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=79)
DEBUG:numba.core.byteflow:stack ['$58load_attr.9']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=79)
DEBUG:numba.core.byteflow:stack ['$58load_attr.9', '$const60.10.1']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=79)
DEBUG:numba.core.byteflow:stack ['$62binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=79)
DEBUG:numba.core.byteflow:stack ['$62binary_subscr.11', '$const64.12.2']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=STORE_FAST(arg=5, lineno=79)
DEBUG:numba.core.byteflow:stack ['$66binary_subtract.13']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=80)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=2, lineno=80)
DEBUG:numba.core.byteflow:stack ['$ar170.14']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=BINARY_SUBSCR(arg=None, lineno=80)
DEBUG:numba.core.byteflow:stack ['$ar170.14', '$i172.15']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=STORE_FAST(arg=6, lineno=80)
DEBUG:numba.core.byteflow:stack ['$74binary_subscr.16']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=81)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=3, lineno=81)
DEBUG:numba.core.byteflow:stack ['$ar278.17']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=81)
DEBUG:numba.core.byteflow:stack ['$ar278.17', '$i280.18']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=STORE_FAST(arg=7, lineno=81)
DEBUG:numba.core.byteflow:stack ['$82binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_CONST(arg=1, lineno=83)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=STORE_FAST(arg=8, lineno=83)
DEBUG:numba.core.byteflow:stack ['$const86.20.1']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=NOP(arg=None, lineno=85)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=92 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=92 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=6, lineno=86)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=7, lineno=86)
DEBUG:numba.core.byteflow:stack ['$j192.0']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=COMPARE_OP(arg=2, lineno=86)
DEBUG:numba.core.byteflow:stack ['$j192.0', '$j294.1']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=POP_JUMP_IF_FALSE(arg=87, lineno=86)
DEBUG:numba.core.byteflow:stack ['$96compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=100 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=8, lineno=87)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=87)
DEBUG:numba.core.byteflow:stack ['$result100.0']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=INPLACE_ADD(arg=None, lineno=87)
DEBUG:numba.core.byteflow:stack ['$result100.0', '$const102.1.2']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=STORE_FAST(arg=8, lineno=87)
DEBUG:numba.core.byteflow:stack ['$104inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=2, lineno=88)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=4, lineno=88)
DEBUG:numba.core.byteflow:stack ['$i1108.3']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=COMPARE_OP(arg=0, lineno=88)
DEBUG:numba.core.byteflow:stack ['$i1108.3', '$limit1110.4']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=POP_JUMP_IF_FALSE(arg=68, lineno=88)
DEBUG:numba.core.byteflow:stack ['$112compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=172 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=6, lineno=100)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_FAST(arg=7, lineno=100)
DEBUG:numba.core.byteflow:stack ['$j1172.0']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=COMPARE_OP(arg=0, lineno=100)
DEBUG:numba.core.byteflow:stack ['$j1172.0', '$j2174.1']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=POP_JUMP_IF_FALSE(arg=104, lineno=100)
DEBUG:numba.core.byteflow:stack ['$176compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=180, stack=(), blockstack=(), npush=0), Edge(pc=206, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=206 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=2, lineno=89)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_CONST(arg=2, lineno=89)
DEBUG:numba.core.byteflow:stack ['$i1116.0']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=INPLACE_ADD(arg=None, lineno=89)
DEBUG:numba.core.byteflow:stack ['$i1116.0', '$const118.1.2']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=STORE_FAST(arg=2, lineno=89)
DEBUG:numba.core.byteflow:stack ['$120inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=0, lineno=90)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=2, lineno=90)
DEBUG:numba.core.byteflow:stack ['$ar1124.3']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=90)
DEBUG:numba.core.byteflow:stack ['$ar1124.3', '$i1126.4']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=STORE_FAST(arg=6, lineno=90)
DEBUG:numba.core.byteflow:stack ['$128binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=JUMP_FORWARD(arg=3, lineno=90)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=140, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=206 nstack_initial=0), State(pc_initial=140 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=134 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=134, inst=NOP(arg=None, lineno=92)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=109)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=138, inst=RETURN_VALUE(arg=None, lineno=109)
DEBUG:numba.core.byteflow:stack ['$result136.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=206 nstack_initial=0), State(pc_initial=140 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=180 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_FAST(arg=2, lineno=100)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_FAST(arg=4, lineno=100)
DEBUG:numba.core.byteflow:stack ['$i1180.0']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=COMPARE_OP(arg=0, lineno=100)
DEBUG:numba.core.byteflow:stack ['$i1180.0', '$limit1182.1']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=POP_JUMP_IF_FALSE(arg=104, lineno=100)
DEBUG:numba.core.byteflow:stack ['$184compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=206, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=206 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=188 nstack_initial=0), State(pc_initial=206 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=206 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_FAST(arg=7, lineno=103)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=6, lineno=103)
DEBUG:numba.core.byteflow:stack ['$j2206.0']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=COMPARE_OP(arg=0, lineno=103)
DEBUG:numba.core.byteflow:stack ['$j2206.0', '$j1208.1']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=POP_JUMP_IF_FALSE(arg=121, lineno=103)
DEBUG:numba.core.byteflow:stack ['$210compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=214, stack=(), blockstack=(), npush=0), Edge(pc=240, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=140 nstack_initial=0), State(pc_initial=188 nstack_initial=0), State(pc_initial=206 nstack_initial=0), State(pc_initial=214 nstack_initial=0), State(pc_initial=240 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=140 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=3, lineno=94)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_FAST(arg=5, lineno=94)
DEBUG:numba.core.byteflow:stack ['$i2140.0']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=COMPARE_OP(arg=0, lineno=94)
DEBUG:numba.core.byteflow:stack ['$i2140.0', '$limit2142.1']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=POP_JUMP_IF_FALSE(arg=84, lineno=94)
DEBUG:numba.core.byteflow:stack ['$144compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=148, stack=(), blockstack=(), npush=0), Edge(pc=166, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=206 nstack_initial=0), State(pc_initial=214 nstack_initial=0), State(pc_initial=240 nstack_initial=0), State(pc_initial=148 nstack_initial=0), State(pc_initial=166 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=188 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=101)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_CONST(arg=2, lineno=101)
DEBUG:numba.core.byteflow:stack ['$i1188.0']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=INPLACE_ADD(arg=None, lineno=101)
DEBUG:numba.core.byteflow:stack ['$i1188.0', '$const190.1.2']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=STORE_FAST(arg=2, lineno=101)
DEBUG:numba.core.byteflow:stack ['$192inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=0, lineno=102)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=2, lineno=102)
DEBUG:numba.core.byteflow:stack ['$ar1196.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=BINARY_SUBSCR(arg=None, lineno=102)
DEBUG:numba.core.byteflow:stack ['$ar1196.3', '$i1198.4']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=STORE_FAST(arg=6, lineno=102)
DEBUG:numba.core.byteflow:stack ['$200binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=JUMP_FORWARD(arg=20, lineno=102)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=246, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=206 nstack_initial=0), State(pc_initial=214 nstack_initial=0), State(pc_initial=240 nstack_initial=0), State(pc_initial=148 nstack_initial=0), State(pc_initial=166 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=214 nstack_initial=0), State(pc_initial=240 nstack_initial=0), State(pc_initial=148 nstack_initial=0), State(pc_initial=166 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=214 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=3, lineno=103)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=5, lineno=103)
DEBUG:numba.core.byteflow:stack ['$i2214.0']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=COMPARE_OP(arg=0, lineno=103)
DEBUG:numba.core.byteflow:stack ['$i2214.0', '$limit2216.1']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=POP_JUMP_IF_FALSE(arg=121, lineno=103)
DEBUG:numba.core.byteflow:stack ['$218compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=222, stack=(), blockstack=(), npush=0), Edge(pc=240, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=148 nstack_initial=0), State(pc_initial=166 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=222 nstack_initial=0), State(pc_initial=240 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=NOP(arg=None, lineno=107)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_FAST(arg=8, lineno=109)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=244, inst=RETURN_VALUE(arg=None, lineno=109)
DEBUG:numba.core.byteflow:stack ['$result242.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=148 nstack_initial=0), State(pc_initial=166 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=222 nstack_initial=0), State(pc_initial=240 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=148 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=3, lineno=95)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_CONST(arg=2, lineno=95)
DEBUG:numba.core.byteflow:stack ['$i2148.0']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=INPLACE_ADD(arg=None, lineno=95)
DEBUG:numba.core.byteflow:stack ['$i2148.0', '$const150.1.2']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=STORE_FAST(arg=3, lineno=95)
DEBUG:numba.core.byteflow:stack ['$152inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=96)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_FAST(arg=3, lineno=96)
DEBUG:numba.core.byteflow:stack ['$ar2156.3']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=96)
DEBUG:numba.core.byteflow:stack ['$ar2156.3', '$i2158.4']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=STORE_FAST(arg=7, lineno=96)
DEBUG:numba.core.byteflow:stack ['$160binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=JUMP_FORWARD(arg=40, lineno=96)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=246, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=166 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=222 nstack_initial=0), State(pc_initial=240 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=166 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=166, inst=NOP(arg=None, lineno=98)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_FAST(arg=8, lineno=109)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=170, inst=RETURN_VALUE(arg=None, lineno=109)
DEBUG:numba.core.byteflow:stack ['$result168.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=246 nstack_initial=0), State(pc_initial=222 nstack_initial=0), State(pc_initial=240 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=246 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=246, inst=JUMP_ABSOLUTE(arg=47, lineno=85)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=222 nstack_initial=0), State(pc_initial=240 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=92 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=222 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=104)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_CONST(arg=2, lineno=104)
DEBUG:numba.core.byteflow:stack ['$i2222.0']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=INPLACE_ADD(arg=None, lineno=104)
DEBUG:numba.core.byteflow:stack ['$i2222.0', '$const224.1.2']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=STORE_FAST(arg=3, lineno=104)
DEBUG:numba.core.byteflow:stack ['$226inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_FAST(arg=1, lineno=105)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_FAST(arg=3, lineno=105)
DEBUG:numba.core.byteflow:stack ['$ar2230.3']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=BINARY_SUBSCR(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$ar2230.3', '$i2232.4']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=7, lineno=105)
DEBUG:numba.core.byteflow:stack ['$234binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_FORWARD(arg=3, lineno=105)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=246, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=246 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=140 nstack_initial=0): set(),
             State(pc_initial=148 nstack_initial=0): set(),
             State(pc_initial=166 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=206 nstack_initial=0): set(),
             State(pc_initial=214 nstack_initial=0): set(),
             State(pc_initial=222 nstack_initial=0): set(),
             State(pc_initial=240 nstack_initial=0): set(),
             State(pc_initial=246 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ar12.0'}), (4, {'item': '$ar12.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2.1'}), (8, {'index': '$const6.2.1', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$const10.4.1'}), (12, {'lhs': '$8binary_subscr.3', 'rhs': '$const10.4.1', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 30: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$ar216.0'}), (18, {'item': '$ar216.0', 'res': '$18load_attr.1'}), (20, {'res': '$const20.2.1'}), (22, {'index': '$const20.2.1', 'target': '$18load_attr.1', 'res': '$22binary_subscr.3'}), (24, {'res': '$const24.4.1'}), (26, {'lhs': '$22binary_subscr.3', 'rhs': '$const24.4.1', 'res': '$26compare_op.5'}), (28, {'pred': '$26compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 34: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$const30.0.1'}), (32, {'retval': '$const30.0.1', 'castval': '$32return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$const34.0.1'}), (36, {'value': '$const34.0.1'}), (38, {'res': '$const38.1.1'}), (40, {'value': '$const38.1.1'}), (42, {'res': '$ar142.2'}), (44, {'item': '$ar142.2', 'res': '$44load_attr.3'}), (46, {'res': '$const46.4.1'}), (48, {'index': '$const46.4.1', 'target': '$44load_attr.3', 'res': '$48binary_subscr.5'}), (50, {'res': '$const50.6.2'}), (52, {'lhs': '$48binary_subscr.5', 'rhs': '$const50.6.2', 'res': '$52binary_subtract.7'}), (54, {'value': '$52binary_subtract.7'}), (56, {'res': '$ar256.8'}), (58, {'item': '$ar256.8', 'res': '$58load_attr.9'}), (60, {'res': '$const60.10.1'}), (62, {'index': '$const60.10.1', 'target': '$58load_attr.9', 'res': '$62binary_subscr.11'}), (64, {'res': '$const64.12.2'}), (66, {'lhs': '$62binary_subscr.11', 'rhs': '$const64.12.2', 'res': '$66binary_subtract.13'}), (68, {'value': '$66binary_subtract.13'}), (70, {'res': '$ar170.14'}), (72, {'res': '$i172.15'}), (74, {'index': '$i172.15', 'target': '$ar170.14', 'res': '$74binary_subscr.16'}), (76, {'value': '$74binary_subscr.16'}), (78, {'res': '$ar278.17'}), (80, {'res': '$i280.18'}), (82, {'index': '$i280.18', 'target': '$ar278.17', 'res': '$82binary_subscr.19'}), (84, {'value': '$82binary_subscr.19'}), (86, {'res': '$const86.20.1'}), (88, {'value': '$const86.20.1'}), (90, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$j192.0'}), (94, {'res': '$j294.1'}), (96, {'lhs': '$j192.0', 'rhs': '$j294.1', 'res': '$96compare_op.2'}), (98, {'pred': '$96compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: (), 172: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$result100.0'}), (102, {'res': '$const102.1.2'}), (104, {'lhs': '$result100.0', 'rhs': '$const102.1.2', 'res': '$104inplace_add.2'}), (106, {'value': '$104inplace_add.2'}), (108, {'res': '$i1108.3'}), (110, {'res': '$limit1110.4'}), (112, {'lhs': '$i1108.3', 'rhs': '$limit1110.4', 'res': '$112compare_op.5'}), (114, {'pred': '$112compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 134: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$i1116.0'}), (118, {'res': '$const118.1.2'}), (120, {'lhs': '$i1116.0', 'rhs': '$const118.1.2', 'res': '$120inplace_add.2'}), (122, {'value': '$120inplace_add.2'}), (124, {'res': '$ar1124.3'}), (126, {'res': '$i1126.4'}), (128, {'index': '$i1126.4', 'target': '$ar1124.3', 'res': '$128binary_subscr.5'}), (130, {'value': '$128binary_subscr.5'}), (132, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={140: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {}), (136, {'res': '$result136.0'}), (138, {'retval': '$result136.0', 'castval': '$138return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=140 nstack_initial=0):
AdaptBlockInfo(insts=((140, {'res': '$i2140.0'}), (142, {'res': '$limit2142.1'}), (144, {'lhs': '$i2140.0', 'rhs': '$limit2142.1', 'res': '$144compare_op.2'}), (146, {'pred': '$144compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: (), 166: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=148 nstack_initial=0):
AdaptBlockInfo(insts=((148, {'res': '$i2148.0'}), (150, {'res': '$const150.1.2'}), (152, {'lhs': '$i2148.0', 'rhs': '$const150.1.2', 'res': '$152inplace_add.2'}), (154, {'value': '$152inplace_add.2'}), (156, {'res': '$ar2156.3'}), (158, {'res': '$i2158.4'}), (160, {'index': '$i2158.4', 'target': '$ar2156.3', 'res': '$160binary_subscr.5'}), (162, {'value': '$160binary_subscr.5'}), (164, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={246: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=166 nstack_initial=0):
AdaptBlockInfo(insts=((166, {}), (168, {'res': '$result168.0'}), (170, {'retval': '$result168.0', 'castval': '$170return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$j1172.0'}), (174, {'res': '$j2174.1'}), (176, {'lhs': '$j1172.0', 'rhs': '$j2174.1', 'res': '$176compare_op.2'}), (178, {'pred': '$176compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={180: (), 206: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {'res': '$i1180.0'}), (182, {'res': '$limit1182.1'}), (184, {'lhs': '$i1180.0', 'rhs': '$limit1182.1', 'res': '$184compare_op.2'}), (186, {'pred': '$184compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 206: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$i1188.0'}), (190, {'res': '$const190.1.2'}), (192, {'lhs': '$i1188.0', 'rhs': '$const190.1.2', 'res': '$192inplace_add.2'}), (194, {'value': '$192inplace_add.2'}), (196, {'res': '$ar1196.3'}), (198, {'res': '$i1198.4'}), (200, {'index': '$i1198.4', 'target': '$ar1196.3', 'res': '$200binary_subscr.5'}), (202, {'value': '$200binary_subscr.5'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={246: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=206 nstack_initial=0):
AdaptBlockInfo(insts=((206, {'res': '$j2206.0'}), (208, {'res': '$j1208.1'}), (210, {'lhs': '$j2206.0', 'rhs': '$j1208.1', 'res': '$210compare_op.2'}), (212, {'pred': '$210compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={214: (), 240: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=214 nstack_initial=0):
AdaptBlockInfo(insts=((214, {'res': '$i2214.0'}), (216, {'res': '$limit2216.1'}), (218, {'lhs': '$i2214.0', 'rhs': '$limit2216.1', 'res': '$218compare_op.2'}), (220, {'pred': '$218compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={222: (), 240: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=222 nstack_initial=0):
AdaptBlockInfo(insts=((222, {'res': '$i2222.0'}), (224, {'res': '$const224.1.2'}), (226, {'lhs': '$i2222.0', 'rhs': '$const224.1.2', 'res': '$226inplace_add.2'}), (228, {'value': '$226inplace_add.2'}), (230, {'res': '$ar2230.3'}), (232, {'res': '$i2232.4'}), (234, {'index': '$i2232.4', 'target': '$ar2230.3', 'res': '$234binary_subscr.5'}), (236, {'value': '$234binary_subscr.5'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={246: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {}), (242, {'res': '$result242.0'}), (244, {'retval': '$result242.0', 'castval': '$244return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=246 nstack_initial=0):
AdaptBlockInfo(insts=((246, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ()})
DEBUG:numba.core.interpreter:label 0:
    ar1 = arg(0, name=ar1)                   ['ar1']
    ar2 = arg(1, name=ar2)                   ['ar2']
    $4load_attr.1 = getattr(value=ar1, attr=shape) ['$4load_attr.1', 'ar1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $8binary_subscr.3 = getitem(value=$4load_attr.1, index=$const6.2.1, fn=<built-in function getitem>) ['$4load_attr.1', '$8binary_subscr.3', '$const6.2.1']
    $const10.4.1 = const(int, 0)             ['$const10.4.1']
    $12compare_op.5 = $8binary_subscr.3 == $const10.4.1 ['$12compare_op.5', '$8binary_subscr.3', '$const10.4.1']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 30, 16                   ['$14pred']
label 16:
    $18load_attr.1 = getattr(value=ar2, attr=shape) ['$18load_attr.1', 'ar2']
    $const20.2.1 = const(int, 0)             ['$const20.2.1']
    $22binary_subscr.3 = getitem(value=$18load_attr.1, index=$const20.2.1, fn=<built-in function getitem>) ['$18load_attr.1', '$22binary_subscr.3', '$const20.2.1']
    $const24.4.1 = const(int, 0)             ['$const24.4.1']
    $26compare_op.5 = $22binary_subscr.3 == $const24.4.1 ['$22binary_subscr.3', '$26compare_op.5', '$const24.4.1']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.5', '$28pred', 'bool28']
    branch $28pred, 30, 34                   ['$28pred']
label 30:
    $const30.0.1 = const(int, 0)             ['$const30.0.1']
    $32return_value.1 = cast(value=$const30.0.1) ['$32return_value.1', '$const30.0.1']
    return $32return_value.1                 ['$32return_value.1']
label 34:
    i1 = const(int, 0)                       ['i1']
    i2 = const(int, 0)                       ['i2']
    $44load_attr.3 = getattr(value=ar1, attr=shape) ['$44load_attr.3', 'ar1']
    $const46.4.1 = const(int, 0)             ['$const46.4.1']
    $48binary_subscr.5 = getitem(value=$44load_attr.3, index=$const46.4.1, fn=<built-in function getitem>) ['$44load_attr.3', '$48binary_subscr.5', '$const46.4.1']
    $const50.6.2 = const(int, 1)             ['$const50.6.2']
    limit1 = $48binary_subscr.5 - $const50.6.2 ['$48binary_subscr.5', '$const50.6.2', 'limit1']
    $58load_attr.9 = getattr(value=ar2, attr=shape) ['$58load_attr.9', 'ar2']
    $const60.10.1 = const(int, 0)            ['$const60.10.1']
    $62binary_subscr.11 = getitem(value=$58load_attr.9, index=$const60.10.1, fn=<built-in function getitem>) ['$58load_attr.9', '$62binary_subscr.11', '$const60.10.1']
    $const64.12.2 = const(int, 1)            ['$const64.12.2']
    limit2 = $62binary_subscr.11 - $const64.12.2 ['$62binary_subscr.11', '$const64.12.2', 'limit2']
    j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>) ['ar1', 'i1', 'j1']
    j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>) ['ar2', 'i2', 'j2']
    result = const(int, 0)                   ['result']
    jump 92                                  []
label 92:
    $96compare_op.2 = j1 == j2               ['$96compare_op.2', 'j1', 'j2']
    bool98 = global(bool: <class 'bool'>)    ['bool98']
    $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None) ['$96compare_op.2', '$98pred', 'bool98']
    branch $98pred, 100, 172                 ['$98pred']
label 100:
    $const102.1.2 = const(int, 1)            ['$const102.1.2']
    $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined) ['$104inplace_add.2', '$const102.1.2', 'result']
    result = $104inplace_add.2               ['$104inplace_add.2', 'result']
    $112compare_op.5 = i1 < limit1           ['$112compare_op.5', 'i1', 'limit1']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None) ['$112compare_op.5', '$114pred', 'bool114']
    branch $114pred, 116, 134                ['$114pred']
label 116:
    $const118.1.2 = const(int, 1)            ['$const118.1.2']
    $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined) ['$120inplace_add.2', '$const118.1.2', 'i1']
    i1 = $120inplace_add.2                   ['$120inplace_add.2', 'i1']
    j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>) ['ar1', 'i1', 'j1']
    jump 140                                 []
label 134:
    $138return_value.1 = cast(value=result)  ['$138return_value.1', 'result']
    return $138return_value.1                ['$138return_value.1']
label 140:
    $144compare_op.2 = i2 < limit2           ['$144compare_op.2', 'i2', 'limit2']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.2', '$146pred', 'bool146']
    branch $146pred, 148, 166                ['$146pred']
label 148:
    $const150.1.2 = const(int, 1)            ['$const150.1.2']
    $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined) ['$152inplace_add.2', '$const150.1.2', 'i2']
    i2 = $152inplace_add.2                   ['$152inplace_add.2', 'i2']
    j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>) ['ar2', 'i2', 'j2']
    jump 246                                 []
label 166:
    $170return_value.1 = cast(value=result)  ['$170return_value.1', 'result']
    return $170return_value.1                ['$170return_value.1']
label 172:
    $176compare_op.2 = j1 < j2               ['$176compare_op.2', 'j1', 'j2']
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None) ['$176compare_op.2', '$178pred', 'bool178']
    branch $178pred, 180, 206                ['$178pred']
label 180:
    $184compare_op.2 = i1 < limit1           ['$184compare_op.2', 'i1', 'limit1']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None) ['$184compare_op.2', '$186pred', 'bool186']
    branch $186pred, 188, 206                ['$186pred']
label 188:
    $const190.1.2 = const(int, 1)            ['$const190.1.2']
    $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined) ['$192inplace_add.2', '$const190.1.2', 'i1']
    i1 = $192inplace_add.2                   ['$192inplace_add.2', 'i1']
    j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>) ['ar1', 'i1', 'j1']
    jump 246                                 []
label 206:
    $210compare_op.2 = j2 < j1               ['$210compare_op.2', 'j1', 'j2']
    bool212 = global(bool: <class 'bool'>)   ['bool212']
    $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None) ['$210compare_op.2', '$212pred', 'bool212']
    branch $212pred, 214, 240                ['$212pred']
label 214:
    $218compare_op.2 = i2 < limit2           ['$218compare_op.2', 'i2', 'limit2']
    bool220 = global(bool: <class 'bool'>)   ['bool220']
    $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None) ['$218compare_op.2', '$220pred', 'bool220']
    branch $220pred, 222, 240                ['$220pred']
label 222:
    $const224.1.2 = const(int, 1)            ['$const224.1.2']
    $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined) ['$226inplace_add.2', '$const224.1.2', 'i2']
    i2 = $226inplace_add.2                   ['$226inplace_add.2', 'i2']
    j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>) ['ar2', 'i2', 'j2']
    jump 246                                 []
label 240:
    $244return_value.1 = cast(value=result)  ['$244return_value.1', 'result']
    return $244return_value.1                ['$244return_value.1']
label 246:
    jump 92                                  []

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block analysis pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block analysis pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block analysis pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block analysis pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block analysis pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block analysis pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block analysis pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block analysis pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block analysis pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$104inplace_add.2': [(<numba.core.ir.Assign object at 0x7f1590d12050>,
                                    100)],
             '$112compare_op.5': [(<numba.core.ir.Assign object at 0x7f1590d124d0>,
                                   100)],
             '$114pred': [(<numba.core.ir.Assign object at 0x7f1590d12740>,
                           100)],
             '$120inplace_add.2': [(<numba.core.ir.Assign object at 0x7f1590d12b90>,
                                    116)],
             '$12compare_op.5': [(<numba.core.ir.Assign object at 0x7f1590ef2050>,
                                  0)],
             '$138return_value.1': [(<numba.core.ir.Assign object at 0x7f1590d132e0>,
                                     134)],
             '$144compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590d13790>,
                                   140)],
             '$146pred': [(<numba.core.ir.Assign object at 0x7f1590d13a00>,
                           140)],
             '$14pred': [(<numba.core.ir.Assign object at 0x7f1590ef22c0>, 0)],
             '$152inplace_add.2': [(<numba.core.ir.Assign object at 0x7f1590d13eb0>,
                                    148)],
             '$170return_value.1': [(<numba.core.ir.Assign object at 0x7f1590d1c640>,
                                     166)],
             '$176compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590d1caf0>,
                                   172)],
             '$178pred': [(<numba.core.ir.Assign object at 0x7f1590d1cd60>,
                           172)],
             '$184compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590d1d1b0>,
                                   180)],
             '$186pred': [(<numba.core.ir.Assign object at 0x7f1590d1d420>,
                           180)],
             '$18load_attr.1': [(<numba.core.ir.Assign object at 0x7f1590ef2620>,
                                 16)],
             '$192inplace_add.2': [(<numba.core.ir.Assign object at 0x7f1590d1d8d0>,
                                    188)],
             '$210compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590d1e170>,
                                   206)],
             '$212pred': [(<numba.core.ir.Assign object at 0x7f1590d1e3e0>,
                           206)],
             '$218compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590d1e830>,
                                   214)],
             '$220pred': [(<numba.core.ir.Assign object at 0x7f1590d1eaa0>,
                           214)],
             '$226inplace_add.2': [(<numba.core.ir.Assign object at 0x7f1590d1ef50>,
                                    222)],
             '$22binary_subscr.3': [(<numba.core.ir.Assign object at 0x7f1590ef09a0>,
                                     16)],
             '$244return_value.1': [(<numba.core.ir.Assign object at 0x7f1590d1f6a0>,
                                     240)],
             '$26compare_op.5': [(<numba.core.ir.Assign object at 0x7f1590ef2c50>,
                                  16)],
             '$28pred': [(<numba.core.ir.Assign object at 0x7f1590ef2ec0>, 16)],
             '$32return_value.1': [(<numba.core.ir.Assign object at 0x7f1590ef3280>,
                                    30)],
             '$44load_attr.3': [(<numba.core.ir.Assign object at 0x7f1590ef3b80>,
                                 34)],
             '$48binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1590ef08e0>,
                                     34)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7f1590ef1a20>,
                                0)],
             '$58load_attr.9': [(<numba.core.ir.Assign object at 0x7f1590d10580>,
                                 34)],
             '$62binary_subscr.11': [(<numba.core.ir.Assign object at 0x7f1590ef1870>,
                                      34)],
             '$8binary_subscr.3': [(<numba.core.ir.Assign object at 0x7f1590ef16c0>,
                                    0)],
             '$96compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590d113c0>,
                                  92)],
             '$98pred': [(<numba.core.ir.Assign object at 0x7f1590d11ba0>, 92)],
             '$const10.4.1': [(<numba.core.ir.Assign object at 0x7f1590ef1ea0>,
                               0)],
             '$const102.1.2': [(<numba.core.ir.Assign object at 0x7f1590d11ea0>,
                                100)],
             '$const118.1.2': [(<numba.core.ir.Assign object at 0x7f1590d129e0>,
                                116)],
             '$const150.1.2': [(<numba.core.ir.Assign object at 0x7f1590d13d00>,
                                148)],
             '$const190.1.2': [(<numba.core.ir.Assign object at 0x7f1590d1d720>,
                                188)],
             '$const20.2.1': [(<numba.core.ir.Assign object at 0x7f1590ef27a0>,
                               16)],
             '$const224.1.2': [(<numba.core.ir.Assign object at 0x7f1590d1eda0>,
                                222)],
             '$const24.4.1': [(<numba.core.ir.Assign object at 0x7f1590ef2aa0>,
                               16)],
             '$const30.0.1': [(<numba.core.ir.Assign object at 0x7f1590ef3100>,
                               30)],
             '$const46.4.1': [(<numba.core.ir.Assign object at 0x7f1590ef3d00>,
                               34)],
             '$const50.6.2': [(<numba.core.ir.Assign object at 0x7f1590d10040>,
                               34)],
             '$const6.2.1': [(<numba.core.ir.Assign object at 0x7f1590ef1ba0>,
                              0)],
             '$const60.10.1': [(<numba.core.ir.Assign object at 0x7f1590d10700>,
                                34)],
             '$const64.12.2': [(<numba.core.ir.Assign object at 0x7f1590d10a00>,
                                34)],
             'ar1': [(<numba.core.ir.Assign object at 0x7f1590ef15d0>, 0)],
             'ar2': [(<numba.core.ir.Assign object at 0x7f1590ef0c10>, 0)],
             'bool114': [(<numba.core.ir.Assign object at 0x7f1590d12620>,
                          100)],
             'bool14': [(<numba.core.ir.Assign object at 0x7f1590ef21a0>, 0)],
             'bool146': [(<numba.core.ir.Assign object at 0x7f1590d138e0>,
                          140)],
             'bool178': [(<numba.core.ir.Assign object at 0x7f1590d1cc40>,
                          172)],
             'bool186': [(<numba.core.ir.Assign object at 0x7f1590d1d300>,
                          180)],
             'bool212': [(<numba.core.ir.Assign object at 0x7f1590d1e2c0>,
                          206)],
             'bool220': [(<numba.core.ir.Assign object at 0x7f1590d1e980>,
                          214)],
             'bool28': [(<numba.core.ir.Assign object at 0x7f1590ef2da0>, 16)],
             'bool98': [(<numba.core.ir.Assign object at 0x7f1590d11a80>, 92)],
             'i1': [(<numba.core.ir.Assign object at 0x7f1590ef3520>, 34),
                    (<numba.core.ir.Assign object at 0x7f1590d12c50>, 116),
                    (<numba.core.ir.Assign object at 0x7f1590d1d990>, 188)],
             'i2': [(<numba.core.ir.Assign object at 0x7f1590ef37c0>, 34),
                    (<numba.core.ir.Assign object at 0x7f1590d13f70>, 148),
                    (<numba.core.ir.Assign object at 0x7f1590d1f010>, 222)],
             'j1': [(<numba.core.ir.Assign object at 0x7f1590d11090>, 34),
                    (<numba.core.ir.Assign object at 0x7f1590d13010>, 116),
                    (<numba.core.ir.Assign object at 0x7f1590d1dd50>, 188)],
             'j2': [(<numba.core.ir.Assign object at 0x7f1590d11570>, 34),
                    (<numba.core.ir.Assign object at 0x7f1590d1c370>, 148),
                    (<numba.core.ir.Assign object at 0x7f1590d1f3d0>, 222)],
             'limit1': [(<numba.core.ir.Assign object at 0x7f1590d101f0>, 34)],
             'limit2': [(<numba.core.ir.Assign object at 0x7f1590d10bb0>, 34)],
             'result': [(<numba.core.ir.Assign object at 0x7f1590d117e0>, 34),
                        (<numba.core.ir.Assign object at 0x7f1590d12110>,
                         100)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15910ccf10>
DEBUG:numba.core.ssa:Fix SSA violator on var i1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:first assign: i1
DEBUG:numba.core.ssa:replaced with: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1 = $120inplace_add.2
DEBUG:numba.core.ssa:replaced with: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1 = $192inplace_add.2
DEBUG:numba.core.ssa:replaced with: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x7f1590ef0fa0>],
             116: [<numba.core.ir.Assign object at 0x7f1590ef0af0>],
             188: [<numba.core.ir.Assign object at 0x7f1590ef0760>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i1' stmt=j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1 < limit1
DEBUG:numba.core.ssa:find_def var='i1' stmt=$112compare_op.5 = i1 < limit1
DEBUG:numba.core.ssa:find_def_from_top label 100
DEBUG:numba.core.ssa:idom 92 from label 100
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:insert phi node i1.3 = phi(incoming_values=[], incoming_blocks=[]) at 92
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def i1 = const(int, 0)
DEBUG:numba.core.ssa:find_def_from_bottom label 246
DEBUG:numba.core.ssa:find_def_from_top label 246
DEBUG:numba.core.ssa:insert phi node i1.4 = phi(incoming_values=[], incoming_blocks=[]) at 246
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:incoming_def i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 140 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 116 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:incoming_def i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 222
DEBUG:numba.core.ssa:find_def_from_top label 222
DEBUG:numba.core.ssa:idom 214 from label 222
DEBUG:numba.core.ssa:find_def_from_bottom label 214
DEBUG:numba.core.ssa:find_def_from_top label 214
DEBUG:numba.core.ssa:idom 206 from label 214
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:incoming_def i1.3 = phi(incoming_values=[Var(i1, sparse.py:76)], incoming_blocks=[34])
DEBUG:numba.core.ssa:incoming_def i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:replaced with: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='i1' stmt=$120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 100 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:find_def_from_top label 100
DEBUG:numba.core.ssa:idom 92 from label 100
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i1' stmt=j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1 < limit1
DEBUG:numba.core.ssa:find_def var='i1' stmt=$184compare_op.2 = i1 < limit1
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 172 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='i1' stmt=$192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 180 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 172 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i1' stmt=j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j1 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Fix SSA violator on var i2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:first assign: i2
DEBUG:numba.core.ssa:replaced with: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $152inplace_add.2
DEBUG:numba.core.ssa:replaced with: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $226inplace_add.2
DEBUG:numba.core.ssa:replaced with: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef05e0>
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x7f1590ef0730>],
             148: [<numba.core.ir.Assign object at 0x7f1590ef0070>],
             222: [<numba.core.ir.Assign object at 0x7f1590ecf910>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i2' stmt=j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:find_def var='i2' stmt=$144compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 116 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 100 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:find_def_from_top label 100
DEBUG:numba.core.ssa:idom 92 from label 100
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:insert phi node i2.3 = phi(incoming_values=[], incoming_blocks=[]) at 92
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def i2 = const(int, 0)
DEBUG:numba.core.ssa:find_def_from_bottom label 246
DEBUG:numba.core.ssa:find_def_from_top label 246
DEBUG:numba.core.ssa:insert phi node i2.4 = phi(incoming_values=[], incoming_blocks=[]) at 246
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 180 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 172 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:incoming_def i2.3 = phi(incoming_values=[Var(i2, sparse.py:77)], incoming_blocks=[34])
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:incoming_def i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 222
DEBUG:numba.core.ssa:incoming_def i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:incoming_def i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:replaced with: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='i2' stmt=$152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 140 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 116 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 100 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:find_def_from_top label 100
DEBUG:numba.core.ssa:idom 92 from label 100
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i2' stmt=j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j2 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:find_def var='i2' stmt=$218compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:find_def_from_top label 214
DEBUG:numba.core.ssa:idom 206 from label 214
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='i2' stmt=$226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 222
DEBUG:numba.core.ssa:idom 214 from label 222
DEBUG:numba.core.ssa:find_def_from_bottom label 214
DEBUG:numba.core.ssa:find_def_from_top label 214
DEBUG:numba.core.ssa:idom 206 from label 214
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i2' stmt=j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Fix SSA violator on var j1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:first assign: j1
DEBUG:numba.core.ssa:replaced with: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: i2.3 = phi(incoming_values=[Var(i2, sparse.py:77), Var(i2.4, sparse.py:94)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef00d0>
DEBUG:numba.core.ssa:on stmt: i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x7f1590ef0280>],
             116: [<numba.core.ir.Assign object at 0x7f1590ef0e50>],
             188: [<numba.core.ir.Assign object at 0x7f1590ece6e0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: i2.3 = phi(incoming_values=[Var(i2, sparse.py:77), Var(i2.4, sparse.py:94)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:find_def var='j1' stmt=$96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:insert phi node j1.3 = phi(incoming_values=[], incoming_blocks=[]) at 92
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 246
DEBUG:numba.core.ssa:find_def_from_top label 246
DEBUG:numba.core.ssa:insert phi node j1.4 = phi(incoming_values=[], incoming_blocks=[]) at 246
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:incoming_def j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 140 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 116 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:incoming_def j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 222
DEBUG:numba.core.ssa:find_def_from_top label 222
DEBUG:numba.core.ssa:idom 214 from label 222
DEBUG:numba.core.ssa:find_def_from_bottom label 214
DEBUG:numba.core.ssa:find_def_from_top label 214
DEBUG:numba.core.ssa:idom 206 from label 214
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:incoming_def j1.3 = phi(incoming_values=[Var(j1, sparse.py:80)], incoming_blocks=[34])
DEBUG:numba.core.ssa:incoming_def j1.4 = phi(incoming_values=[Var(j1.2, sparse.py:102), Var(j1.1, sparse.py:90), Var(j1.3, sparse.py:86)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:replaced with: $96compare_op.2 = j1.3 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:find_def var='j1' stmt=$176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $176compare_op.2 = j1.3 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:find_def var='j1' stmt=$210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $210compare_op.2 = j2 < j1.3
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Fix SSA violator on var j2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:first assign: j2
DEBUG:numba.core.ssa:replaced with: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: j1.3 = phi(incoming_values=[Var(j1, sparse.py:80), Var(j1.4, sparse.py:86)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i2.3 = phi(incoming_values=[Var(i2, sparse.py:77), Var(i2.4, sparse.py:94)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1.3 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j2.1 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1.3 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1.3
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j2.2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: j1.4 = phi(incoming_values=[Var(j1.2, sparse.py:102), Var(j1.1, sparse.py:90), Var(j1.3, sparse.py:86)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x7f1590ef0c70>],
             148: [<numba.core.ir.Assign object at 0x7f1590ef1270>],
             222: [<numba.core.ir.Assign object at 0x7f1590ecd570>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: j1.3 = phi(incoming_values=[Var(j1, sparse.py:80), Var(j1.4, sparse.py:86)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i2.3 = phi(incoming_values=[Var(i2, sparse.py:77), Var(i2.4, sparse.py:94)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1.3 == j2
DEBUG:numba.core.ssa:find_def var='j2' stmt=$96compare_op.2 = j1.3 == j2
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:insert phi node j2.3 = phi(incoming_values=[], incoming_blocks=[]) at 92
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 246
DEBUG:numba.core.ssa:find_def_from_top label 246
DEBUG:numba.core.ssa:insert phi node j2.4 = phi(incoming_values=[], incoming_blocks=[]) at 246
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 180 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 172 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:incoming_def j2.3 = phi(incoming_values=[Var(j2, sparse.py:81)], incoming_blocks=[34])
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:incoming_def j2.1 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 222
DEBUG:numba.core.ssa:incoming_def j2.2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:incoming_def j2.4 = phi(incoming_values=[Var(j2.3, sparse.py:86), Var(j2.1, sparse.py:96), Var(j2.2, sparse.py:105)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:replaced with: $96compare_op.2 = j1.3 == j2.3
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2.1 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1.3 < j2
DEBUG:numba.core.ssa:find_def var='j2' stmt=$176compare_op.2 = j1.3 < j2
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $176compare_op.2 = j1.3 < j2.3
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1.3
DEBUG:numba.core.ssa:find_def var='j2' stmt=$210compare_op.2 = j2 < j1.3
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $210compare_op.2 = j2.3 < j1.3
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2.2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: j1.4 = phi(incoming_values=[Var(j1.2, sparse.py:102), Var(j1.1, sparse.py:90), Var(j1.3, sparse.py:86)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: j2.3 = phi(incoming_values=[Var(j2, sparse.py:81), Var(j2.4, sparse.py:86)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: j1.3 = phi(incoming_values=[Var(j1, sparse.py:80), Var(j1.4, sparse.py:86)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i2.3 = phi(incoming_values=[Var(i2, sparse.py:77), Var(i2.4, sparse.py:94)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1.3 == j2.3
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:replaced with: result.1 = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2.1 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1.3 < j2.3
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2.3 < j1.3
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2.2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef16f0>
DEBUG:numba.core.ssa:on stmt: j2.4 = phi(incoming_values=[Var(j2.3, sparse.py:86), Var(j2.1, sparse.py:96), Var(j2.2, sparse.py:105)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: j1.4 = phi(incoming_values=[Var(j1.2, sparse.py:102), Var(j1.1, sparse.py:90), Var(j1.3, sparse.py:86)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x7f1590ef01c0>],
             100: [<numba.core.ir.Assign object at 0x7f1590ef0430>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: j2.3 = phi(incoming_values=[Var(j2, sparse.py:81), Var(j2.4, sparse.py:86)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: j1.3 = phi(incoming_values=[Var(j1, sparse.py:80), Var(j1.4, sparse.py:86)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i2.3 = phi(incoming_values=[Var(i2, sparse.py:77), Var(i2.4, sparse.py:94)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1.3 == j2.3
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 100
DEBUG:numba.core.ssa:idom 92 from label 100
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 92
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def result = const(int, 0)
DEBUG:numba.core.ssa:find_def_from_bottom label 246
DEBUG:numba.core.ssa:find_def_from_top label 246
DEBUG:numba.core.ssa:insert phi node result.3 = phi(incoming_values=[], incoming_blocks=[]) at 246
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 180 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 172 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:incoming_def result.2 = phi(incoming_values=[Var(result, sparse.py:83)], incoming_blocks=[34])
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 140 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 116 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 100 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:incoming_def result.1 = $104inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 222
DEBUG:numba.core.ssa:find_def_from_top label 222
DEBUG:numba.core.ssa:idom 214 from label 222
DEBUG:numba.core.ssa:find_def_from_bottom label 214
DEBUG:numba.core.ssa:find_def_from_top label 214
DEBUG:numba.core.ssa:idom 206 from label 214
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:incoming_def result.2 = phi(incoming_values=[Var(result, sparse.py:83)], incoming_blocks=[34])
DEBUG:numba.core.ssa:incoming_def result.3 = phi(incoming_values=[Var(result.2, sparse.py:87), Var(result.1, sparse.py:87), Var(result.2, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:replaced with: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def var='result' stmt=$138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def_from_top label 134
DEBUG:numba.core.ssa:idom 100 from label 134
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:replaced with: $138return_value.1 = cast(value=result.1)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2.1 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def var='result' stmt=$170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def_from_top label 166
DEBUG:numba.core.ssa:idom 140 from label 166
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 116 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 100 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:replaced with: $170return_value.1 = cast(value=result.1)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1.3 < j2.3
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2.3 < j1.3
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2.2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def var='result' stmt=$244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def_from_top label 240
DEBUG:numba.core.ssa:idom 206 from label 240
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $244return_value.1 = cast(value=result.2)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15910cea40>
DEBUG:numba.core.ssa:on stmt: j2.4 = phi(incoming_values=[Var(j2.3, sparse.py:86), Var(j2.1, sparse.py:96), Var(j2.2, sparse.py:105)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: j1.4 = phi(incoming_values=[Var(j1.2, sparse.py:102), Var(j1.1, sparse.py:90), Var(j1.3, sparse.py:86)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=58)
           2	LOAD_FAST(arg=0, lineno=72)
           4	LOAD_ATTR(arg=0, lineno=72)
           6	LOAD_CONST(arg=1, lineno=72)
           8	BINARY_SUBSCR(arg=None, lineno=72)
          10	LOAD_CONST(arg=1, lineno=72)
          12	COMPARE_OP(arg=2, lineno=72)
          14	POP_JUMP_IF_TRUE(arg=16, lineno=72)
          16	LOAD_FAST(arg=1, lineno=72)
          18	LOAD_ATTR(arg=0, lineno=72)
          20	LOAD_CONST(arg=1, lineno=72)
          22	BINARY_SUBSCR(arg=None, lineno=72)
          24	LOAD_CONST(arg=1, lineno=72)
          26	COMPARE_OP(arg=2, lineno=72)
          28	POP_JUMP_IF_FALSE(arg=18, lineno=72)
>         30	LOAD_CONST(arg=1, lineno=73)
          32	RETURN_VALUE(arg=None, lineno=73)
>         34	LOAD_CONST(arg=1, lineno=76)
          36	STORE_FAST(arg=2, lineno=76)
          38	LOAD_CONST(arg=1, lineno=77)
          40	STORE_FAST(arg=3, lineno=77)
          42	LOAD_FAST(arg=0, lineno=78)
          44	LOAD_ATTR(arg=0, lineno=78)
          46	LOAD_CONST(arg=1, lineno=78)
          48	BINARY_SUBSCR(arg=None, lineno=78)
          50	LOAD_CONST(arg=2, lineno=78)
          52	BINARY_SUBTRACT(arg=None, lineno=78)
          54	STORE_FAST(arg=4, lineno=78)
          56	LOAD_FAST(arg=1, lineno=79)
          58	LOAD_ATTR(arg=0, lineno=79)
          60	LOAD_CONST(arg=1, lineno=79)
          62	BINARY_SUBSCR(arg=None, lineno=79)
          64	LOAD_CONST(arg=2, lineno=79)
          66	BINARY_SUBTRACT(arg=None, lineno=79)
          68	STORE_FAST(arg=5, lineno=79)
          70	LOAD_FAST(arg=0, lineno=80)
          72	LOAD_FAST(arg=2, lineno=80)
          74	BINARY_SUBSCR(arg=None, lineno=80)
          76	STORE_FAST(arg=6, lineno=80)
          78	LOAD_FAST(arg=1, lineno=81)
          80	LOAD_FAST(arg=3, lineno=81)
          82	BINARY_SUBSCR(arg=None, lineno=81)
          84	STORE_FAST(arg=7, lineno=81)
          86	LOAD_CONST(arg=1, lineno=83)
          88	STORE_FAST(arg=8, lineno=83)
          90	NOP(arg=None, lineno=85)
>         92	LOAD_FAST(arg=6, lineno=86)
          94	LOAD_FAST(arg=7, lineno=86)
          96	COMPARE_OP(arg=2, lineno=86)
          98	POP_JUMP_IF_FALSE(arg=87, lineno=86)
         100	LOAD_FAST(arg=8, lineno=87)
         102	LOAD_CONST(arg=2, lineno=87)
         104	INPLACE_ADD(arg=None, lineno=87)
         106	STORE_FAST(arg=8, lineno=87)
         108	LOAD_FAST(arg=2, lineno=88)
         110	LOAD_FAST(arg=4, lineno=88)
         112	COMPARE_OP(arg=0, lineno=88)
         114	POP_JUMP_IF_FALSE(arg=68, lineno=88)
         116	LOAD_FAST(arg=2, lineno=89)
         118	LOAD_CONST(arg=2, lineno=89)
         120	INPLACE_ADD(arg=None, lineno=89)
         122	STORE_FAST(arg=2, lineno=89)
         124	LOAD_FAST(arg=0, lineno=90)
         126	LOAD_FAST(arg=2, lineno=90)
         128	BINARY_SUBSCR(arg=None, lineno=90)
         130	STORE_FAST(arg=6, lineno=90)
         132	JUMP_FORWARD(arg=3, lineno=90)
>        134	NOP(arg=None, lineno=92)
         136	LOAD_FAST(arg=8, lineno=109)
         138	RETURN_VALUE(arg=None, lineno=109)
>        140	LOAD_FAST(arg=3, lineno=94)
         142	LOAD_FAST(arg=5, lineno=94)
         144	COMPARE_OP(arg=0, lineno=94)
         146	POP_JUMP_IF_FALSE(arg=84, lineno=94)
         148	LOAD_FAST(arg=3, lineno=95)
         150	LOAD_CONST(arg=2, lineno=95)
         152	INPLACE_ADD(arg=None, lineno=95)
         154	STORE_FAST(arg=3, lineno=95)
         156	LOAD_FAST(arg=1, lineno=96)
         158	LOAD_FAST(arg=3, lineno=96)
         160	BINARY_SUBSCR(arg=None, lineno=96)
         162	STORE_FAST(arg=7, lineno=96)
         164	JUMP_FORWARD(arg=40, lineno=96)
>        166	NOP(arg=None, lineno=98)
         168	LOAD_FAST(arg=8, lineno=109)
         170	RETURN_VALUE(arg=None, lineno=109)
>        172	LOAD_FAST(arg=6, lineno=100)
         174	LOAD_FAST(arg=7, lineno=100)
         176	COMPARE_OP(arg=0, lineno=100)
         178	POP_JUMP_IF_FALSE(arg=104, lineno=100)
         180	LOAD_FAST(arg=2, lineno=100)
         182	LOAD_FAST(arg=4, lineno=100)
         184	COMPARE_OP(arg=0, lineno=100)
         186	POP_JUMP_IF_FALSE(arg=104, lineno=100)
         188	LOAD_FAST(arg=2, lineno=101)
         190	LOAD_CONST(arg=2, lineno=101)
         192	INPLACE_ADD(arg=None, lineno=101)
         194	STORE_FAST(arg=2, lineno=101)
         196	LOAD_FAST(arg=0, lineno=102)
         198	LOAD_FAST(arg=2, lineno=102)
         200	BINARY_SUBSCR(arg=None, lineno=102)
         202	STORE_FAST(arg=6, lineno=102)
         204	JUMP_FORWARD(arg=20, lineno=102)
>        206	LOAD_FAST(arg=7, lineno=103)
         208	LOAD_FAST(arg=6, lineno=103)
         210	COMPARE_OP(arg=0, lineno=103)
         212	POP_JUMP_IF_FALSE(arg=121, lineno=103)
         214	LOAD_FAST(arg=3, lineno=103)
         216	LOAD_FAST(arg=5, lineno=103)
         218	COMPARE_OP(arg=0, lineno=103)
         220	POP_JUMP_IF_FALSE(arg=121, lineno=103)
         222	LOAD_FAST(arg=3, lineno=104)
         224	LOAD_CONST(arg=2, lineno=104)
         226	INPLACE_ADD(arg=None, lineno=104)
         228	STORE_FAST(arg=3, lineno=104)
         230	LOAD_FAST(arg=1, lineno=105)
         232	LOAD_FAST(arg=3, lineno=105)
         234	BINARY_SUBSCR(arg=None, lineno=105)
         236	STORE_FAST(arg=7, lineno=105)
         238	JUMP_FORWARD(arg=3, lineno=105)
>        240	NOP(arg=None, lineno=107)
         242	LOAD_FAST(arg=8, lineno=109)
         244	RETURN_VALUE(arg=None, lineno=109)
>        246	JUMP_ABSOLUTE(arg=47, lineno=85)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=58)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack ['$ar12.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=72)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$const6.2.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=COMPARE_OP(arg=2, lineno=72)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.3', '$const10.4.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=16, lineno=72)
DEBUG:numba.core.byteflow:stack ['$12compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=16 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_ATTR(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack ['$ar216.0']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$18load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=72)
DEBUG:numba.core.byteflow:stack ['$18load_attr.1', '$const20.2.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$22binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=COMPARE_OP(arg=2, lineno=72)
DEBUG:numba.core.byteflow:stack ['$22binary_subscr.3', '$const24.4.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=18, lineno=72)
DEBUG:numba.core.byteflow:stack ['$26compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=30 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=73)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=73)
DEBUG:numba.core.byteflow:stack ['$const30.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=76)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=2, lineno=76)
DEBUG:numba.core.byteflow:stack ['$const34.0.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=77)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_FAST(arg=3, lineno=77)
DEBUG:numba.core.byteflow:stack ['$const38.1.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=78)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_ATTR(arg=0, lineno=78)
DEBUG:numba.core.byteflow:stack ['$ar142.2']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_CONST(arg=1, lineno=78)
DEBUG:numba.core.byteflow:stack ['$44load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=78)
DEBUG:numba.core.byteflow:stack ['$44load_attr.3', '$const46.4.1']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=2, lineno=78)
DEBUG:numba.core.byteflow:stack ['$48binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_SUBTRACT(arg=None, lineno=78)
DEBUG:numba.core.byteflow:stack ['$48binary_subscr.5', '$const50.6.2']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=4, lineno=78)
DEBUG:numba.core.byteflow:stack ['$52binary_subtract.7']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=79)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_ATTR(arg=0, lineno=79)
DEBUG:numba.core.byteflow:stack ['$ar256.8']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=79)
DEBUG:numba.core.byteflow:stack ['$58load_attr.9']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=79)
DEBUG:numba.core.byteflow:stack ['$58load_attr.9', '$const60.10.1']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=79)
DEBUG:numba.core.byteflow:stack ['$62binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=79)
DEBUG:numba.core.byteflow:stack ['$62binary_subscr.11', '$const64.12.2']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=STORE_FAST(arg=5, lineno=79)
DEBUG:numba.core.byteflow:stack ['$66binary_subtract.13']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=80)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=2, lineno=80)
DEBUG:numba.core.byteflow:stack ['$ar170.14']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=BINARY_SUBSCR(arg=None, lineno=80)
DEBUG:numba.core.byteflow:stack ['$ar170.14', '$i172.15']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=STORE_FAST(arg=6, lineno=80)
DEBUG:numba.core.byteflow:stack ['$74binary_subscr.16']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=81)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=3, lineno=81)
DEBUG:numba.core.byteflow:stack ['$ar278.17']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=81)
DEBUG:numba.core.byteflow:stack ['$ar278.17', '$i280.18']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=STORE_FAST(arg=7, lineno=81)
DEBUG:numba.core.byteflow:stack ['$82binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_CONST(arg=1, lineno=83)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=STORE_FAST(arg=8, lineno=83)
DEBUG:numba.core.byteflow:stack ['$const86.20.1']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=NOP(arg=None, lineno=85)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=92 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=92 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=6, lineno=86)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=7, lineno=86)
DEBUG:numba.core.byteflow:stack ['$j192.0']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=COMPARE_OP(arg=2, lineno=86)
DEBUG:numba.core.byteflow:stack ['$j192.0', '$j294.1']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=POP_JUMP_IF_FALSE(arg=87, lineno=86)
DEBUG:numba.core.byteflow:stack ['$96compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=100 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=8, lineno=87)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=87)
DEBUG:numba.core.byteflow:stack ['$result100.0']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=INPLACE_ADD(arg=None, lineno=87)
DEBUG:numba.core.byteflow:stack ['$result100.0', '$const102.1.2']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=STORE_FAST(arg=8, lineno=87)
DEBUG:numba.core.byteflow:stack ['$104inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=2, lineno=88)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=4, lineno=88)
DEBUG:numba.core.byteflow:stack ['$i1108.3']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=COMPARE_OP(arg=0, lineno=88)
DEBUG:numba.core.byteflow:stack ['$i1108.3', '$limit1110.4']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=POP_JUMP_IF_FALSE(arg=68, lineno=88)
DEBUG:numba.core.byteflow:stack ['$112compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=172 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=6, lineno=100)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_FAST(arg=7, lineno=100)
DEBUG:numba.core.byteflow:stack ['$j1172.0']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=COMPARE_OP(arg=0, lineno=100)
DEBUG:numba.core.byteflow:stack ['$j1172.0', '$j2174.1']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=POP_JUMP_IF_FALSE(arg=104, lineno=100)
DEBUG:numba.core.byteflow:stack ['$176compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=180, stack=(), blockstack=(), npush=0), Edge(pc=206, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=206 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=2, lineno=89)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_CONST(arg=2, lineno=89)
DEBUG:numba.core.byteflow:stack ['$i1116.0']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=INPLACE_ADD(arg=None, lineno=89)
DEBUG:numba.core.byteflow:stack ['$i1116.0', '$const118.1.2']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=STORE_FAST(arg=2, lineno=89)
DEBUG:numba.core.byteflow:stack ['$120inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=0, lineno=90)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=2, lineno=90)
DEBUG:numba.core.byteflow:stack ['$ar1124.3']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=90)
DEBUG:numba.core.byteflow:stack ['$ar1124.3', '$i1126.4']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=STORE_FAST(arg=6, lineno=90)
DEBUG:numba.core.byteflow:stack ['$128binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=JUMP_FORWARD(arg=3, lineno=90)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=140, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=206 nstack_initial=0), State(pc_initial=140 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=134 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=134, inst=NOP(arg=None, lineno=92)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=109)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=138, inst=RETURN_VALUE(arg=None, lineno=109)
DEBUG:numba.core.byteflow:stack ['$result136.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=206 nstack_initial=0), State(pc_initial=140 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=180 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_FAST(arg=2, lineno=100)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_FAST(arg=4, lineno=100)
DEBUG:numba.core.byteflow:stack ['$i1180.0']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=COMPARE_OP(arg=0, lineno=100)
DEBUG:numba.core.byteflow:stack ['$i1180.0', '$limit1182.1']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=POP_JUMP_IF_FALSE(arg=104, lineno=100)
DEBUG:numba.core.byteflow:stack ['$184compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=206, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=206 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=188 nstack_initial=0), State(pc_initial=206 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=206 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_FAST(arg=7, lineno=103)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=6, lineno=103)
DEBUG:numba.core.byteflow:stack ['$j2206.0']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=COMPARE_OP(arg=0, lineno=103)
DEBUG:numba.core.byteflow:stack ['$j2206.0', '$j1208.1']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=POP_JUMP_IF_FALSE(arg=121, lineno=103)
DEBUG:numba.core.byteflow:stack ['$210compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=214, stack=(), blockstack=(), npush=0), Edge(pc=240, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=140 nstack_initial=0), State(pc_initial=188 nstack_initial=0), State(pc_initial=206 nstack_initial=0), State(pc_initial=214 nstack_initial=0), State(pc_initial=240 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=140 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=3, lineno=94)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_FAST(arg=5, lineno=94)
DEBUG:numba.core.byteflow:stack ['$i2140.0']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=COMPARE_OP(arg=0, lineno=94)
DEBUG:numba.core.byteflow:stack ['$i2140.0', '$limit2142.1']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=POP_JUMP_IF_FALSE(arg=84, lineno=94)
DEBUG:numba.core.byteflow:stack ['$144compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=148, stack=(), blockstack=(), npush=0), Edge(pc=166, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=206 nstack_initial=0), State(pc_initial=214 nstack_initial=0), State(pc_initial=240 nstack_initial=0), State(pc_initial=148 nstack_initial=0), State(pc_initial=166 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=188 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=101)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_CONST(arg=2, lineno=101)
DEBUG:numba.core.byteflow:stack ['$i1188.0']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=INPLACE_ADD(arg=None, lineno=101)
DEBUG:numba.core.byteflow:stack ['$i1188.0', '$const190.1.2']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=STORE_FAST(arg=2, lineno=101)
DEBUG:numba.core.byteflow:stack ['$192inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=0, lineno=102)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=2, lineno=102)
DEBUG:numba.core.byteflow:stack ['$ar1196.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=BINARY_SUBSCR(arg=None, lineno=102)
DEBUG:numba.core.byteflow:stack ['$ar1196.3', '$i1198.4']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=STORE_FAST(arg=6, lineno=102)
DEBUG:numba.core.byteflow:stack ['$200binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=JUMP_FORWARD(arg=20, lineno=102)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=246, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=206 nstack_initial=0), State(pc_initial=214 nstack_initial=0), State(pc_initial=240 nstack_initial=0), State(pc_initial=148 nstack_initial=0), State(pc_initial=166 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=214 nstack_initial=0), State(pc_initial=240 nstack_initial=0), State(pc_initial=148 nstack_initial=0), State(pc_initial=166 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=214 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=3, lineno=103)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=5, lineno=103)
DEBUG:numba.core.byteflow:stack ['$i2214.0']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=COMPARE_OP(arg=0, lineno=103)
DEBUG:numba.core.byteflow:stack ['$i2214.0', '$limit2216.1']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=POP_JUMP_IF_FALSE(arg=121, lineno=103)
DEBUG:numba.core.byteflow:stack ['$218compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=222, stack=(), blockstack=(), npush=0), Edge(pc=240, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=148 nstack_initial=0), State(pc_initial=166 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=222 nstack_initial=0), State(pc_initial=240 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=NOP(arg=None, lineno=107)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_FAST(arg=8, lineno=109)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=244, inst=RETURN_VALUE(arg=None, lineno=109)
DEBUG:numba.core.byteflow:stack ['$result242.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=148 nstack_initial=0), State(pc_initial=166 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=222 nstack_initial=0), State(pc_initial=240 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=148 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=3, lineno=95)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_CONST(arg=2, lineno=95)
DEBUG:numba.core.byteflow:stack ['$i2148.0']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=INPLACE_ADD(arg=None, lineno=95)
DEBUG:numba.core.byteflow:stack ['$i2148.0', '$const150.1.2']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=STORE_FAST(arg=3, lineno=95)
DEBUG:numba.core.byteflow:stack ['$152inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=96)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_FAST(arg=3, lineno=96)
DEBUG:numba.core.byteflow:stack ['$ar2156.3']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=96)
DEBUG:numba.core.byteflow:stack ['$ar2156.3', '$i2158.4']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=STORE_FAST(arg=7, lineno=96)
DEBUG:numba.core.byteflow:stack ['$160binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=JUMP_FORWARD(arg=40, lineno=96)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=246, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=166 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=222 nstack_initial=0), State(pc_initial=240 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=166 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=166, inst=NOP(arg=None, lineno=98)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_FAST(arg=8, lineno=109)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=170, inst=RETURN_VALUE(arg=None, lineno=109)
DEBUG:numba.core.byteflow:stack ['$result168.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=246 nstack_initial=0), State(pc_initial=222 nstack_initial=0), State(pc_initial=240 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=246 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=246, inst=JUMP_ABSOLUTE(arg=47, lineno=85)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=222 nstack_initial=0), State(pc_initial=240 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=92 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=222 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=104)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_CONST(arg=2, lineno=104)
DEBUG:numba.core.byteflow:stack ['$i2222.0']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=INPLACE_ADD(arg=None, lineno=104)
DEBUG:numba.core.byteflow:stack ['$i2222.0', '$const224.1.2']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=STORE_FAST(arg=3, lineno=104)
DEBUG:numba.core.byteflow:stack ['$226inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_FAST(arg=1, lineno=105)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_FAST(arg=3, lineno=105)
DEBUG:numba.core.byteflow:stack ['$ar2230.3']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=BINARY_SUBSCR(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$ar2230.3', '$i2232.4']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=7, lineno=105)
DEBUG:numba.core.byteflow:stack ['$234binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_FORWARD(arg=3, lineno=105)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=246, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=246 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=246 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=140 nstack_initial=0): set(),
             State(pc_initial=148 nstack_initial=0): set(),
             State(pc_initial=166 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=206 nstack_initial=0): set(),
             State(pc_initial=214 nstack_initial=0): set(),
             State(pc_initial=222 nstack_initial=0): set(),
             State(pc_initial=240 nstack_initial=0): set(),
             State(pc_initial=246 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ar12.0'}), (4, {'item': '$ar12.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2.1'}), (8, {'index': '$const6.2.1', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$const10.4.1'}), (12, {'lhs': '$8binary_subscr.3', 'rhs': '$const10.4.1', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 30: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$ar216.0'}), (18, {'item': '$ar216.0', 'res': '$18load_attr.1'}), (20, {'res': '$const20.2.1'}), (22, {'index': '$const20.2.1', 'target': '$18load_attr.1', 'res': '$22binary_subscr.3'}), (24, {'res': '$const24.4.1'}), (26, {'lhs': '$22binary_subscr.3', 'rhs': '$const24.4.1', 'res': '$26compare_op.5'}), (28, {'pred': '$26compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 34: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$const30.0.1'}), (32, {'retval': '$const30.0.1', 'castval': '$32return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$const34.0.1'}), (36, {'value': '$const34.0.1'}), (38, {'res': '$const38.1.1'}), (40, {'value': '$const38.1.1'}), (42, {'res': '$ar142.2'}), (44, {'item': '$ar142.2', 'res': '$44load_attr.3'}), (46, {'res': '$const46.4.1'}), (48, {'index': '$const46.4.1', 'target': '$44load_attr.3', 'res': '$48binary_subscr.5'}), (50, {'res': '$const50.6.2'}), (52, {'lhs': '$48binary_subscr.5', 'rhs': '$const50.6.2', 'res': '$52binary_subtract.7'}), (54, {'value': '$52binary_subtract.7'}), (56, {'res': '$ar256.8'}), (58, {'item': '$ar256.8', 'res': '$58load_attr.9'}), (60, {'res': '$const60.10.1'}), (62, {'index': '$const60.10.1', 'target': '$58load_attr.9', 'res': '$62binary_subscr.11'}), (64, {'res': '$const64.12.2'}), (66, {'lhs': '$62binary_subscr.11', 'rhs': '$const64.12.2', 'res': '$66binary_subtract.13'}), (68, {'value': '$66binary_subtract.13'}), (70, {'res': '$ar170.14'}), (72, {'res': '$i172.15'}), (74, {'index': '$i172.15', 'target': '$ar170.14', 'res': '$74binary_subscr.16'}), (76, {'value': '$74binary_subscr.16'}), (78, {'res': '$ar278.17'}), (80, {'res': '$i280.18'}), (82, {'index': '$i280.18', 'target': '$ar278.17', 'res': '$82binary_subscr.19'}), (84, {'value': '$82binary_subscr.19'}), (86, {'res': '$const86.20.1'}), (88, {'value': '$const86.20.1'}), (90, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$j192.0'}), (94, {'res': '$j294.1'}), (96, {'lhs': '$j192.0', 'rhs': '$j294.1', 'res': '$96compare_op.2'}), (98, {'pred': '$96compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: (), 172: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$result100.0'}), (102, {'res': '$const102.1.2'}), (104, {'lhs': '$result100.0', 'rhs': '$const102.1.2', 'res': '$104inplace_add.2'}), (106, {'value': '$104inplace_add.2'}), (108, {'res': '$i1108.3'}), (110, {'res': '$limit1110.4'}), (112, {'lhs': '$i1108.3', 'rhs': '$limit1110.4', 'res': '$112compare_op.5'}), (114, {'pred': '$112compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 134: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$i1116.0'}), (118, {'res': '$const118.1.2'}), (120, {'lhs': '$i1116.0', 'rhs': '$const118.1.2', 'res': '$120inplace_add.2'}), (122, {'value': '$120inplace_add.2'}), (124, {'res': '$ar1124.3'}), (126, {'res': '$i1126.4'}), (128, {'index': '$i1126.4', 'target': '$ar1124.3', 'res': '$128binary_subscr.5'}), (130, {'value': '$128binary_subscr.5'}), (132, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={140: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {}), (136, {'res': '$result136.0'}), (138, {'retval': '$result136.0', 'castval': '$138return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=140 nstack_initial=0):
AdaptBlockInfo(insts=((140, {'res': '$i2140.0'}), (142, {'res': '$limit2142.1'}), (144, {'lhs': '$i2140.0', 'rhs': '$limit2142.1', 'res': '$144compare_op.2'}), (146, {'pred': '$144compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: (), 166: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=148 nstack_initial=0):
AdaptBlockInfo(insts=((148, {'res': '$i2148.0'}), (150, {'res': '$const150.1.2'}), (152, {'lhs': '$i2148.0', 'rhs': '$const150.1.2', 'res': '$152inplace_add.2'}), (154, {'value': '$152inplace_add.2'}), (156, {'res': '$ar2156.3'}), (158, {'res': '$i2158.4'}), (160, {'index': '$i2158.4', 'target': '$ar2156.3', 'res': '$160binary_subscr.5'}), (162, {'value': '$160binary_subscr.5'}), (164, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={246: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=166 nstack_initial=0):
AdaptBlockInfo(insts=((166, {}), (168, {'res': '$result168.0'}), (170, {'retval': '$result168.0', 'castval': '$170return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$j1172.0'}), (174, {'res': '$j2174.1'}), (176, {'lhs': '$j1172.0', 'rhs': '$j2174.1', 'res': '$176compare_op.2'}), (178, {'pred': '$176compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={180: (), 206: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {'res': '$i1180.0'}), (182, {'res': '$limit1182.1'}), (184, {'lhs': '$i1180.0', 'rhs': '$limit1182.1', 'res': '$184compare_op.2'}), (186, {'pred': '$184compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 206: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$i1188.0'}), (190, {'res': '$const190.1.2'}), (192, {'lhs': '$i1188.0', 'rhs': '$const190.1.2', 'res': '$192inplace_add.2'}), (194, {'value': '$192inplace_add.2'}), (196, {'res': '$ar1196.3'}), (198, {'res': '$i1198.4'}), (200, {'index': '$i1198.4', 'target': '$ar1196.3', 'res': '$200binary_subscr.5'}), (202, {'value': '$200binary_subscr.5'}), (204, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={246: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=206 nstack_initial=0):
AdaptBlockInfo(insts=((206, {'res': '$j2206.0'}), (208, {'res': '$j1208.1'}), (210, {'lhs': '$j2206.0', 'rhs': '$j1208.1', 'res': '$210compare_op.2'}), (212, {'pred': '$210compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={214: (), 240: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=214 nstack_initial=0):
AdaptBlockInfo(insts=((214, {'res': '$i2214.0'}), (216, {'res': '$limit2216.1'}), (218, {'lhs': '$i2214.0', 'rhs': '$limit2216.1', 'res': '$218compare_op.2'}), (220, {'pred': '$218compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={222: (), 240: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=222 nstack_initial=0):
AdaptBlockInfo(insts=((222, {'res': '$i2222.0'}), (224, {'res': '$const224.1.2'}), (226, {'lhs': '$i2222.0', 'rhs': '$const224.1.2', 'res': '$226inplace_add.2'}), (228, {'value': '$226inplace_add.2'}), (230, {'res': '$ar2230.3'}), (232, {'res': '$i2232.4'}), (234, {'index': '$i2232.4', 'target': '$ar2230.3', 'res': '$234binary_subscr.5'}), (236, {'value': '$234binary_subscr.5'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={246: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {}), (242, {'res': '$result242.0'}), (244, {'retval': '$result242.0', 'castval': '$244return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=246 nstack_initial=0):
AdaptBlockInfo(insts=((246, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ()})
DEBUG:numba.core.interpreter:label 0:
    ar1 = arg(0, name=ar1)                   ['ar1']
    ar2 = arg(1, name=ar2)                   ['ar2']
    $4load_attr.1 = getattr(value=ar1, attr=shape) ['$4load_attr.1', 'ar1']
    $const6.2.1 = const(int, 0)              ['$const6.2.1']
    $8binary_subscr.3 = getitem(value=$4load_attr.1, index=$const6.2.1, fn=<built-in function getitem>) ['$4load_attr.1', '$8binary_subscr.3', '$const6.2.1']
    $const10.4.1 = const(int, 0)             ['$const10.4.1']
    $12compare_op.5 = $8binary_subscr.3 == $const10.4.1 ['$12compare_op.5', '$8binary_subscr.3', '$const10.4.1']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 30, 16                   ['$14pred']
label 16:
    $18load_attr.1 = getattr(value=ar2, attr=shape) ['$18load_attr.1', 'ar2']
    $const20.2.1 = const(int, 0)             ['$const20.2.1']
    $22binary_subscr.3 = getitem(value=$18load_attr.1, index=$const20.2.1, fn=<built-in function getitem>) ['$18load_attr.1', '$22binary_subscr.3', '$const20.2.1']
    $const24.4.1 = const(int, 0)             ['$const24.4.1']
    $26compare_op.5 = $22binary_subscr.3 == $const24.4.1 ['$22binary_subscr.3', '$26compare_op.5', '$const24.4.1']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.5', '$28pred', 'bool28']
    branch $28pred, 30, 34                   ['$28pred']
label 30:
    $const30.0.1 = const(int, 0)             ['$const30.0.1']
    $32return_value.1 = cast(value=$const30.0.1) ['$32return_value.1', '$const30.0.1']
    return $32return_value.1                 ['$32return_value.1']
label 34:
    i1 = const(int, 0)                       ['i1']
    i2 = const(int, 0)                       ['i2']
    $44load_attr.3 = getattr(value=ar1, attr=shape) ['$44load_attr.3', 'ar1']
    $const46.4.1 = const(int, 0)             ['$const46.4.1']
    $48binary_subscr.5 = getitem(value=$44load_attr.3, index=$const46.4.1, fn=<built-in function getitem>) ['$44load_attr.3', '$48binary_subscr.5', '$const46.4.1']
    $const50.6.2 = const(int, 1)             ['$const50.6.2']
    limit1 = $48binary_subscr.5 - $const50.6.2 ['$48binary_subscr.5', '$const50.6.2', 'limit1']
    $58load_attr.9 = getattr(value=ar2, attr=shape) ['$58load_attr.9', 'ar2']
    $const60.10.1 = const(int, 0)            ['$const60.10.1']
    $62binary_subscr.11 = getitem(value=$58load_attr.9, index=$const60.10.1, fn=<built-in function getitem>) ['$58load_attr.9', '$62binary_subscr.11', '$const60.10.1']
    $const64.12.2 = const(int, 1)            ['$const64.12.2']
    limit2 = $62binary_subscr.11 - $const64.12.2 ['$62binary_subscr.11', '$const64.12.2', 'limit2']
    j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>) ['ar1', 'i1', 'j1']
    j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>) ['ar2', 'i2', 'j2']
    result = const(int, 0)                   ['result']
    jump 92                                  []
label 92:
    $96compare_op.2 = j1 == j2               ['$96compare_op.2', 'j1', 'j2']
    bool98 = global(bool: <class 'bool'>)    ['bool98']
    $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None) ['$96compare_op.2', '$98pred', 'bool98']
    branch $98pred, 100, 172                 ['$98pred']
label 100:
    $const102.1.2 = const(int, 1)            ['$const102.1.2']
    $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined) ['$104inplace_add.2', '$const102.1.2', 'result']
    result = $104inplace_add.2               ['$104inplace_add.2', 'result']
    $112compare_op.5 = i1 < limit1           ['$112compare_op.5', 'i1', 'limit1']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None) ['$112compare_op.5', '$114pred', 'bool114']
    branch $114pred, 116, 134                ['$114pred']
label 116:
    $const118.1.2 = const(int, 1)            ['$const118.1.2']
    $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined) ['$120inplace_add.2', '$const118.1.2', 'i1']
    i1 = $120inplace_add.2                   ['$120inplace_add.2', 'i1']
    j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>) ['ar1', 'i1', 'j1']
    jump 140                                 []
label 134:
    $138return_value.1 = cast(value=result)  ['$138return_value.1', 'result']
    return $138return_value.1                ['$138return_value.1']
label 140:
    $144compare_op.2 = i2 < limit2           ['$144compare_op.2', 'i2', 'limit2']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.2', '$146pred', 'bool146']
    branch $146pred, 148, 166                ['$146pred']
label 148:
    $const150.1.2 = const(int, 1)            ['$const150.1.2']
    $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined) ['$152inplace_add.2', '$const150.1.2', 'i2']
    i2 = $152inplace_add.2                   ['$152inplace_add.2', 'i2']
    j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>) ['ar2', 'i2', 'j2']
    jump 246                                 []
label 166:
    $170return_value.1 = cast(value=result)  ['$170return_value.1', 'result']
    return $170return_value.1                ['$170return_value.1']
label 172:
    $176compare_op.2 = j1 < j2               ['$176compare_op.2', 'j1', 'j2']
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None) ['$176compare_op.2', '$178pred', 'bool178']
    branch $178pred, 180, 206                ['$178pred']
label 180:
    $184compare_op.2 = i1 < limit1           ['$184compare_op.2', 'i1', 'limit1']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None) ['$184compare_op.2', '$186pred', 'bool186']
    branch $186pred, 188, 206                ['$186pred']
label 188:
    $const190.1.2 = const(int, 1)            ['$const190.1.2']
    $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined) ['$192inplace_add.2', '$const190.1.2', 'i1']
    i1 = $192inplace_add.2                   ['$192inplace_add.2', 'i1']
    j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>) ['ar1', 'i1', 'j1']
    jump 246                                 []
label 206:
    $210compare_op.2 = j2 < j1               ['$210compare_op.2', 'j1', 'j2']
    bool212 = global(bool: <class 'bool'>)   ['bool212']
    $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None) ['$210compare_op.2', '$212pred', 'bool212']
    branch $212pred, 214, 240                ['$212pred']
label 214:
    $218compare_op.2 = i2 < limit2           ['$218compare_op.2', 'i2', 'limit2']
    bool220 = global(bool: <class 'bool'>)   ['bool220']
    $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None) ['$218compare_op.2', '$220pred', 'bool220']
    branch $220pred, 222, 240                ['$220pred']
label 222:
    $const224.1.2 = const(int, 1)            ['$const224.1.2']
    $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined) ['$226inplace_add.2', '$const224.1.2', 'i2']
    i2 = $226inplace_add.2                   ['$226inplace_add.2', 'i2']
    j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>) ['ar2', 'i2', 'j2']
    jump 246                                 []
label 240:
    $244return_value.1 = cast(value=result)  ['$244return_value.1', 'result']
    return $244return_value.1                ['$244return_value.1']
label 246:
    jump 92                                  []

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block analysis pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block analysis pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block analysis pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block analysis pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block analysis pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block analysis pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block analysis pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block analysis pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block analysis pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$104inplace_add.2': [(<numba.core.ir.Assign object at 0x7f1590db3b20>,
                                    100)],
             '$112compare_op.5': [(<numba.core.ir.Assign object at 0x7f1590db3fa0>,
                                   100)],
             '$114pred': [(<numba.core.ir.Assign object at 0x7f1590dcc250>,
                           100)],
             '$120inplace_add.2': [(<numba.core.ir.Assign object at 0x7f1590dcc6a0>,
                                    116)],
             '$12compare_op.5': [(<numba.core.ir.Assign object at 0x7f1590eceb30>,
                                  0)],
             '$138return_value.1': [(<numba.core.ir.Assign object at 0x7f1590dccdf0>,
                                     134)],
             '$144compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590dcd2a0>,
                                   140)],
             '$146pred': [(<numba.core.ir.Assign object at 0x7f1590dcd510>,
                           140)],
             '$14pred': [(<numba.core.ir.Assign object at 0x7f1590ecfd60>, 0)],
             '$152inplace_add.2': [(<numba.core.ir.Assign object at 0x7f1590dcd9c0>,
                                    148)],
             '$170return_value.1': [(<numba.core.ir.Assign object at 0x7f1590dce110>,
                                     166)],
             '$176compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590dce5c0>,
                                   172)],
             '$178pred': [(<numba.core.ir.Assign object at 0x7f1590dce830>,
                           172)],
             '$184compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590dcec80>,
                                   180)],
             '$186pred': [(<numba.core.ir.Assign object at 0x7f1590dceef0>,
                           180)],
             '$18load_attr.1': [(<numba.core.ir.Assign object at 0x7f1590ecd2d0>,
                                 16)],
             '$192inplace_add.2': [(<numba.core.ir.Assign object at 0x7f1590dcf3a0>,
                                    188)],
             '$210compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590dcfc40>,
                                   206)],
             '$212pred': [(<numba.core.ir.Assign object at 0x7f1590dcfeb0>,
                           206)],
             '$218compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590dd8340>,
                                   214)],
             '$220pred': [(<numba.core.ir.Assign object at 0x7f1590dd85b0>,
                           214)],
             '$226inplace_add.2': [(<numba.core.ir.Assign object at 0x7f1590dd8a60>,
                                    222)],
             '$22binary_subscr.3': [(<numba.core.ir.Assign object at 0x7f1590dda890>,
                                     16)],
             '$244return_value.1': [(<numba.core.ir.Assign object at 0x7f1590dd91b0>,
                                     240)],
             '$26compare_op.5': [(<numba.core.ir.Assign object at 0x7f1590ecd900>,
                                  16)],
             '$28pred': [(<numba.core.ir.Assign object at 0x7f1590ec3f40>, 16)],
             '$32return_value.1': [(<numba.core.ir.Assign object at 0x7f1590d1e710>,
                                    30)],
             '$44load_attr.3': [(<numba.core.ir.Assign object at 0x7f1590d1c640>,
                                 34)],
             '$48binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1590ddac50>,
                                     34)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7f1590e738b0>,
                                0)],
             '$58load_attr.9': [(<numba.core.ir.Assign object at 0x7f1590ed2e90>,
                                 34)],
             '$62binary_subscr.11': [(<numba.core.ir.Assign object at 0x7f1590ddaad0>,
                                      34)],
             '$8binary_subscr.3': [(<numba.core.ir.Assign object at 0x7f1590dda740>,
                                    0)],
             '$96compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590db2e90>,
                                  92)],
             '$98pred': [(<numba.core.ir.Assign object at 0x7f1590db3670>, 92)],
             '$const10.4.1': [(<numba.core.ir.Assign object at 0x7f1590ecd990>,
                               0)],
             '$const102.1.2': [(<numba.core.ir.Assign object at 0x7f1590db3970>,
                                100)],
             '$const118.1.2': [(<numba.core.ir.Assign object at 0x7f1590dcc4f0>,
                                116)],
             '$const150.1.2': [(<numba.core.ir.Assign object at 0x7f1590dcd810>,
                                148)],
             '$const190.1.2': [(<numba.core.ir.Assign object at 0x7f1590dcf1f0>,
                                188)],
             '$const20.2.1': [(<numba.core.ir.Assign object at 0x7f1590ecd450>,
                               16)],
             '$const224.1.2': [(<numba.core.ir.Assign object at 0x7f1590dd88b0>,
                                222)],
             '$const24.4.1': [(<numba.core.ir.Assign object at 0x7f1590ecec80>,
                               16)],
             '$const30.0.1': [(<numba.core.ir.Assign object at 0x7f1590d1f790>,
                               30)],
             '$const46.4.1': [(<numba.core.ir.Assign object at 0x7f1590d1f220>,
                               34)],
             '$const50.6.2': [(<numba.core.ir.Assign object at 0x7f1590f2d450>,
                               34)],
             '$const6.2.1': [(<numba.core.ir.Assign object at 0x7f1590e73700>,
                              0)],
             '$const60.10.1': [(<numba.core.ir.Assign object at 0x7f1590d9d840>,
                                34)],
             '$const64.12.2': [(<numba.core.ir.Assign object at 0x7f1590db24d0>,
                                34)],
             'ar1': [(<numba.core.ir.Assign object at 0x7f1590d12050>, 0)],
             'ar2': [(<numba.core.ir.Assign object at 0x7f1590d116f0>, 0)],
             'bool114': [(<numba.core.ir.Assign object at 0x7f1590dcc130>,
                          100)],
             'bool14': [(<numba.core.ir.Assign object at 0x7f1590ecf0d0>, 0)],
             'bool146': [(<numba.core.ir.Assign object at 0x7f1590dcd3f0>,
                          140)],
             'bool178': [(<numba.core.ir.Assign object at 0x7f1590dce710>,
                          172)],
             'bool186': [(<numba.core.ir.Assign object at 0x7f1590dcedd0>,
                          180)],
             'bool212': [(<numba.core.ir.Assign object at 0x7f1590dcfd90>,
                          206)],
             'bool220': [(<numba.core.ir.Assign object at 0x7f1590dd8490>,
                          214)],
             'bool28': [(<numba.core.ir.Assign object at 0x7f1590d37340>, 16)],
             'bool98': [(<numba.core.ir.Assign object at 0x7f1590db3550>, 92)],
             'i1': [(<numba.core.ir.Assign object at 0x7f1590d1e8c0>, 34),
                    (<numba.core.ir.Assign object at 0x7f1590dcc760>, 116),
                    (<numba.core.ir.Assign object at 0x7f1590dcf460>, 188)],
             'i2': [(<numba.core.ir.Assign object at 0x7f1590d1d870>, 34),
                    (<numba.core.ir.Assign object at 0x7f1590dcda80>, 148),
                    (<numba.core.ir.Assign object at 0x7f1590dd8b20>, 222)],
             'j1': [(<numba.core.ir.Assign object at 0x7f1590db2b60>, 34),
                    (<numba.core.ir.Assign object at 0x7f1590dccb20>, 116),
                    (<numba.core.ir.Assign object at 0x7f1590dcf820>, 188)],
             'j2': [(<numba.core.ir.Assign object at 0x7f1590db3040>, 34),
                    (<numba.core.ir.Assign object at 0x7f1590dcde40>, 148),
                    (<numba.core.ir.Assign object at 0x7f1590dd8ee0>, 222)],
             'limit1': [(<numba.core.ir.Assign object at 0x7f1590eb7a60>, 34)],
             'limit2': [(<numba.core.ir.Assign object at 0x7f1590db2680>, 34)],
             'result': [(<numba.core.ir.Assign object at 0x7f1590db32b0>, 34),
                        (<numba.core.ir.Assign object at 0x7f1590db3be0>,
                         100)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590d13e50>
DEBUG:numba.core.ssa:Fix SSA violator on var i1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:first assign: i1
DEBUG:numba.core.ssa:replaced with: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1 = $120inplace_add.2
DEBUG:numba.core.ssa:replaced with: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1 = $192inplace_add.2
DEBUG:numba.core.ssa:replaced with: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x7f1590ef2380>],
             116: [<numba.core.ir.Assign object at 0x7f1590ef16f0>],
             188: [<numba.core.ir.Assign object at 0x7f1590dda5f0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i1' stmt=j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1 < limit1
DEBUG:numba.core.ssa:find_def var='i1' stmt=$112compare_op.5 = i1 < limit1
DEBUG:numba.core.ssa:find_def_from_top label 100
DEBUG:numba.core.ssa:idom 92 from label 100
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:insert phi node i1.3 = phi(incoming_values=[], incoming_blocks=[]) at 92
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def i1 = const(int, 0)
DEBUG:numba.core.ssa:find_def_from_bottom label 246
DEBUG:numba.core.ssa:find_def_from_top label 246
DEBUG:numba.core.ssa:insert phi node i1.4 = phi(incoming_values=[], incoming_blocks=[]) at 246
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:incoming_def i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 140 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 116 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:incoming_def i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 222
DEBUG:numba.core.ssa:find_def_from_top label 222
DEBUG:numba.core.ssa:idom 214 from label 222
DEBUG:numba.core.ssa:find_def_from_bottom label 214
DEBUG:numba.core.ssa:find_def_from_top label 214
DEBUG:numba.core.ssa:idom 206 from label 214
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:incoming_def i1.3 = phi(incoming_values=[Var(i1, sparse.py:76)], incoming_blocks=[34])
DEBUG:numba.core.ssa:incoming_def i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:replaced with: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='i1' stmt=$120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 100 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:find_def_from_top label 100
DEBUG:numba.core.ssa:idom 92 from label 100
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i1' stmt=j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1 < limit1
DEBUG:numba.core.ssa:find_def var='i1' stmt=$184compare_op.2 = i1 < limit1
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 172 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='i1' stmt=$192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 180 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 172 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i1' stmt=j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j1 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Fix SSA violator on var i2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:first assign: i2
DEBUG:numba.core.ssa:replaced with: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $152inplace_add.2
DEBUG:numba.core.ssa:replaced with: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2 = $226inplace_add.2
DEBUG:numba.core.ssa:replaced with: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef0a00>
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x7f1590ef1840>],
             148: [<numba.core.ir.Assign object at 0x7f1590ef28c0>],
             222: [<numba.core.ir.Assign object at 0x7f1590dd9540>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i2' stmt=j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:find_def var='i2' stmt=$144compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 116 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 100 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:find_def_from_top label 100
DEBUG:numba.core.ssa:idom 92 from label 100
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:insert phi node i2.3 = phi(incoming_values=[], incoming_blocks=[]) at 92
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def i2 = const(int, 0)
DEBUG:numba.core.ssa:find_def_from_bottom label 246
DEBUG:numba.core.ssa:find_def_from_top label 246
DEBUG:numba.core.ssa:insert phi node i2.4 = phi(incoming_values=[], incoming_blocks=[]) at 246
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 180 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 172 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:incoming_def i2.3 = phi(incoming_values=[Var(i2, sparse.py:77)], incoming_blocks=[34])
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:incoming_def i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 222
DEBUG:numba.core.ssa:incoming_def i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:incoming_def i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:replaced with: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='i2' stmt=$152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 140 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 116 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 100 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:find_def_from_top label 100
DEBUG:numba.core.ssa:idom 92 from label 100
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i2' stmt=j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j2 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:find_def var='i2' stmt=$218compare_op.2 = i2 < limit2
DEBUG:numba.core.ssa:find_def_from_top label 214
DEBUG:numba.core.ssa:idom 206 from label 214
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='i2' stmt=$226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 222
DEBUG:numba.core.ssa:idom 214 from label 222
DEBUG:numba.core.ssa:find_def_from_bottom label 214
DEBUG:numba.core.ssa:find_def_from_top label 214
DEBUG:numba.core.ssa:idom 206 from label 214
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i2' stmt=j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Fix SSA violator on var j1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:first assign: j1
DEBUG:numba.core.ssa:replaced with: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: i2.3 = phi(incoming_values=[Var(i2, sparse.py:77), Var(i2.4, sparse.py:94)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x7f1590ef0940>],
             116: [<numba.core.ir.Assign object at 0x7f1590ef1510>],
             188: [<numba.core.ir.Assign object at 0x7f1590ddb610>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: i2.3 = phi(incoming_values=[Var(i2, sparse.py:77), Var(i2.4, sparse.py:94)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:find_def var='j1' stmt=$96compare_op.2 = j1 == j2
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:insert phi node j1.3 = phi(incoming_values=[], incoming_blocks=[]) at 92
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 246
DEBUG:numba.core.ssa:find_def_from_top label 246
DEBUG:numba.core.ssa:insert phi node j1.4 = phi(incoming_values=[], incoming_blocks=[]) at 246
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:incoming_def j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 140 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 116 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:incoming_def j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 222
DEBUG:numba.core.ssa:find_def_from_top label 222
DEBUG:numba.core.ssa:idom 214 from label 222
DEBUG:numba.core.ssa:find_def_from_bottom label 214
DEBUG:numba.core.ssa:find_def_from_top label 214
DEBUG:numba.core.ssa:idom 206 from label 214
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:incoming_def j1.3 = phi(incoming_values=[Var(j1, sparse.py:80)], incoming_blocks=[34])
DEBUG:numba.core.ssa:incoming_def j1.4 = phi(incoming_values=[Var(j1.2, sparse.py:102), Var(j1.1, sparse.py:90), Var(j1.3, sparse.py:86)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:replaced with: $96compare_op.2 = j1.3 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:find_def var='j1' stmt=$176compare_op.2 = j1 < j2
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $176compare_op.2 = j1.3 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:find_def var='j1' stmt=$210compare_op.2 = j2 < j1
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $210compare_op.2 = j2 < j1.3
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Fix SSA violator on var j2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:first assign: j2
DEBUG:numba.core.ssa:replaced with: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: j1.3 = phi(incoming_values=[Var(j1, sparse.py:80), Var(j1.4, sparse.py:86)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i2.3 = phi(incoming_values=[Var(i2, sparse.py:77), Var(i2.4, sparse.py:94)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1.3 == j2
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j2.1 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1.3 < j2
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1.3
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: j2.2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590d12fb0>
DEBUG:numba.core.ssa:on stmt: j1.4 = phi(incoming_values=[Var(j1.2, sparse.py:102), Var(j1.1, sparse.py:90), Var(j1.3, sparse.py:86)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x7f1590ef0670>],
             148: [<numba.core.ir.Assign object at 0x7f1590dda770>],
             222: [<numba.core.ir.Assign object at 0x7f1590ddbd60>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: j1.3 = phi(incoming_values=[Var(j1, sparse.py:80), Var(j1.4, sparse.py:86)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i2.3 = phi(incoming_values=[Var(i2, sparse.py:77), Var(i2.4, sparse.py:94)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1.3 == j2
DEBUG:numba.core.ssa:find_def var='j2' stmt=$96compare_op.2 = j1.3 == j2
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:insert phi node j2.3 = phi(incoming_values=[], incoming_blocks=[]) at 92
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 246
DEBUG:numba.core.ssa:find_def_from_top label 246
DEBUG:numba.core.ssa:insert phi node j2.4 = phi(incoming_values=[], incoming_blocks=[]) at 246
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 180 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 172 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:incoming_def j2.3 = phi(incoming_values=[Var(j2, sparse.py:81)], incoming_blocks=[34])
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:incoming_def j2.1 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 222
DEBUG:numba.core.ssa:incoming_def j2.2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:incoming_def j2.4 = phi(incoming_values=[Var(j2.3, sparse.py:86), Var(j2.1, sparse.py:96), Var(j2.2, sparse.py:105)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:replaced with: $96compare_op.2 = j1.3 == j2.3
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2.1 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1.3 < j2
DEBUG:numba.core.ssa:find_def var='j2' stmt=$176compare_op.2 = j1.3 < j2
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $176compare_op.2 = j1.3 < j2.3
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2 < j1.3
DEBUG:numba.core.ssa:find_def var='j2' stmt=$210compare_op.2 = j2 < j1.3
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $210compare_op.2 = j2.3 < j1.3
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2.2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: j1.4 = phi(incoming_values=[Var(j1.2, sparse.py:102), Var(j1.1, sparse.py:90), Var(j1.3, sparse.py:86)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: j2.3 = phi(incoming_values=[Var(j2, sparse.py:81), Var(j2.4, sparse.py:86)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: j1.3 = phi(incoming_values=[Var(j1, sparse.py:80), Var(j1.4, sparse.py:86)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i2.3 = phi(incoming_values=[Var(i2, sparse.py:77), Var(i2.4, sparse.py:94)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1.3 == j2.3
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $104inplace_add.2
DEBUG:numba.core.ssa:replaced with: result.1 = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2.1 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1.3 < j2.3
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2.3 < j1.3
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2.2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590ddbdf0>
DEBUG:numba.core.ssa:on stmt: j2.4 = phi(incoming_values=[Var(j2.3, sparse.py:86), Var(j2.1, sparse.py:96), Var(j2.2, sparse.py:105)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: j1.4 = phi(incoming_values=[Var(j1.2, sparse.py:102), Var(j1.1, sparse.py:90), Var(j1.3, sparse.py:86)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x7f1590dd98a0>],
             100: [<numba.core.ir.Assign object at 0x7f1590dda380>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: ar1 = arg(0, name=ar1)
DEBUG:numba.core.ssa:on stmt: ar2 = arg(1, name=ar2)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.3 = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const10.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = $8binary_subscr.3 == $const10.4.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 30, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const20.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.3 = static_getitem(value=$18load_attr.1, index=0, index_var=$const20.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const24.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.5 = $22binary_subscr.3 == $const24.4.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.5, func=bool28, args=(Var($26compare_op.5, sparse.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const30.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$const30.0.1)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: i1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: i2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44load_attr.3 = getattr(value=ar1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = static_getitem(value=$44load_attr.3, index=0, index_var=$const46.4.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const50.6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit1 = $48binary_subscr.5 - $const50.6.2
DEBUG:numba.core.ssa:on stmt: $58load_attr.9 = getattr(value=ar2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const60.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.11 = static_getitem(value=$58load_attr.9, index=0, index_var=$const60.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const64.12.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: limit2 = $62binary_subscr.11 - $const64.12.2
DEBUG:numba.core.ssa:on stmt: j1 = getitem(value=ar1, index=i1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: j2 = getitem(value=ar2, index=i2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: result = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: j2.3 = phi(incoming_values=[Var(j2, sparse.py:81), Var(j2.4, sparse.py:86)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: j1.3 = phi(incoming_values=[Var(j1, sparse.py:80), Var(j1.4, sparse.py:86)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i2.3 = phi(incoming_values=[Var(i2, sparse.py:77), Var(i2.4, sparse.py:94)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: i1.3 = phi(incoming_values=[Var(i1, sparse.py:76), Var(i1.4, sparse.py:87)], incoming_blocks=[34, 246])
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = j1.3 == j2.3
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, sparse.py:86),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const102.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 100
DEBUG:numba.core.ssa:idom 92 from label 100
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 92
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def result = const(int, 0)
DEBUG:numba.core.ssa:find_def_from_bottom label 246
DEBUG:numba.core.ssa:find_def_from_top label 246
DEBUG:numba.core.ssa:insert phi node result.3 = phi(incoming_values=[], incoming_blocks=[]) at 246
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 180 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 172 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:incoming_def result.2 = phi(incoming_values=[Var(result, sparse.py:83)], incoming_blocks=[34])
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 140 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 116 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 100 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:incoming_def result.1 = $104inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 222
DEBUG:numba.core.ssa:find_def_from_top label 222
DEBUG:numba.core.ssa:idom 214 from label 222
DEBUG:numba.core.ssa:find_def_from_bottom label 214
DEBUG:numba.core.ssa:find_def_from_top label 214
DEBUG:numba.core.ssa:idom 206 from label 214
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:incoming_def result.2 = phi(incoming_values=[Var(result, sparse.py:83)], incoming_blocks=[34])
DEBUG:numba.core.ssa:incoming_def result.3 = phi(incoming_values=[Var(result.2, sparse.py:87), Var(result.1, sparse.py:87), Var(result.2, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:replaced with: $104inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$const102.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $104inplace_add.2
DEBUG:numba.core.ssa:on stmt: $112compare_op.5 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.5, func=bool114, args=(Var($112compare_op.5, sparse.py:88),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const118.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const118.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.1 = $120inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.1 = getitem(value=ar1, index=i1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def var='result' stmt=$138return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def_from_top label 134
DEBUG:numba.core.ssa:idom 100 from label 134
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:replaced with: $138return_value.1 = cast(value=result.1)
DEBUG:numba.core.ssa:on stmt: return $138return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $144compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144compare_op.2, func=bool146, args=(Var($144compare_op.2, sparse.py:94),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 166
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const150.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $152inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const150.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.1 = $152inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2.1 = getitem(value=ar2, index=i2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 166
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def var='result' stmt=$170return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def_from_top label 166
DEBUG:numba.core.ssa:idom 140 from label 166
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 116 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 100 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:replaced with: $170return_value.1 = cast(value=result.1)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = j1.3 < j2.3
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $184compare_op.2 = i1.3 < limit1
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.2, func=bool186, args=(Var($184compare_op.2, sparse.py:100),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const190.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $192inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i1.3, rhs=$const190.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i1.2 = $192inplace_add.2
DEBUG:numba.core.ssa:on stmt: j1.2 = getitem(value=ar1, index=i1.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $210compare_op.2 = j2.3 < j1.3
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.2, func=bool212, args=(Var($210compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $218compare_op.2 = i2.3 < limit2
DEBUG:numba.core.ssa:on stmt: bool220 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $220pred = call bool220($218compare_op.2, func=bool220, args=(Var($218compare_op.2, sparse.py:103),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $220pred, 222, 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 222
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $const224.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $226inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i2.3, rhs=$const224.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i2.2 = $226inplace_add.2
DEBUG:numba.core.ssa:on stmt: j2.2 = getitem(value=ar2, index=i2.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: jump 246
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: $244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def var='result' stmt=$244return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def_from_top label 240
DEBUG:numba.core.ssa:idom 206 from label 240
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:find_def_from_top label 206
DEBUG:numba.core.ssa:idom 172 from label 206
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 92 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:replaced with: $244return_value.1 = cast(value=result.2)
DEBUG:numba.core.ssa:on stmt: return $244return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590ef1690>
DEBUG:numba.core.ssa:on stmt: j2.4 = phi(incoming_values=[Var(j2.3, sparse.py:86), Var(j2.1, sparse.py:96), Var(j2.2, sparse.py:105)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: j1.4 = phi(incoming_values=[Var(j1.2, sparse.py:102), Var(j1.1, sparse.py:90), Var(j1.3, sparse.py:86)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i2.4 = phi(incoming_values=[Var(i2.3, sparse.py:94), Var(i2.1, sparse.py:95), Var(i2.2, sparse.py:104)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: i1.4 = phi(incoming_values=[Var(i1.2, sparse.py:101), Var(i1.1, sparse.py:89), Var(i1.3, sparse.py:87)], incoming_blocks=[188, 148, 222])
DEBUG:numba.core.ssa:on stmt: jump 92
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=385)
           2	LOAD_GLOBAL(arg=0, lineno=405)
           4	LOAD_FAST(arg=0, lineno=405)
           6	LOAD_FAST(arg=1, lineno=405)
           8	LOAD_FAST(arg=2, lineno=405)
          10	LOAD_FAST(arg=3, lineno=405)
          12	CALL_FUNCTION(arg=4, lineno=405)
          14	UNPACK_SEQUENCE(arg=2, lineno=405)
          16	STORE_FAST(arg=4, lineno=405)
          18	STORE_FAST(arg=5, lineno=405)
          20	LOAD_CONST(arg=1, lineno=406)
          22	STORE_FAST(arg=6, lineno=406)
          24	LOAD_GLOBAL(arg=1, lineno=407)
          26	LOAD_FAST(arg=5, lineno=407)
          28	CALL_FUNCTION(arg=1, lineno=407)
          30	STORE_FAST(arg=7, lineno=407)
          32	LOAD_GLOBAL(arg=2, lineno=408)
          34	LOAD_FAST(arg=7, lineno=408)
          36	CALL_FUNCTION(arg=1, lineno=408)
          38	GET_ITER(arg=None, lineno=408)
>         40	FOR_ITER(arg=12, lineno=408)
          42	STORE_FAST(arg=8, lineno=408)
          44	LOAD_FAST(arg=6, lineno=409)
          46	LOAD_FAST(arg=5, lineno=409)
          48	LOAD_FAST(arg=8, lineno=409)
          50	BINARY_SUBSCR(arg=None, lineno=409)
          52	LOAD_FAST(arg=5, lineno=409)
          54	LOAD_FAST(arg=8, lineno=409)
          56	BINARY_SUBSCR(arg=None, lineno=409)
          58	BINARY_MULTIPLY(arg=None, lineno=409)
          60	INPLACE_ADD(arg=None, lineno=409)
          62	STORE_FAST(arg=6, lineno=409)
          64	JUMP_ABSOLUTE(arg=21, lineno=409)
>         66	LOAD_FAST(arg=6, lineno=410)
          68	RETURN_VALUE(arg=None, lineno=410)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=385)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=405)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=405)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=405)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=405)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$data16.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=3, lineno=405)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$data16.2', '$ind28.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_FUNCTION(arg=4, lineno=405)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$data16.2', '$ind28.3', '$data210.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=UNPACK_SEQUENCE(arg=2, lineno=405)
DEBUG:numba.core.byteflow:stack ['$12call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=4, lineno=405)
DEBUG:numba.core.byteflow:stack ['$14unpack_sequence.7', '$14unpack_sequence.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=5, lineno=405)
DEBUG:numba.core.byteflow:stack ['$14unpack_sequence.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=1, lineno=406)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=6, lineno=406)
DEBUG:numba.core.byteflow:stack ['$const20.9.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_GLOBAL(arg=1, lineno=407)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=407)
DEBUG:numba.core.byteflow:stack ['$24load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=407)
DEBUG:numba.core.byteflow:stack ['$24load_global.10', '$aux_data26.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=7, lineno=407)
DEBUG:numba.core.byteflow:stack ['$28call_function.12']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_GLOBAL(arg=2, lineno=408)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=7, lineno=408)
DEBUG:numba.core.byteflow:stack ['$32load_global.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=CALL_FUNCTION(arg=1, lineno=408)
DEBUG:numba.core.byteflow:stack ['$32load_global.13', '$dim34.14']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=GET_ITER(arg=None, lineno=408)
DEBUG:numba.core.byteflow:stack ['$36call_function.15']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=('$38get_iter.16',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi40.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=40 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=40, inst=FOR_ITER(arg=12, lineno=408)
DEBUG:numba.core.byteflow:stack ['$phi40.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=66, stack=(), blockstack=(), npush=0), Edge(pc=42, stack=('$phi40.0', '$40for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=42 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=66 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=410)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=RETURN_VALUE(arg=None, lineno=410)
DEBUG:numba.core.byteflow:stack ['$result66.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi42.0', '$phi42.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=42 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=8, lineno=408)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$phi42.1']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=6, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=5, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=8, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$aux_data46.3']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$aux_data46.3', '$i48.4']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=5, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$50binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=8, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$50binary_subscr.5', '$aux_data52.6']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$50binary_subscr.5', '$aux_data52.6', '$i54.7']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=BINARY_MULTIPLY(arg=None, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$50binary_subscr.5', '$56binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=INPLACE_ADD(arg=None, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$58binary_multiply.9']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_FAST(arg=6, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$60inplace_add.10']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=JUMP_ABSOLUTE(arg=21, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=('$phi42.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=1): {'$phi40.0'},
             State(pc_initial=42 nstack_initial=2): {'$phi42.1'},
             State(pc_initial=66 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi40.0': State(pc_initial=0 nstack_initial=0),
 '$phi42.1': State(pc_initial=40 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi42.0', State(pc_initial=42 nstack_initial=2))},
             '$phi42.0': {('$phi40.0', State(pc_initial=40 nstack_initial=1))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi40.0', State(pc_initial=40 nstack_initial=1))},
             '$phi42.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi40.0': {('$38get_iter.16', State(pc_initial=0 nstack_initial=0))},
 '$phi42.1': {('$40for_iter.2', State(pc_initial=40 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi40.0': '$38get_iter.16'},
             State(pc_initial=40 nstack_initial=1): {'$phi42.1': '$40for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$ind14.1'}), (6, {'res': '$data16.2'}), (8, {'res': '$ind28.3'}), (10, {'res': '$data210.4'}), (12, {'func': '$2load_global.0', 'args': ['$ind14.1', '$data16.2', '$ind28.3', '$data210.4'], 'res': '$12call_function.5'}), (14, {'iterable': '$12call_function.5', 'stores': ['$14unpack_sequence.6', '$14unpack_sequence.7'], 'tupleobj': '$14unpack_sequence.8'}), (16, {'value': '$14unpack_sequence.6'}), (18, {'value': '$14unpack_sequence.7'}), (20, {'res': '$const20.9.1'}), (22, {'value': '$const20.9.1'}), (24, {'res': '$24load_global.10'}), (26, {'res': '$aux_data26.11'}), (28, {'func': '$24load_global.10', 'args': ['$aux_data26.11'], 'res': '$28call_function.12'}), (30, {'value': '$28call_function.12'}), (32, {'res': '$32load_global.13'}), (34, {'res': '$dim34.14'}), (36, {'func': '$32load_global.13', 'args': ['$dim34.14'], 'res': '$36call_function.15'}), (38, {'value': '$36call_function.15', 'res': '$38get_iter.16'})), outgoing_phis={'$phi40.0': '$38get_iter.16'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ('$38get_iter.16',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=1):
AdaptBlockInfo(insts=((40, {'iterator': '$phi40.0', 'pair': '$40for_iter.1', 'indval': '$40for_iter.2', 'pred': '$40for_iter.3'}),), outgoing_phis={'$phi42.1': '$40for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={66: (), 42: ('$phi40.0', '$40for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=2):
AdaptBlockInfo(insts=((42, {'value': '$phi42.1'}), (44, {'res': '$result44.2'}), (46, {'res': '$aux_data46.3'}), (48, {'res': '$i48.4'}), (50, {'index': '$i48.4', 'target': '$aux_data46.3', 'res': '$50binary_subscr.5'}), (52, {'res': '$aux_data52.6'}), (54, {'res': '$i54.7'}), (56, {'index': '$i54.7', 'target': '$aux_data52.6', 'res': '$56binary_subscr.8'}), (58, {'lhs': '$50binary_subscr.5', 'rhs': '$56binary_subscr.8', 'res': '$58binary_multiply.9'}), (60, {'lhs': '$result44.2', 'rhs': '$58binary_multiply.9', 'res': '$60inplace_add.10'}), (62, {'value': '$60inplace_add.10'}), (64, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ('$phi42.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$result66.0'}), (68, {'retval': '$result66.0', 'castval': '$68return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    ind1 = arg(0, name=ind1)                 ['ind1']
    data1 = arg(1, name=data1)               ['data1']
    ind2 = arg(2, name=ind2)                 ['ind2']
    data2 = arg(3, name=data2)               ['data2']
    $2load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>)) ['$2load_global.0']
    $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:385), Var(data1, sparse.py:385), Var(ind2, sparse.py:385), Var(data2, sparse.py:385)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.5', '$2load_global.0', 'data1', 'data2', 'ind1', 'ind2']
    $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2) ['$12call_function.5', '$14unpack_sequence.8']
    $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>) ['$14unpack_sequence.6', '$14unpack_sequence.8']
    $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>) ['$14unpack_sequence.7', '$14unpack_sequence.8']
    _ = $14unpack_sequence.6                 ['$14unpack_sequence.6', '_']
    aux_data = $14unpack_sequence.7          ['$14unpack_sequence.7', 'aux_data']
    result = const(float, 0.0)               ['result']
    $24load_global.10 = global(len: <built-in function len>) ['$24load_global.10']
    dim = call $24load_global.10(aux_data, func=$24load_global.10, args=[Var(aux_data, sparse.py:405)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.10', 'aux_data', 'dim']
    $32load_global.13 = global(range: <class 'range'>) ['$32load_global.13']
    $36call_function.15 = call $32load_global.13(dim, func=$32load_global.13, args=[Var(dim, sparse.py:407)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.13', '$36call_function.15', 'dim']
    $38get_iter.16 = getiter(value=$36call_function.15) ['$36call_function.15', '$38get_iter.16']
    $phi40.0 = $38get_iter.16                ['$38get_iter.16', '$phi40.0']
    jump 40                                  []
label 40:
    $40for_iter.1 = iternext(value=$phi40.0) ['$40for_iter.1', '$phi40.0']
    $40for_iter.2 = pair_first(value=$40for_iter.1) ['$40for_iter.1', '$40for_iter.2']
    $40for_iter.3 = pair_second(value=$40for_iter.1) ['$40for_iter.1', '$40for_iter.3']
    $phi42.1 = $40for_iter.2                 ['$40for_iter.2', '$phi42.1']
    branch $40for_iter.3, 42, 66             ['$40for_iter.3']
label 42:
    i = $phi42.1                             ['$phi42.1', 'i']
    $50binary_subscr.5 = getitem(value=aux_data, index=i, fn=<built-in function getitem>) ['$50binary_subscr.5', 'aux_data', 'i']
    $56binary_subscr.8 = getitem(value=aux_data, index=i, fn=<built-in function getitem>) ['$56binary_subscr.8', 'aux_data', 'i']
    $58binary_multiply.9 = $50binary_subscr.5 * $56binary_subscr.8 ['$50binary_subscr.5', '$56binary_subscr.8', '$58binary_multiply.9']
    $60inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$58binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined) ['$58binary_multiply.9', '$60inplace_add.10', 'result']
    result = $60inplace_add.10               ['$60inplace_add.10', 'result']
    jump 40                                  []
label 66:
    $68return_value.1 = cast(value=result)   ['$68return_value.1', 'result']
    return $68return_value.1                 ['$68return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13820>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:385), Var(data1, sparse.py:385), Var(ind2, sparse.py:385), Var(data2, sparse.py:385)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: aux_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $24load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: dim = call $24load_global.10(aux_data, func=$24load_global.10, args=[Var(aux_data, sparse.py:405)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_global.13 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $36call_function.15 = call $32load_global.13(dim, func=$32load_global.13, args=[Var(dim, sparse.py:407)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38get_iter.16 = getiter(value=$36call_function.15)
DEBUG:numba.core.ssa:on stmt: $phi40.0 = $38get_iter.16
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block analysis pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13820>
DEBUG:numba.core.ssa:on stmt: $40for_iter.1 = iternext(value=$phi40.0)
DEBUG:numba.core.ssa:on stmt: $40for_iter.2 = pair_first(value=$40for_iter.1)
DEBUG:numba.core.ssa:on stmt: $40for_iter.3 = pair_second(value=$40for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi42.1 = $40for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $40for_iter.3, 42, 66
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13820>
DEBUG:numba.core.ssa:on stmt: i = $phi42.1
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.5 = getitem(value=aux_data, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.8 = getitem(value=aux_data, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_multiply.9 = $50binary_subscr.5 * $56binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $60inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$58binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $60inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block analysis pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590d13820>
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12call_function.5': [(<numba.core.ir.Assign object at 0x7f1590db2230>,
                                     0)],
             '$14unpack_sequence.6': [(<numba.core.ir.Assign object at 0x7f1590de6b00>,
                                       0)],
             '$14unpack_sequence.7': [(<numba.core.ir.Assign object at 0x7f1590de69e0>,
                                       0)],
             '$14unpack_sequence.8': [(<numba.core.ir.Assign object at 0x7f1590db1a50>,
                                       0)],
             '$24load_global.10': [(<numba.core.ir.Assign object at 0x7f1590e006a0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7f1590d9c370>,
                                  0)],
             '$32load_global.13': [(<numba.core.ir.Assign object at 0x7f1590c6cf10>,
                                    0)],
             '$36call_function.15': [(<numba.core.ir.Assign object at 0x7f1590c6d210>,
                                      0)],
             '$38get_iter.16': [(<numba.core.ir.Assign object at 0x7f1590c6d330>,
                                 0)],
             '$40for_iter.1': [(<numba.core.ir.Assign object at 0x7f1590c6d390>,
                                40)],
             '$40for_iter.2': [(<numba.core.ir.Assign object at 0x7f1590c6d4e0>,
                                40)],
             '$40for_iter.3': [(<numba.core.ir.Assign object at 0x7f1590c6d600>,
                                40)],
             '$50binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1590c6dde0>,
                                     42)],
             '$56binary_subscr.8': [(<numba.core.ir.Assign object at 0x7f1590c6e1a0>,
                                     42)],
             '$58binary_multiply.9': [(<numba.core.ir.Assign object at 0x7f1590c6e320>,
                                       42)],
             '$60inplace_add.10': [(<numba.core.ir.Assign object at 0x7f1590c6e4a0>,
                                    42)],
             '$68return_value.1': [(<numba.core.ir.Assign object at 0x7f1590c6e770>,
                                    66)],
             '$phi40.0': [(<numba.core.ir.Assign object at 0x7f1590db2b60>, 0)],
             '$phi42.1': [(<numba.core.ir.Assign object at 0x7f1590c6cd90>,
                           40)],
             '_': [(<numba.core.ir.Assign object at 0x7f1590de6710>, 0)],
             'aux_data': [(<numba.core.ir.Assign object at 0x7f1590de6380>, 0)],
             'data1': [(<numba.core.ir.Assign object at 0x7f1590d10820>, 0)],
             'data2': [(<numba.core.ir.Assign object at 0x7f1590d4b520>, 0)],
             'dim': [(<numba.core.ir.Assign object at 0x7f1590c6cd00>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f1590c6d8d0>, 42)],
             'ind1': [(<numba.core.ir.Assign object at 0x7f1590d11870>, 0)],
             'ind2': [(<numba.core.ir.Assign object at 0x7f1590d12290>, 0)],
             'result': [(<numba.core.ir.Assign object at 0x7f1590de5120>, 0),
                        (<numba.core.ir.Assign object at 0x7f1590c6e560>, 42)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590d13820>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590dd89d0>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:385), Var(data1, sparse.py:385), Var(ind2, sparse.py:385), Var(data2, sparse.py:385)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: aux_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $24load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: dim = call $24load_global.10(aux_data, func=$24load_global.10, args=[Var(aux_data, sparse.py:405)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_global.13 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $36call_function.15 = call $32load_global.13(dim, func=$32load_global.13, args=[Var(dim, sparse.py:407)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38get_iter.16 = getiter(value=$36call_function.15)
DEBUG:numba.core.ssa:on stmt: $phi40.0 = $38get_iter.16
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590dd89d0>
DEBUG:numba.core.ssa:on stmt: $40for_iter.1 = iternext(value=$phi40.0)
DEBUG:numba.core.ssa:on stmt: $40for_iter.2 = pair_first(value=$40for_iter.1)
DEBUG:numba.core.ssa:on stmt: $40for_iter.3 = pair_second(value=$40for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi42.1 = $40for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $40for_iter.3, 42, 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590dd89d0>
DEBUG:numba.core.ssa:on stmt: i = $phi42.1
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.5 = getitem(value=aux_data, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.8 = getitem(value=aux_data, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_multiply.9 = $50binary_subscr.5 * $56binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $60inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$58binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $60inplace_add.10
DEBUG:numba.core.ssa:replaced with: result.1 = $60inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590dd89d0>
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1590dd8340>],
             42: [<numba.core.ir.Assign object at 0x7f1590dd9ea0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590dd89d0>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:385), Var(data1, sparse.py:385), Var(ind2, sparse.py:385), Var(data2, sparse.py:385)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: aux_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $24load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: dim = call $24load_global.10(aux_data, func=$24load_global.10, args=[Var(aux_data, sparse.py:405)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_global.13 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $36call_function.15 = call $32load_global.13(dim, func=$32load_global.13, args=[Var(dim, sparse.py:407)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38get_iter.16 = getiter(value=$36call_function.15)
DEBUG:numba.core.ssa:on stmt: $phi40.0 = $38get_iter.16
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590dd89d0>
DEBUG:numba.core.ssa:on stmt: $40for_iter.1 = iternext(value=$phi40.0)
DEBUG:numba.core.ssa:on stmt: $40for_iter.2 = pair_first(value=$40for_iter.1)
DEBUG:numba.core.ssa:on stmt: $40for_iter.3 = pair_second(value=$40for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi42.1 = $40for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $40for_iter.3, 42, 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590dd89d0>
DEBUG:numba.core.ssa:on stmt: i = $phi42.1
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.5 = getitem(value=aux_data, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.8 = getitem(value=aux_data, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_multiply.9 = $50binary_subscr.5 * $56binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $60inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$58binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$60inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$58binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 42
DEBUG:numba.core.ssa:idom 40 from label 42
DEBUG:numba.core.ssa:find_def_from_bottom label 40
DEBUG:numba.core.ssa:find_def_from_top label 40
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 40
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:incoming_def result.1 = $60inplace_add.10
DEBUG:numba.core.ssa:replaced with: $60inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$58binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $60inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590dd89d0>
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def var='result' stmt=$68return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def_from_top label 66
DEBUG:numba.core.ssa:idom 40 from label 66
DEBUG:numba.core.ssa:find_def_from_bottom label 40
DEBUG:numba.core.ssa:replaced with: $68return_value.1 = cast(value=result.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=385)
           2	LOAD_GLOBAL(arg=0, lineno=405)
           4	LOAD_FAST(arg=0, lineno=405)
           6	LOAD_FAST(arg=1, lineno=405)
           8	LOAD_FAST(arg=2, lineno=405)
          10	LOAD_FAST(arg=3, lineno=405)
          12	CALL_FUNCTION(arg=4, lineno=405)
          14	UNPACK_SEQUENCE(arg=2, lineno=405)
          16	STORE_FAST(arg=4, lineno=405)
          18	STORE_FAST(arg=5, lineno=405)
          20	LOAD_CONST(arg=1, lineno=406)
          22	STORE_FAST(arg=6, lineno=406)
          24	LOAD_GLOBAL(arg=1, lineno=407)
          26	LOAD_FAST(arg=5, lineno=407)
          28	CALL_FUNCTION(arg=1, lineno=407)
          30	STORE_FAST(arg=7, lineno=407)
          32	LOAD_GLOBAL(arg=2, lineno=408)
          34	LOAD_FAST(arg=7, lineno=408)
          36	CALL_FUNCTION(arg=1, lineno=408)
          38	GET_ITER(arg=None, lineno=408)
>         40	FOR_ITER(arg=12, lineno=408)
          42	STORE_FAST(arg=8, lineno=408)
          44	LOAD_FAST(arg=6, lineno=409)
          46	LOAD_FAST(arg=5, lineno=409)
          48	LOAD_FAST(arg=8, lineno=409)
          50	BINARY_SUBSCR(arg=None, lineno=409)
          52	LOAD_FAST(arg=5, lineno=409)
          54	LOAD_FAST(arg=8, lineno=409)
          56	BINARY_SUBSCR(arg=None, lineno=409)
          58	BINARY_MULTIPLY(arg=None, lineno=409)
          60	INPLACE_ADD(arg=None, lineno=409)
          62	STORE_FAST(arg=6, lineno=409)
          64	JUMP_ABSOLUTE(arg=21, lineno=409)
>         66	LOAD_FAST(arg=6, lineno=410)
          68	RETURN_VALUE(arg=None, lineno=410)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=385)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=405)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=405)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=405)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=405)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$data16.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=3, lineno=405)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$data16.2', '$ind28.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_FUNCTION(arg=4, lineno=405)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$data16.2', '$ind28.3', '$data210.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=UNPACK_SEQUENCE(arg=2, lineno=405)
DEBUG:numba.core.byteflow:stack ['$12call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=4, lineno=405)
DEBUG:numba.core.byteflow:stack ['$14unpack_sequence.7', '$14unpack_sequence.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=5, lineno=405)
DEBUG:numba.core.byteflow:stack ['$14unpack_sequence.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=1, lineno=406)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=6, lineno=406)
DEBUG:numba.core.byteflow:stack ['$const20.9.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_GLOBAL(arg=1, lineno=407)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=407)
DEBUG:numba.core.byteflow:stack ['$24load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=407)
DEBUG:numba.core.byteflow:stack ['$24load_global.10', '$aux_data26.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=7, lineno=407)
DEBUG:numba.core.byteflow:stack ['$28call_function.12']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_GLOBAL(arg=2, lineno=408)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=7, lineno=408)
DEBUG:numba.core.byteflow:stack ['$32load_global.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=CALL_FUNCTION(arg=1, lineno=408)
DEBUG:numba.core.byteflow:stack ['$32load_global.13', '$dim34.14']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=GET_ITER(arg=None, lineno=408)
DEBUG:numba.core.byteflow:stack ['$36call_function.15']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=('$38get_iter.16',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi40.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=40 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=40, inst=FOR_ITER(arg=12, lineno=408)
DEBUG:numba.core.byteflow:stack ['$phi40.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=66, stack=(), blockstack=(), npush=0), Edge(pc=42, stack=('$phi40.0', '$40for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=42 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=66 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=410)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=RETURN_VALUE(arg=None, lineno=410)
DEBUG:numba.core.byteflow:stack ['$result66.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi42.0', '$phi42.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=42 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=8, lineno=408)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$phi42.1']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=6, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=5, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=8, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$aux_data46.3']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$aux_data46.3', '$i48.4']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=5, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$50binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=8, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$50binary_subscr.5', '$aux_data52.6']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$50binary_subscr.5', '$aux_data52.6', '$i54.7']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=BINARY_MULTIPLY(arg=None, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$50binary_subscr.5', '$56binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=INPLACE_ADD(arg=None, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$result44.2', '$58binary_multiply.9']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_FAST(arg=6, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$60inplace_add.10']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=JUMP_ABSOLUTE(arg=21, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi42.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=('$phi42.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=1): {'$phi40.0'},
             State(pc_initial=42 nstack_initial=2): {'$phi42.1'},
             State(pc_initial=66 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi40.0': State(pc_initial=0 nstack_initial=0),
 '$phi42.1': State(pc_initial=40 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi42.0', State(pc_initial=42 nstack_initial=2))},
             '$phi42.0': {('$phi40.0', State(pc_initial=40 nstack_initial=1))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi40.0', State(pc_initial=40 nstack_initial=1))},
             '$phi42.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.0': {('$38get_iter.16',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi40.0': {('$38get_iter.16', State(pc_initial=0 nstack_initial=0))},
 '$phi42.1': {('$40for_iter.2', State(pc_initial=40 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi40.0': '$38get_iter.16'},
             State(pc_initial=40 nstack_initial=1): {'$phi42.1': '$40for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$ind14.1'}), (6, {'res': '$data16.2'}), (8, {'res': '$ind28.3'}), (10, {'res': '$data210.4'}), (12, {'func': '$2load_global.0', 'args': ['$ind14.1', '$data16.2', '$ind28.3', '$data210.4'], 'res': '$12call_function.5'}), (14, {'iterable': '$12call_function.5', 'stores': ['$14unpack_sequence.6', '$14unpack_sequence.7'], 'tupleobj': '$14unpack_sequence.8'}), (16, {'value': '$14unpack_sequence.6'}), (18, {'value': '$14unpack_sequence.7'}), (20, {'res': '$const20.9.1'}), (22, {'value': '$const20.9.1'}), (24, {'res': '$24load_global.10'}), (26, {'res': '$aux_data26.11'}), (28, {'func': '$24load_global.10', 'args': ['$aux_data26.11'], 'res': '$28call_function.12'}), (30, {'value': '$28call_function.12'}), (32, {'res': '$32load_global.13'}), (34, {'res': '$dim34.14'}), (36, {'func': '$32load_global.13', 'args': ['$dim34.14'], 'res': '$36call_function.15'}), (38, {'value': '$36call_function.15', 'res': '$38get_iter.16'})), outgoing_phis={'$phi40.0': '$38get_iter.16'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ('$38get_iter.16',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=1):
AdaptBlockInfo(insts=((40, {'iterator': '$phi40.0', 'pair': '$40for_iter.1', 'indval': '$40for_iter.2', 'pred': '$40for_iter.3'}),), outgoing_phis={'$phi42.1': '$40for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={66: (), 42: ('$phi40.0', '$40for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=2):
AdaptBlockInfo(insts=((42, {'value': '$phi42.1'}), (44, {'res': '$result44.2'}), (46, {'res': '$aux_data46.3'}), (48, {'res': '$i48.4'}), (50, {'index': '$i48.4', 'target': '$aux_data46.3', 'res': '$50binary_subscr.5'}), (52, {'res': '$aux_data52.6'}), (54, {'res': '$i54.7'}), (56, {'index': '$i54.7', 'target': '$aux_data52.6', 'res': '$56binary_subscr.8'}), (58, {'lhs': '$50binary_subscr.5', 'rhs': '$56binary_subscr.8', 'res': '$58binary_multiply.9'}), (60, {'lhs': '$result44.2', 'rhs': '$58binary_multiply.9', 'res': '$60inplace_add.10'}), (62, {'value': '$60inplace_add.10'}), (64, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ('$phi42.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$result66.0'}), (68, {'retval': '$result66.0', 'castval': '$68return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    ind1 = arg(0, name=ind1)                 ['ind1']
    data1 = arg(1, name=data1)               ['data1']
    ind2 = arg(2, name=ind2)                 ['ind2']
    data2 = arg(3, name=data2)               ['data2']
    $2load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>)) ['$2load_global.0']
    $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:385), Var(data1, sparse.py:385), Var(ind2, sparse.py:385), Var(data2, sparse.py:385)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.5', '$2load_global.0', 'data1', 'data2', 'ind1', 'ind2']
    $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2) ['$12call_function.5', '$14unpack_sequence.8']
    $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>) ['$14unpack_sequence.6', '$14unpack_sequence.8']
    $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>) ['$14unpack_sequence.7', '$14unpack_sequence.8']
    _ = $14unpack_sequence.6                 ['$14unpack_sequence.6', '_']
    aux_data = $14unpack_sequence.7          ['$14unpack_sequence.7', 'aux_data']
    result = const(float, 0.0)               ['result']
    $24load_global.10 = global(len: <built-in function len>) ['$24load_global.10']
    dim = call $24load_global.10(aux_data, func=$24load_global.10, args=[Var(aux_data, sparse.py:405)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_global.10', 'aux_data', 'dim']
    $32load_global.13 = global(range: <class 'range'>) ['$32load_global.13']
    $36call_function.15 = call $32load_global.13(dim, func=$32load_global.13, args=[Var(dim, sparse.py:407)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_global.13', '$36call_function.15', 'dim']
    $38get_iter.16 = getiter(value=$36call_function.15) ['$36call_function.15', '$38get_iter.16']
    $phi40.0 = $38get_iter.16                ['$38get_iter.16', '$phi40.0']
    jump 40                                  []
label 40:
    $40for_iter.1 = iternext(value=$phi40.0) ['$40for_iter.1', '$phi40.0']
    $40for_iter.2 = pair_first(value=$40for_iter.1) ['$40for_iter.1', '$40for_iter.2']
    $40for_iter.3 = pair_second(value=$40for_iter.1) ['$40for_iter.1', '$40for_iter.3']
    $phi42.1 = $40for_iter.2                 ['$40for_iter.2', '$phi42.1']
    branch $40for_iter.3, 42, 66             ['$40for_iter.3']
label 42:
    i = $phi42.1                             ['$phi42.1', 'i']
    $50binary_subscr.5 = getitem(value=aux_data, index=i, fn=<built-in function getitem>) ['$50binary_subscr.5', 'aux_data', 'i']
    $56binary_subscr.8 = getitem(value=aux_data, index=i, fn=<built-in function getitem>) ['$56binary_subscr.8', 'aux_data', 'i']
    $58binary_multiply.9 = $50binary_subscr.5 * $56binary_subscr.8 ['$50binary_subscr.5', '$56binary_subscr.8', '$58binary_multiply.9']
    $60inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$58binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined) ['$58binary_multiply.9', '$60inplace_add.10', 'result']
    result = $60inplace_add.10               ['$60inplace_add.10', 'result']
    jump 40                                  []
label 66:
    $68return_value.1 = cast(value=result)   ['$68return_value.1', 'result']
    return $68return_value.1                 ['$68return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590cb9a20>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:385), Var(data1, sparse.py:385), Var(ind2, sparse.py:385), Var(data2, sparse.py:385)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: aux_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $24load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: dim = call $24load_global.10(aux_data, func=$24load_global.10, args=[Var(aux_data, sparse.py:405)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_global.13 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $36call_function.15 = call $32load_global.13(dim, func=$32load_global.13, args=[Var(dim, sparse.py:407)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38get_iter.16 = getiter(value=$36call_function.15)
DEBUG:numba.core.ssa:on stmt: $phi40.0 = $38get_iter.16
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block analysis pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590cb9a20>
DEBUG:numba.core.ssa:on stmt: $40for_iter.1 = iternext(value=$phi40.0)
DEBUG:numba.core.ssa:on stmt: $40for_iter.2 = pair_first(value=$40for_iter.1)
DEBUG:numba.core.ssa:on stmt: $40for_iter.3 = pair_second(value=$40for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi42.1 = $40for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $40for_iter.3, 42, 66
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590cb9a20>
DEBUG:numba.core.ssa:on stmt: i = $phi42.1
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.5 = getitem(value=aux_data, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.8 = getitem(value=aux_data, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_multiply.9 = $50binary_subscr.5 * $56binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $60inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$58binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $60inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block analysis pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590cb9a20>
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12call_function.5': [(<numba.core.ir.Assign object at 0x7f1590cadd80>,
                                     0)],
             '$14unpack_sequence.6': [(<numba.core.ir.Assign object at 0x7f1590caf220>,
                                       0)],
             '$14unpack_sequence.7': [(<numba.core.ir.Assign object at 0x7f1590cae0b0>,
                                       0)],
             '$14unpack_sequence.8': [(<numba.core.ir.Assign object at 0x7f1590cadae0>,
                                       0)],
             '$24load_global.10': [(<numba.core.ir.Assign object at 0x7f1590c58520>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7f1590cba920>,
                                  0)],
             '$32load_global.13': [(<numba.core.ir.Assign object at 0x7f1590b0cd60>,
                                    0)],
             '$36call_function.15': [(<numba.core.ir.Assign object at 0x7f1590b0c7c0>,
                                      0)],
             '$38get_iter.16': [(<numba.core.ir.Assign object at 0x7f1590b0c940>,
                                 0)],
             '$40for_iter.1': [(<numba.core.ir.Assign object at 0x7f1590b0c8b0>,
                                40)],
             '$40for_iter.2': [(<numba.core.ir.Assign object at 0x7f1590cba0b0>,
                                40)],
             '$40for_iter.3': [(<numba.core.ir.Assign object at 0x7f1590cb9e70>,
                                40)],
             '$50binary_subscr.5': [(<numba.core.ir.Assign object at 0x7f1590b0cc40>,
                                     42)],
             '$56binary_subscr.8': [(<numba.core.ir.Assign object at 0x7f1590b0c4f0>,
                                     42)],
             '$58binary_multiply.9': [(<numba.core.ir.Assign object at 0x7f1590b0c250>,
                                       42)],
             '$60inplace_add.10': [(<numba.core.ir.Assign object at 0x7f1590b0c430>,
                                    42)],
             '$68return_value.1': [(<numba.core.ir.Assign object at 0x7f1590b0c160>,
                                    66)],
             '$phi40.0': [(<numba.core.ir.Assign object at 0x7f1590c59810>, 0)],
             '$phi42.1': [(<numba.core.ir.Assign object at 0x7f1590cb9d50>,
                           40)],
             '_': [(<numba.core.ir.Assign object at 0x7f1590cada50>, 0)],
             'aux_data': [(<numba.core.ir.Assign object at 0x7f1590d76bc0>, 0)],
             'data1': [(<numba.core.ir.Assign object at 0x7f1590cba560>, 0)],
             'data2': [(<numba.core.ir.Assign object at 0x7f1590cba7a0>, 0)],
             'dim': [(<numba.core.ir.Assign object at 0x7f1590b0f280>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7f1590ef37c0>, 42)],
             'ind1': [(<numba.core.ir.Assign object at 0x7f1590cba440>, 0)],
             'ind2': [(<numba.core.ir.Assign object at 0x7f1590cba680>, 0)],
             'result': [(<numba.core.ir.Assign object at 0x7f1590d76800>, 0),
                        (<numba.core.ir.Assign object at 0x7f1590b0c070>, 42)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590cb9a20>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590b0d180>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:385), Var(data1, sparse.py:385), Var(ind2, sparse.py:385), Var(data2, sparse.py:385)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: aux_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $24load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: dim = call $24load_global.10(aux_data, func=$24load_global.10, args=[Var(aux_data, sparse.py:405)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_global.13 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $36call_function.15 = call $32load_global.13(dim, func=$32load_global.13, args=[Var(dim, sparse.py:407)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38get_iter.16 = getiter(value=$36call_function.15)
DEBUG:numba.core.ssa:on stmt: $phi40.0 = $38get_iter.16
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590b0d180>
DEBUG:numba.core.ssa:on stmt: $40for_iter.1 = iternext(value=$phi40.0)
DEBUG:numba.core.ssa:on stmt: $40for_iter.2 = pair_first(value=$40for_iter.1)
DEBUG:numba.core.ssa:on stmt: $40for_iter.3 = pair_second(value=$40for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi42.1 = $40for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $40for_iter.3, 42, 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590b0d180>
DEBUG:numba.core.ssa:on stmt: i = $phi42.1
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.5 = getitem(value=aux_data, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.8 = getitem(value=aux_data, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_multiply.9 = $50binary_subscr.5 * $56binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $60inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$58binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $60inplace_add.10
DEBUG:numba.core.ssa:replaced with: result.1 = $60inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590b0d180>
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1590b0f7c0>],
             42: [<numba.core.ir.Assign object at 0x7f1590b0fc10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590b0d180>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:385), Var(data1, sparse.py:385), Var(ind2, sparse.py:385), Var(data2, sparse.py:385)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: aux_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $24load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: dim = call $24load_global.10(aux_data, func=$24load_global.10, args=[Var(aux_data, sparse.py:405)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_global.13 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $36call_function.15 = call $32load_global.13(dim, func=$32load_global.13, args=[Var(dim, sparse.py:407)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38get_iter.16 = getiter(value=$36call_function.15)
DEBUG:numba.core.ssa:on stmt: $phi40.0 = $38get_iter.16
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590b0d180>
DEBUG:numba.core.ssa:on stmt: $40for_iter.1 = iternext(value=$phi40.0)
DEBUG:numba.core.ssa:on stmt: $40for_iter.2 = pair_first(value=$40for_iter.1)
DEBUG:numba.core.ssa:on stmt: $40for_iter.3 = pair_second(value=$40for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi42.1 = $40for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $40for_iter.3, 42, 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590b0d180>
DEBUG:numba.core.ssa:on stmt: i = $phi42.1
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.5 = getitem(value=aux_data, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.8 = getitem(value=aux_data, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58binary_multiply.9 = $50binary_subscr.5 * $56binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $60inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$58binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$60inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$58binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 42
DEBUG:numba.core.ssa:idom 40 from label 42
DEBUG:numba.core.ssa:find_def_from_bottom label 40
DEBUG:numba.core.ssa:find_def_from_top label 40
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 40
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:incoming_def result.1 = $60inplace_add.10
DEBUG:numba.core.ssa:replaced with: $60inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$58binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $60inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590b0d180>
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def var='result' stmt=$68return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:find_def_from_top label 66
DEBUG:numba.core.ssa:idom 40 from label 66
DEBUG:numba.core.ssa:find_def_from_bottom label 40
DEBUG:numba.core.ssa:replaced with: $68return_value.1 = cast(value=result.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=463)
           2	LOAD_GLOBAL(arg=0, lineno=476)
           4	LOAD_FAST(arg=0, lineno=476)
           6	LOAD_FAST(arg=1, lineno=476)
           8	LOAD_FAST(arg=2, lineno=476)
          10	LOAD_FAST(arg=3, lineno=476)
          12	CALL_FUNCTION(arg=4, lineno=476)
          14	UNPACK_SEQUENCE(arg=2, lineno=476)
          16	STORE_FAST(arg=4, lineno=476)
          18	STORE_FAST(arg=5, lineno=476)
          20	LOAD_GLOBAL(arg=1, lineno=477)
          22	LOAD_METHOD(arg=2, lineno=477)
          24	LOAD_FAST(arg=5, lineno=477)
          26	CALL_METHOD(arg=1, lineno=477)
          28	STORE_FAST(arg=5, lineno=477)
          30	LOAD_FAST(arg=5, lineno=479)
          32	LOAD_ATTR(arg=3, lineno=479)
          34	LOAD_CONST(arg=1, lineno=479)
          36	BINARY_SUBSCR(arg=None, lineno=479)
          38	LOAD_CONST(arg=1, lineno=479)
          40	COMPARE_OP(arg=2, lineno=479)
          42	POP_JUMP_IF_FALSE(arg=25, lineno=479)
          44	LOAD_CONST(arg=2, lineno=480)
          46	RETURN_VALUE(arg=None, lineno=480)
>         48	LOAD_GLOBAL(arg=1, lineno=482)
          50	LOAD_METHOD(arg=4, lineno=482)
          52	LOAD_FAST(arg=5, lineno=482)
          54	CALL_METHOD(arg=1, lineno=482)
          56	STORE_FAST(arg=6, lineno=482)
          58	LOAD_FAST(arg=6, lineno=484)
          60	LOAD_CONST(arg=2, lineno=484)
          62	COMPARE_OP(arg=2, lineno=484)
          64	POP_JUMP_IF_FALSE(arg=36, lineno=484)
          66	LOAD_CONST(arg=2, lineno=485)
          68	RETURN_VALUE(arg=None, lineno=485)
>         70	LOAD_GLOBAL(arg=5, lineno=487)
          72	LOAD_FAST(arg=0, lineno=487)
          74	LOAD_FAST(arg=1, lineno=487)
          76	LOAD_FAST(arg=2, lineno=487)
          78	LOAD_FAST(arg=3, lineno=487)
          80	CALL_FUNCTION(arg=4, lineno=487)
          82	UNPACK_SEQUENCE(arg=2, lineno=487)
          84	STORE_FAST(arg=4, lineno=487)
          86	STORE_FAST(arg=7, lineno=487)
          88	LOAD_GLOBAL(arg=1, lineno=488)
          90	LOAD_METHOD(arg=2, lineno=488)
          92	LOAD_FAST(arg=7, lineno=488)
          94	CALL_METHOD(arg=1, lineno=488)
          96	STORE_FAST(arg=7, lineno=488)
          98	LOAD_GLOBAL(arg=1, lineno=490)
         100	LOAD_METHOD(arg=4, lineno=490)
         102	LOAD_FAST(arg=7, lineno=490)
         104	CALL_METHOD(arg=1, lineno=490)
         106	STORE_FAST(arg=8, lineno=490)
         108	LOAD_GLOBAL(arg=6, lineno=492)
         110	LOAD_FAST(arg=8, lineno=492)
         112	CALL_FUNCTION(arg=1, lineno=492)
         114	LOAD_FAST(arg=6, lineno=492)
         116	BINARY_TRUE_DIVIDE(arg=None, lineno=492)
         118	RETURN_VALUE(arg=None, lineno=492)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=463)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=476)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=476)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=476)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=476)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$data16.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=3, lineno=476)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$data16.2', '$ind28.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_FUNCTION(arg=4, lineno=476)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$data16.2', '$ind28.3', '$data210.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=UNPACK_SEQUENCE(arg=2, lineno=476)
DEBUG:numba.core.byteflow:stack ['$12call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=4, lineno=476)
DEBUG:numba.core.byteflow:stack ['$14unpack_sequence.7', '$14unpack_sequence.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=5, lineno=476)
DEBUG:numba.core.byteflow:stack ['$14unpack_sequence.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=477)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=477)
DEBUG:numba.core.byteflow:stack ['$20load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=477)
DEBUG:numba.core.byteflow:stack ['$22load_method.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=477)
DEBUG:numba.core.byteflow:stack ['$22load_method.10', '$denom_data24.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_FAST(arg=5, lineno=477)
DEBUG:numba.core.byteflow:stack ['$26call_method.12']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=5, lineno=479)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_ATTR(arg=3, lineno=479)
DEBUG:numba.core.byteflow:stack ['$denom_data30.13']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=479)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=479)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$const34.15.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=479)
DEBUG:numba.core.byteflow:stack ['$36binary_subscr.16']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=2, lineno=479)
DEBUG:numba.core.byteflow:stack ['$36binary_subscr.16', '$const38.17.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=25, lineno=479)
DEBUG:numba.core.byteflow:stack ['$40compare_op.18']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=44 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=480)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=480)
DEBUG:numba.core.byteflow:stack ['$const44.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_GLOBAL(arg=1, lineno=482)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_METHOD(arg=4, lineno=482)
DEBUG:numba.core.byteflow:stack ['$48load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=5, lineno=482)
DEBUG:numba.core.byteflow:stack ['$50load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=CALL_METHOD(arg=1, lineno=482)
DEBUG:numba.core.byteflow:stack ['$50load_method.1', '$denom_data52.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=STORE_FAST(arg=6, lineno=482)
DEBUG:numba.core.byteflow:stack ['$54call_method.3']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=6, lineno=484)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=484)
DEBUG:numba.core.byteflow:stack ['$denominator58.4']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=COMPARE_OP(arg=2, lineno=484)
DEBUG:numba.core.byteflow:stack ['$denominator58.4', '$const60.5.2']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=POP_JUMP_IF_FALSE(arg=36, lineno=484)
DEBUG:numba.core.byteflow:stack ['$62compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=66, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=70 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=66 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_CONST(arg=2, lineno=485)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=RETURN_VALUE(arg=None, lineno=485)
DEBUG:numba.core.byteflow:stack ['$const66.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=70 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=70 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_GLOBAL(arg=5, lineno=487)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=0, lineno=487)
DEBUG:numba.core.byteflow:stack ['$70load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=487)
DEBUG:numba.core.byteflow:stack ['$70load_global.0', '$ind172.1']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=2, lineno=487)
DEBUG:numba.core.byteflow:stack ['$70load_global.0', '$ind172.1', '$data174.2']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=3, lineno=487)
DEBUG:numba.core.byteflow:stack ['$70load_global.0', '$ind172.1', '$data174.2', '$ind276.3']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=CALL_FUNCTION(arg=4, lineno=487)
DEBUG:numba.core.byteflow:stack ['$70load_global.0', '$ind172.1', '$data174.2', '$ind276.3', '$data278.4']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=UNPACK_SEQUENCE(arg=2, lineno=487)
DEBUG:numba.core.byteflow:stack ['$80call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=STORE_FAST(arg=4, lineno=487)
DEBUG:numba.core.byteflow:stack ['$82unpack_sequence.7', '$82unpack_sequence.6']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=STORE_FAST(arg=7, lineno=487)
DEBUG:numba.core.byteflow:stack ['$82unpack_sequence.7']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_GLOBAL(arg=1, lineno=488)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_METHOD(arg=2, lineno=488)
DEBUG:numba.core.byteflow:stack ['$88load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=7, lineno=488)
DEBUG:numba.core.byteflow:stack ['$90load_method.10']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=CALL_METHOD(arg=1, lineno=488)
DEBUG:numba.core.byteflow:stack ['$90load_method.10', '$numer_data92.11']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=STORE_FAST(arg=7, lineno=488)
DEBUG:numba.core.byteflow:stack ['$94call_method.12']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_GLOBAL(arg=1, lineno=490)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_METHOD(arg=4, lineno=490)
DEBUG:numba.core.byteflow:stack ['$98load_global.13']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=7, lineno=490)
DEBUG:numba.core.byteflow:stack ['$100load_method.14']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=CALL_METHOD(arg=1, lineno=490)
DEBUG:numba.core.byteflow:stack ['$100load_method.14', '$numer_data102.15']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=STORE_FAST(arg=8, lineno=490)
DEBUG:numba.core.byteflow:stack ['$104call_method.16']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_GLOBAL(arg=6, lineno=492)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=8, lineno=492)
DEBUG:numba.core.byteflow:stack ['$108load_global.17']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=CALL_FUNCTION(arg=1, lineno=492)
DEBUG:numba.core.byteflow:stack ['$108load_global.17', '$numerator110.18']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=6, lineno=492)
DEBUG:numba.core.byteflow:stack ['$112call_function.19']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=492)
DEBUG:numba.core.byteflow:stack ['$112call_function.19', '$denominator114.20']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=RETURN_VALUE(arg=None, lineno=492)
DEBUG:numba.core.byteflow:stack ['$116binary_true_divide.21']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$ind14.1'}), (6, {'res': '$data16.2'}), (8, {'res': '$ind28.3'}), (10, {'res': '$data210.4'}), (12, {'func': '$2load_global.0', 'args': ['$ind14.1', '$data16.2', '$ind28.3', '$data210.4'], 'res': '$12call_function.5'}), (14, {'iterable': '$12call_function.5', 'stores': ['$14unpack_sequence.6', '$14unpack_sequence.7'], 'tupleobj': '$14unpack_sequence.8'}), (16, {'value': '$14unpack_sequence.6'}), (18, {'value': '$14unpack_sequence.7'}), (20, {'res': '$20load_global.9'}), (22, {'item': '$20load_global.9', 'res': '$22load_method.10'}), (24, {'res': '$denom_data24.11'}), (26, {'func': '$22load_method.10', 'args': ['$denom_data24.11'], 'res': '$26call_method.12'}), (28, {'value': '$26call_method.12'}), (30, {'res': '$denom_data30.13'}), (32, {'item': '$denom_data30.13', 'res': '$32load_attr.14'}), (34, {'res': '$const34.15.1'}), (36, {'index': '$const34.15.1', 'target': '$32load_attr.14', 'res': '$36binary_subscr.16'}), (38, {'res': '$const38.17.1'}), (40, {'lhs': '$36binary_subscr.16', 'rhs': '$const38.17.1', 'res': '$40compare_op.18'}), (42, {'pred': '$40compare_op.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0.2'}), (46, {'retval': '$const44.0.2', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_global.0'}), (50, {'item': '$48load_global.0', 'res': '$50load_method.1'}), (52, {'res': '$denom_data52.2'}), (54, {'func': '$50load_method.1', 'args': ['$denom_data52.2'], 'res': '$54call_method.3'}), (56, {'value': '$54call_method.3'}), (58, {'res': '$denominator58.4'}), (60, {'res': '$const60.5.2'}), (62, {'lhs': '$denominator58.4', 'rhs': '$const60.5.2', 'res': '$62compare_op.6'}), (64, {'pred': '$62compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={66: (), 70: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$const66.0.2'}), (68, {'retval': '$const66.0.2', 'castval': '$68return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$70load_global.0'}), (72, {'res': '$ind172.1'}), (74, {'res': '$data174.2'}), (76, {'res': '$ind276.3'}), (78, {'res': '$data278.4'}), (80, {'func': '$70load_global.0', 'args': ['$ind172.1', '$data174.2', '$ind276.3', '$data278.4'], 'res': '$80call_function.5'}), (82, {'iterable': '$80call_function.5', 'stores': ['$82unpack_sequence.6', '$82unpack_sequence.7'], 'tupleobj': '$82unpack_sequence.8'}), (84, {'value': '$82unpack_sequence.6'}), (86, {'value': '$82unpack_sequence.7'}), (88, {'res': '$88load_global.9'}), (90, {'item': '$88load_global.9', 'res': '$90load_method.10'}), (92, {'res': '$numer_data92.11'}), (94, {'func': '$90load_method.10', 'args': ['$numer_data92.11'], 'res': '$94call_method.12'}), (96, {'value': '$94call_method.12'}), (98, {'res': '$98load_global.13'}), (100, {'item': '$98load_global.13', 'res': '$100load_method.14'}), (102, {'res': '$numer_data102.15'}), (104, {'func': '$100load_method.14', 'args': ['$numer_data102.15'], 'res': '$104call_method.16'}), (106, {'value': '$104call_method.16'}), (108, {'res': '$108load_global.17'}), (110, {'res': '$numerator110.18'}), (112, {'func': '$108load_global.17', 'args': ['$numerator110.18'], 'res': '$112call_function.19'}), (114, {'res': '$denominator114.20'}), (116, {'lhs': '$112call_function.19', 'rhs': '$denominator114.20', 'res': '$116binary_true_divide.21'}), (118, {'retval': '$116binary_true_divide.21', 'castval': '$118return_value.22'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    ind1 = arg(0, name=ind1)                 ['ind1']
    data1 = arg(1, name=data1)               ['data1']
    ind2 = arg(2, name=ind2)                 ['ind2']
    data2 = arg(3, name=data2)               ['data2']
    $2load_global.0 = global(sparse_sum: CPUDispatcher(<function sparse_sum at 0x7f15912ca950>)) ['$2load_global.0']
    $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.5', '$2load_global.0', 'data1', 'data2', 'ind1', 'ind2']
    $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2) ['$12call_function.5', '$14unpack_sequence.8']
    $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>) ['$14unpack_sequence.6', '$14unpack_sequence.8']
    $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>) ['$14unpack_sequence.7', '$14unpack_sequence.8']
    _ = $14unpack_sequence.6                 ['$14unpack_sequence.6', '_']
    denom_data = $14unpack_sequence.7        ['$14unpack_sequence.7', 'denom_data']
    $20load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.9']
    $22load_method.10 = getattr(value=$20load_global.9, attr=abs) ['$20load_global.9', '$22load_method.10']
    denom_data.1 = call $22load_method.10(denom_data, func=$22load_method.10, args=[Var(denom_data, sparse.py:476)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.10', 'denom_data', 'denom_data.1']
    $32load_attr.14 = getattr(value=denom_data.1, attr=shape) ['$32load_attr.14', 'denom_data.1']
    $const34.15.1 = const(int, 0)            ['$const34.15.1']
    $36binary_subscr.16 = getitem(value=$32load_attr.14, index=$const34.15.1, fn=<built-in function getitem>) ['$32load_attr.14', '$36binary_subscr.16', '$const34.15.1']
    $const38.17.1 = const(int, 0)            ['$const38.17.1']
    $40compare_op.18 = $36binary_subscr.16 == $const38.17.1 ['$36binary_subscr.16', '$40compare_op.18', '$const38.17.1']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.18, func=bool42, args=(Var($40compare_op.18, sparse.py:479),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.18', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $const44.0.2 = const(float, 0.0)         ['$const44.0.2']
    $46return_value.1 = cast(value=$const44.0.2) ['$46return_value.1', '$const44.0.2']
    return $46return_value.1                 ['$46return_value.1']
label 48:
    $48load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$48load_global.0']
    $50load_method.1 = getattr(value=$48load_global.0, attr=sum) ['$48load_global.0', '$50load_method.1']
    denominator = call $50load_method.1(denom_data.1, func=$50load_method.1, args=[Var(denom_data.1, sparse.py:477)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_method.1', 'denom_data.1', 'denominator']
    $const60.5.2 = const(float, 0.0)         ['$const60.5.2']
    $62compare_op.6 = denominator == $const60.5.2 ['$62compare_op.6', '$const60.5.2', 'denominator']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($62compare_op.6, func=bool64, args=(Var($62compare_op.6, sparse.py:484),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.6', '$64pred', 'bool64']
    branch $64pred, 66, 70                   ['$64pred']
label 66:
    $const66.0.2 = const(float, 0.0)         ['$const66.0.2']
    $68return_value.1 = cast(value=$const66.0.2) ['$68return_value.1', '$const66.0.2']
    return $68return_value.1                 ['$68return_value.1']
label 70:
    $70load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>)) ['$70load_global.0']
    $80call_function.5 = call $70load_global.0(ind1, data1, ind2, data2, func=$70load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.0', '$80call_function.5', 'data1', 'data2', 'ind1', 'ind2']
    $82unpack_sequence.8 = exhaust_iter(value=$80call_function.5, count=2) ['$80call_function.5', '$82unpack_sequence.8']
    $82unpack_sequence.6 = static_getitem(value=$82unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>) ['$82unpack_sequence.6', '$82unpack_sequence.8']
    $82unpack_sequence.7 = static_getitem(value=$82unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>) ['$82unpack_sequence.7', '$82unpack_sequence.8']
    _ = $82unpack_sequence.6                 ['$82unpack_sequence.6', '_']
    numer_data = $82unpack_sequence.7        ['$82unpack_sequence.7', 'numer_data']
    $88load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$88load_global.9']
    $90load_method.10 = getattr(value=$88load_global.9, attr=abs) ['$88load_global.9', '$90load_method.10']
    numer_data = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_method.10', 'numer_data', 'numer_data']
    $98load_global.13 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$98load_global.13']
    $100load_method.14 = getattr(value=$98load_global.13, attr=sum) ['$100load_method.14', '$98load_global.13']
    numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_method.14', 'numer_data', 'numerator']
    $108load_global.17 = global(float: <class 'float'>) ['$108load_global.17']
    $112call_function.19 = call $108load_global.17(numerator, func=$108load_global.17, args=[Var(numerator, sparse.py:490)], kws=(), vararg=None, varkwarg=None, target=None) ['$108load_global.17', '$112call_function.19', 'numerator']
    $116binary_true_divide.21 = $112call_function.19 / denominator ['$112call_function.19', '$116binary_true_divide.21', 'denominator']
    $118return_value.22 = cast(value=$116binary_true_divide.21) ['$116binary_true_divide.21', '$118return_value.22']
    return $118return_value.22               ['$118return_value.22']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a1a440>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_sum: CPUDispatcher(<function sparse_sum at 0x7f15912ca950>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: denom_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.10 = getattr(value=$20load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: denom_data.1 = call $22load_method.10(denom_data, func=$22load_method.10, args=[Var(denom_data, sparse.py:476)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=denom_data.1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const34.15.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.16 = static_getitem(value=$32load_attr.14, index=0, index_var=$const34.15.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.17.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.18 = $36binary_subscr.16 == $const38.17.1
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.18, func=bool42, args=(Var($40compare_op.18, sparse.py:479),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a1a440>
DEBUG:numba.core.ssa:on stmt: $const44.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.2)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a1a440>
DEBUG:numba.core.ssa:on stmt: $48load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.1 = getattr(value=$48load_global.0, attr=sum)
DEBUG:numba.core.ssa:on stmt: denominator = call $50load_method.1(denom_data.1, func=$50load_method.1, args=[Var(denom_data.1, sparse.py:477)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.5.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.6 = denominator == $const60.5.2
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.6, func=bool64, args=(Var($62compare_op.6, sparse.py:484),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 70
DEBUG:numba.core.ssa:==== SSA block analysis pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a1a440>
DEBUG:numba.core.ssa:on stmt: $const66.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=$const66.0.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 70
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a1a440>
DEBUG:numba.core.ssa:on stmt: $70load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $80call_function.5 = call $70load_global.0(ind1, data1, ind2, data2, func=$70load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.8 = exhaust_iter(value=$80call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.6 = static_getitem(value=$82unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.7 = static_getitem(value=$82unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $82unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: numer_data = $82unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $88load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_method.10 = getattr(value=$88load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: numer_data = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.13 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $100load_method.14 = getattr(value=$98load_global.13, attr=sum)
DEBUG:numba.core.ssa:on stmt: numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_global.17 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $112call_function.19 = call $108load_global.17(numerator, func=$108load_global.17, args=[Var(numerator, sparse.py:490)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $116binary_true_divide.21 = $112call_function.19 / denominator
DEBUG:numba.core.ssa:on stmt: $118return_value.22 = cast(value=$116binary_true_divide.21)
DEBUG:numba.core.ssa:on stmt: return $118return_value.22
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100load_method.14': [(<numba.core.ir.Assign object at 0x7f1590a18190>,
                                     70)],
             '$108load_global.17': [(<numba.core.ir.Assign object at 0x7f1590a186d0>,
                                     70)],
             '$112call_function.19': [(<numba.core.ir.Assign object at 0x7f1590a189d0>,
                                       70)],
             '$116binary_true_divide.21': [(<numba.core.ir.Assign object at 0x7f1590a18c40>,
                                            70)],
             '$118return_value.22': [(<numba.core.ir.Assign object at 0x7f1590a18d90>,
                                      70)],
             '$12call_function.5': [(<numba.core.ir.Assign object at 0x7f1590a0c850>,
                                     0)],
             '$14unpack_sequence.6': [(<numba.core.ir.Assign object at 0x7f1590a0caf0>,
                                       0)],
             '$14unpack_sequence.7': [(<numba.core.ir.Assign object at 0x7f1590a0cc10>,
                                       0)],
             '$14unpack_sequence.8': [(<numba.core.ir.Assign object at 0x7f1590a0c9a0>,
                                       0)],
             '$20load_global.9': [(<numba.core.ir.Assign object at 0x7f1590a0cf70>,
                                   0)],
             '$22load_method.10': [(<numba.core.ir.Assign object at 0x7f1590a0d0f0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7f1590a0c1f0>,
                                  0)],
             '$32load_attr.14': [(<numba.core.ir.Assign object at 0x7f1590a0d750>,
                                  0)],
             '$36binary_subscr.16': [(<numba.core.ir.Assign object at 0x7f15909f6fb0>,
                                      0)],
             '$40compare_op.18': [(<numba.core.ir.Assign object at 0x7f1590a0dd80>,
                                   0)],
             '$42pred': [(<numba.core.ir.Assign object at 0x7f1590a0dff0>, 0)],
             '$46return_value.1': [(<numba.core.ir.Assign object at 0x7f1590a0e170>,
                                    44)],
             '$48load_global.0': [(<numba.core.ir.Assign object at 0x7f1590a0e410>,
                                   48)],
             '$50load_method.1': [(<numba.core.ir.Assign object at 0x7f15909f78e0>,
                                   48)],
             '$62compare_op.6': [(<numba.core.ir.Assign object at 0x7f15909f6710>,
                                  48)],
             '$64pred': [(<numba.core.ir.Assign object at 0x7f1590a0e6b0>, 48)],
             '$68return_value.1': [(<numba.core.ir.Assign object at 0x7f1590a0e9b0>,
                                    66)],
             '$70load_global.0': [(<numba.core.ir.Assign object at 0x7f1590a0ec50>,
                                   70)],
             '$80call_function.5': [(<numba.core.ir.Assign object at 0x7f1590a0f2b0>,
                                     70)],
             '$82unpack_sequence.6': [(<numba.core.ir.Assign object at 0x7f1590a0f550>,
                                       70)],
             '$82unpack_sequence.7': [(<numba.core.ir.Assign object at 0x7f1590a0f670>,
                                       70)],
             '$82unpack_sequence.8': [(<numba.core.ir.Assign object at 0x7f1590a0f400>,
                                       70)],
             '$88load_global.9': [(<numba.core.ir.Assign object at 0x7f1590a0f970>,
                                   70)],
             '$90load_method.10': [(<numba.core.ir.Assign object at 0x7f1590a0faf0>,
                                    70)],
             '$98load_global.13': [(<numba.core.ir.Assign object at 0x7f1590a0ffd0>,
                                    70)],
             '$const34.15.1': [(<numba.core.ir.Assign object at 0x7f1590a0d8d0>,
                                0)],
             '$const38.17.1': [(<numba.core.ir.Assign object at 0x7f1590a0dbd0>,
                                0)],
             '$const44.0.2': [(<numba.core.ir.Assign object at 0x7f1590a0d2a0>,
                               44)],
             '$const60.5.2': [(<numba.core.ir.Assign object at 0x7f15909f68c0>,
                               48)],
             '$const66.0.2': [(<numba.core.ir.Assign object at 0x7f1590a0e830>,
                               66)],
             '_': [(<numba.core.ir.Assign object at 0x7f1590a0ccd0>, 0),
                   (<numba.core.ir.Assign object at 0x7f1590a0f6d0>, 70)],
             'bool42': [(<numba.core.ir.Assign object at 0x7f1590a0ded0>, 0)],
             'bool64': [(<numba.core.ir.Assign object at 0x7f1590a0e590>, 48)],
             'data1': [(<numba.core.ir.Assign object at 0x7f15909f7df0>, 0)],
             'data2': [(<numba.core.ir.Assign object at 0x7f1590a0c070>, 0)],
             'denom_data': [(<numba.core.ir.Assign object at 0x7f1590a0cdf0>,
                             0)],
             'denom_data.1': [(<numba.core.ir.Assign object at 0x7f1590a0d420>,
                               0)],
             'denominator': [(<numba.core.ir.Assign object at 0x7f15909f7280>,
                              48)],
             'ind1': [(<numba.core.ir.Assign object at 0x7f15909f7cd0>, 0)],
             'ind2': [(<numba.core.ir.Assign object at 0x7f15909f7f10>, 0)],
             'numer_data': [(<numba.core.ir.Assign object at 0x7f1590a0f7f0>,
                             70),
                            (<numba.core.ir.Assign object at 0x7f1590a0fe20>,
                             70)],
             'numerator': [(<numba.core.ir.Assign object at 0x7f1590a184c0>,
                            70)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15909f6ad0>
DEBUG:numba.core.ssa:Fix SSA violator on var _
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f6ef0>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_sum: CPUDispatcher(<function sparse_sum at 0x7f15912ca950>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:first assign: _
DEBUG:numba.core.ssa:replaced with: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: denom_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.10 = getattr(value=$20load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: denom_data.1 = call $22load_method.10(denom_data, func=$22load_method.10, args=[Var(denom_data, sparse.py:476)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=denom_data.1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const34.15.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.16 = static_getitem(value=$32load_attr.14, index=0, index_var=$const34.15.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.17.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.18 = $36binary_subscr.16 == $const38.17.1
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.18, func=bool42, args=(Var($40compare_op.18, sparse.py:479),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f6ef0>
DEBUG:numba.core.ssa:on stmt: $const44.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.2)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f6ef0>
DEBUG:numba.core.ssa:on stmt: $48load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.1 = getattr(value=$48load_global.0, attr=sum)
DEBUG:numba.core.ssa:on stmt: denominator = call $50load_method.1(denom_data.1, func=$50load_method.1, args=[Var(denom_data.1, sparse.py:477)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.5.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.6 = denominator == $const60.5.2
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.6, func=bool64, args=(Var($62compare_op.6, sparse.py:484),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 70
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f6ef0>
DEBUG:numba.core.ssa:on stmt: $const66.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=$const66.0.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 70
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f6ef0>
DEBUG:numba.core.ssa:on stmt: $70load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $80call_function.5 = call $70load_global.0(ind1, data1, ind2, data2, func=$70load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.8 = exhaust_iter(value=$80call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.6 = static_getitem(value=$82unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.7 = static_getitem(value=$82unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $82unpack_sequence.6
DEBUG:numba.core.ssa:replaced with: _.1 = $82unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: numer_data = $82unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $88load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_method.10 = getattr(value=$88load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: numer_data = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.13 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $100load_method.14 = getattr(value=$98load_global.13, attr=sum)
DEBUG:numba.core.ssa:on stmt: numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_global.17 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $112call_function.19 = call $108load_global.17(numerator, func=$108load_global.17, args=[Var(numerator, sparse.py:490)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $116binary_true_divide.21 = $112call_function.19 / denominator
DEBUG:numba.core.ssa:on stmt: $118return_value.22 = cast(value=$116binary_true_divide.21)
DEBUG:numba.core.ssa:on stmt: return $118return_value.22
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f15909f65f0>],
             70: [<numba.core.ir.Assign object at 0x7f15909f6ec0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f6ef0>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_sum: CPUDispatcher(<function sparse_sum at 0x7f15912ca950>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: denom_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.10 = getattr(value=$20load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: denom_data.1 = call $22load_method.10(denom_data, func=$22load_method.10, args=[Var(denom_data, sparse.py:476)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=denom_data.1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const34.15.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.16 = static_getitem(value=$32load_attr.14, index=0, index_var=$const34.15.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.17.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.18 = $36binary_subscr.16 == $const38.17.1
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.18, func=bool42, args=(Var($40compare_op.18, sparse.py:479),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f6ef0>
DEBUG:numba.core.ssa:on stmt: $const44.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.2)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f6ef0>
DEBUG:numba.core.ssa:on stmt: $48load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.1 = getattr(value=$48load_global.0, attr=sum)
DEBUG:numba.core.ssa:on stmt: denominator = call $50load_method.1(denom_data.1, func=$50load_method.1, args=[Var(denom_data.1, sparse.py:477)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.5.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.6 = denominator == $const60.5.2
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.6, func=bool64, args=(Var($62compare_op.6, sparse.py:484),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 70
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f6ef0>
DEBUG:numba.core.ssa:on stmt: $const66.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=$const66.0.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 70
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f6ef0>
DEBUG:numba.core.ssa:on stmt: $70load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $80call_function.5 = call $70load_global.0(ind1, data1, ind2, data2, func=$70load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.8 = exhaust_iter(value=$80call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.6 = static_getitem(value=$82unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.7 = static_getitem(value=$82unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _.1 = $82unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: numer_data = $82unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $88load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_method.10 = getattr(value=$88load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: numer_data = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.13 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $100load_method.14 = getattr(value=$98load_global.13, attr=sum)
DEBUG:numba.core.ssa:on stmt: numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_global.17 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $112call_function.19 = call $108load_global.17(numerator, func=$108load_global.17, args=[Var(numerator, sparse.py:490)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $116binary_true_divide.21 = $112call_function.19 / denominator
DEBUG:numba.core.ssa:on stmt: $118return_value.22 = cast(value=$116binary_true_divide.21)
DEBUG:numba.core.ssa:on stmt: return $118return_value.22
DEBUG:numba.core.ssa:Fix SSA violator on var numer_data
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f6d40>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_sum: CPUDispatcher(<function sparse_sum at 0x7f15912ca950>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: denom_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.10 = getattr(value=$20load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: denom_data.1 = call $22load_method.10(denom_data, func=$22load_method.10, args=[Var(denom_data, sparse.py:476)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=denom_data.1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const34.15.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.16 = static_getitem(value=$32load_attr.14, index=0, index_var=$const34.15.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.17.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.18 = $36binary_subscr.16 == $const38.17.1
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.18, func=bool42, args=(Var($40compare_op.18, sparse.py:479),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f6d40>
DEBUG:numba.core.ssa:on stmt: $const44.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.2)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f6d40>
DEBUG:numba.core.ssa:on stmt: $48load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.1 = getattr(value=$48load_global.0, attr=sum)
DEBUG:numba.core.ssa:on stmt: denominator = call $50load_method.1(denom_data.1, func=$50load_method.1, args=[Var(denom_data.1, sparse.py:477)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.5.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.6 = denominator == $const60.5.2
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.6, func=bool64, args=(Var($62compare_op.6, sparse.py:484),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 70
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f6d40>
DEBUG:numba.core.ssa:on stmt: $const66.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=$const66.0.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 70
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f6d40>
DEBUG:numba.core.ssa:on stmt: $70load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $80call_function.5 = call $70load_global.0(ind1, data1, ind2, data2, func=$70load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.8 = exhaust_iter(value=$80call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.6 = static_getitem(value=$82unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.7 = static_getitem(value=$82unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _.1 = $82unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: numer_data = $82unpack_sequence.7
DEBUG:numba.core.ssa:first assign: numer_data
DEBUG:numba.core.ssa:replaced with: numer_data = $82unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $88load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_method.10 = getattr(value=$88load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: numer_data = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: numer_data.1 = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.13 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $100load_method.14 = getattr(value=$98load_global.13, attr=sum)
DEBUG:numba.core.ssa:on stmt: numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_global.17 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $112call_function.19 = call $108load_global.17(numerator, func=$108load_global.17, args=[Var(numerator, sparse.py:490)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $116binary_true_divide.21 = $112call_function.19 / denominator
DEBUG:numba.core.ssa:on stmt: $118return_value.22 = cast(value=$116binary_true_divide.21)
DEBUG:numba.core.ssa:on stmt: return $118return_value.22
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {70: [<numba.core.ir.Assign object at 0x7f1590a1a590>,
                  <numba.core.ir.Assign object at 0x7f1590a18a90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f69e0>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_sum: CPUDispatcher(<function sparse_sum at 0x7f15912ca950>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: denom_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.10 = getattr(value=$20load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: denom_data.1 = call $22load_method.10(denom_data, func=$22load_method.10, args=[Var(denom_data, sparse.py:476)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=denom_data.1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const34.15.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.16 = static_getitem(value=$32load_attr.14, index=0, index_var=$const34.15.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.17.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.18 = $36binary_subscr.16 == $const38.17.1
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.18, func=bool42, args=(Var($40compare_op.18, sparse.py:479),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f69e0>
DEBUG:numba.core.ssa:on stmt: $const44.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.2)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f69e0>
DEBUG:numba.core.ssa:on stmt: $48load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.1 = getattr(value=$48load_global.0, attr=sum)
DEBUG:numba.core.ssa:on stmt: denominator = call $50load_method.1(denom_data.1, func=$50load_method.1, args=[Var(denom_data.1, sparse.py:477)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.5.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.6 = denominator == $const60.5.2
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.6, func=bool64, args=(Var($62compare_op.6, sparse.py:484),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 70
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f69e0>
DEBUG:numba.core.ssa:on stmt: $const66.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=$const66.0.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 70
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f69e0>
DEBUG:numba.core.ssa:on stmt: $70load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $80call_function.5 = call $70load_global.0(ind1, data1, ind2, data2, func=$70load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.8 = exhaust_iter(value=$80call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.6 = static_getitem(value=$82unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.7 = static_getitem(value=$82unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _.1 = $82unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: numer_data = $82unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $88load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_method.10 = getattr(value=$88load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: numer_data.1 = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='numer_data' stmt=numer_data.1 = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.13 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $100load_method.14 = getattr(value=$98load_global.13, attr=sum)
DEBUG:numba.core.ssa:on stmt: numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='numer_data' stmt=numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: numerator = call $100load_method.14(numer_data.1, func=$100load_method.14, args=[Var(numer_data.1, sparse.py:488)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_global.17 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $112call_function.19 = call $108load_global.17(numerator, func=$108load_global.17, args=[Var(numerator, sparse.py:490)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $116binary_true_divide.21 = $112call_function.19 / denominator
DEBUG:numba.core.ssa:on stmt: $118return_value.22 = cast(value=$116binary_true_divide.21)
DEBUG:numba.core.ssa:on stmt: return $118return_value.22
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=1)
           6	CALL_FUNCTION(arg=1, lineno=1)
           8	RETURN_VALUE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$denom_data_24.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$denom_data_24.1'}), (6, {'func': '$2load_global.0', 'args': ['$denom_data_24.1'], 'res': '$6call_function.2'}), (8, {'retval': '$6call_function.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    denom_data_2 = arg(0, name=denom_data_2) ['denom_data_2']
    $2load_global.0 = global(__ufunc_or_dufunc_0x7f161f81e14: <ufunc 'absolute'>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(denom_data_2, func=$2load_global.0, args=[Var(denom_data_2, sparse.py:1)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'denom_data_2']
    $8return_value.3 = cast(value=$6call_function.2) ['$6call_function.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15909f58d0>
DEBUG:numba.core.ssa:on stmt: denom_data_2 = arg(0, name=denom_data_2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(__ufunc_or_dufunc_0x7f161f81e14: <ufunc 'absolute'>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_global.0(denom_data_2, func=$2load_global.0, args=[Var(denom_data_2, sparse.py:1)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6call_function.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$2load_global.0': [(<numba.core.ir.Assign object at 0x7f15909f51e0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7f15909f6050>,
                                    0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x7f15909f4a30>,
                                   0)],
             'denom_data_2': [(<numba.core.ir.Assign object at 0x7f15909f5360>,
                               0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15909f58d0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=337)
           2	LOAD_FAST(arg=0, lineno=352)
           4	LOAD_FAST(arg=2, lineno=352)
           6	COMPARE_OP(arg=4, lineno=352)
           8	POP_JUMP_IF_FALSE(arg=8, lineno=352)
          10	LOAD_CONST(arg=1, lineno=355)
          12	RETURN_VALUE(arg=None, lineno=355)
>         14	LOAD_CONST(arg=1, lineno=357)
          16	STORE_FAST(arg=4, lineno=357)
          18	LOAD_FAST(arg=2, lineno=358)
          20	LOAD_FAST(arg=0, lineno=358)
          22	BINARY_SUBTRACT(arg=None, lineno=358)
          24	STORE_FAST(arg=5, lineno=358)
          26	LOAD_FAST(arg=4, lineno=359)
          28	LOAD_FAST(arg=0, lineno=359)
          30	COMPARE_OP(arg=0, lineno=359)
          32	POP_JUMP_IF_FALSE(arg=64, lineno=359)
>         34	LOAD_FAST(arg=1, lineno=360)
          36	LOAD_FAST(arg=4, lineno=360)
          38	BINARY_SUBSCR(arg=None, lineno=360)
          40	STORE_FAST(arg=6, lineno=360)
          42	LOAD_FAST(arg=3, lineno=361)
          44	LOAD_FAST(arg=5, lineno=361)
          46	BINARY_SUBSCR(arg=None, lineno=361)
          48	STORE_FAST(arg=7, lineno=361)
          50	LOAD_FAST(arg=7, lineno=364)
          52	LOAD_CONST(arg=2, lineno=364)
          54	COMPARE_OP(arg=3, lineno=364)
          56	POP_JUMP_IF_FALSE(arg=44, lineno=364)
          58	LOAD_FAST(arg=6, lineno=368)
          60	LOAD_FAST(arg=7, lineno=368)
          62	COMPARE_OP(arg=3, lineno=368)
          64	POP_JUMP_IF_FALSE(arg=43, lineno=368)
          66	LOAD_FAST(arg=6, lineno=368)
          68	LOAD_CONST(arg=2, lineno=368)
          70	COMPARE_OP(arg=3, lineno=368)
          72	POP_JUMP_IF_FALSE(arg=43, lineno=368)
          74	LOAD_FAST(arg=5, lineno=369)
          76	LOAD_CONST(arg=2, lineno=369)
          78	BINARY_ADD(arg=None, lineno=369)
          80	UNARY_NEGATIVE(arg=None, lineno=369)
          82	RETURN_VALUE(arg=None, lineno=369)
>         84	JUMP_FORWARD(arg=8, lineno=369)
>         86	LOAD_FAST(arg=6, lineno=370)
          88	LOAD_CONST(arg=2, lineno=370)
          90	COMPARE_OP(arg=3, lineno=370)
          92	POP_JUMP_IF_FALSE(arg=52, lineno=370)
          94	LOAD_FAST(arg=6, lineno=372)
          96	LOAD_FAST(arg=3, lineno=372)
          98	LOAD_FAST(arg=5, lineno=372)
         100	STORE_SUBSCR(arg=None, lineno=372)
>        102	LOAD_FAST(arg=4, lineno=373)
         104	LOAD_CONST(arg=2, lineno=373)
         106	INPLACE_ADD(arg=None, lineno=373)
         108	STORE_FAST(arg=4, lineno=373)
         110	LOAD_FAST(arg=5, lineno=374)
         112	LOAD_CONST(arg=2, lineno=374)
         114	INPLACE_ADD(arg=None, lineno=374)
         116	STORE_FAST(arg=5, lineno=374)
         118	LOAD_FAST(arg=4, lineno=359)
         120	LOAD_FAST(arg=0, lineno=359)
         122	COMPARE_OP(arg=0, lineno=359)
         124	POP_JUMP_IF_TRUE(arg=18, lineno=359)
>        126	LOAD_FAST(arg=5, lineno=375)
         128	RETURN_VALUE(arg=None, lineno=375)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=337)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=352)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=2, lineno=352)
DEBUG:numba.core.byteflow:stack ['$src_ndim2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=352)
DEBUG:numba.core.byteflow:stack ['$src_ndim2.0', '$dest_ndim4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=POP_JUMP_IF_FALSE(arg=8, lineno=352)
DEBUG:numba.core.byteflow:stack ['$6compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=10 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=355)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=355)
DEBUG:numba.core.byteflow:stack ['$const10.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=14 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=357)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=4, lineno=357)
DEBUG:numba.core.byteflow:stack ['$const14.0.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=358)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=358)
DEBUG:numba.core.byteflow:stack ['$dest_ndim18.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_SUBTRACT(arg=None, lineno=358)
DEBUG:numba.core.byteflow:stack ['$dest_ndim18.1', '$src_ndim20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_FAST(arg=5, lineno=358)
DEBUG:numba.core.byteflow:stack ['$22binary_subtract.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=4, lineno=359)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=359)
DEBUG:numba.core.byteflow:stack ['$src_index26.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=COMPARE_OP(arg=0, lineno=359)
DEBUG:numba.core.byteflow:stack ['$src_index26.4', '$src_ndim28.5']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=POP_JUMP_IF_FALSE(arg=64, lineno=359)
DEBUG:numba.core.byteflow:stack ['$30compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=126, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=126 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=360)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=360)
DEBUG:numba.core.byteflow:stack ['$src_shape34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=360)
DEBUG:numba.core.byteflow:stack ['$src_shape34.0', '$src_index36.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_FAST(arg=6, lineno=360)
DEBUG:numba.core.byteflow:stack ['$38binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=361)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=5, lineno=361)
DEBUG:numba.core.byteflow:stack ['$dest_shape42.3']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=361)
DEBUG:numba.core.byteflow:stack ['$dest_shape42.3', '$dest_index44.4']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=STORE_FAST(arg=7, lineno=361)
DEBUG:numba.core.byteflow:stack ['$46binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=7, lineno=364)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=364)
DEBUG:numba.core.byteflow:stack ['$dest_dim_size50.6']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=COMPARE_OP(arg=3, lineno=364)
DEBUG:numba.core.byteflow:stack ['$dest_dim_size50.6', '$const52.7.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=POP_JUMP_IF_FALSE(arg=44, lineno=364)
DEBUG:numba.core.byteflow:stack ['$54compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=126 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=126 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=5, lineno=375)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=375)
DEBUG:numba.core.byteflow:stack ['$dest_index126.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=6, lineno=368)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=7, lineno=368)
DEBUG:numba.core.byteflow:stack ['$src_dim_size58.0']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=COMPARE_OP(arg=3, lineno=368)
DEBUG:numba.core.byteflow:stack ['$src_dim_size58.0', '$dest_dim_size60.1']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=POP_JUMP_IF_FALSE(arg=43, lineno=368)
DEBUG:numba.core.byteflow:stack ['$62compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=66, stack=(), blockstack=(), npush=0), Edge(pc=84, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=66 nstack_initial=0), State(pc_initial=84 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=6, lineno=370)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_CONST(arg=2, lineno=370)
DEBUG:numba.core.byteflow:stack ['$src_dim_size86.0']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=COMPARE_OP(arg=3, lineno=370)
DEBUG:numba.core.byteflow:stack ['$src_dim_size86.0', '$const88.1.2']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=POP_JUMP_IF_FALSE(arg=52, lineno=370)
DEBUG:numba.core.byteflow:stack ['$90compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=66 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=368)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=368)
DEBUG:numba.core.byteflow:stack ['$src_dim_size66.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=COMPARE_OP(arg=3, lineno=368)
DEBUG:numba.core.byteflow:stack ['$src_dim_size66.0', '$const68.1.2']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=POP_JUMP_IF_FALSE(arg=43, lineno=368)
DEBUG:numba.core.byteflow:stack ['$70compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0), Edge(pc=84, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=84 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=84 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=84, inst=JUMP_FORWARD(arg=8, lineno=369)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=94 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=6, lineno=372)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=3, lineno=372)
DEBUG:numba.core.byteflow:stack ['$src_dim_size94.0']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=5, lineno=372)
DEBUG:numba.core.byteflow:stack ['$src_dim_size94.0', '$dest_shape96.1']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=STORE_SUBSCR(arg=None, lineno=372)
DEBUG:numba.core.byteflow:stack ['$src_dim_size94.0', '$dest_shape96.1', '$dest_index98.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=4, lineno=373)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=373)
DEBUG:numba.core.byteflow:stack ['$src_index102.0']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=INPLACE_ADD(arg=None, lineno=373)
DEBUG:numba.core.byteflow:stack ['$src_index102.0', '$const104.1.2']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=STORE_FAST(arg=4, lineno=373)
DEBUG:numba.core.byteflow:stack ['$106inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=374)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=374)
DEBUG:numba.core.byteflow:stack ['$dest_index110.3']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=INPLACE_ADD(arg=None, lineno=374)
DEBUG:numba.core.byteflow:stack ['$dest_index110.3', '$const112.4.2']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=STORE_FAST(arg=5, lineno=374)
DEBUG:numba.core.byteflow:stack ['$114inplace_add.5']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=4, lineno=359)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=0, lineno=359)
DEBUG:numba.core.byteflow:stack ['$src_index118.6']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=COMPARE_OP(arg=0, lineno=359)
DEBUG:numba.core.byteflow:stack ['$src_index118.6', '$src_ndim120.7']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=POP_JUMP_IF_TRUE(arg=18, lineno=359)
DEBUG:numba.core.byteflow:stack ['$122compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=126, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=126 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=74 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=5, lineno=369)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_CONST(arg=2, lineno=369)
DEBUG:numba.core.byteflow:stack ['$dest_index74.0']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=BINARY_ADD(arg=None, lineno=369)
DEBUG:numba.core.byteflow:stack ['$dest_index74.0', '$const76.1.2']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=UNARY_NEGATIVE(arg=None, lineno=369)
DEBUG:numba.core.byteflow:stack ['$78binary_add.2']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=369)
DEBUG:numba.core.byteflow:stack ['$80unary_negative.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=126 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=126 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=126 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=126 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=126 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$src_ndim2.0'}), (4, {'res': '$dest_ndim4.1'}), (6, {'lhs': '$src_ndim2.0', 'rhs': '$dest_ndim4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 14: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$const10.0.1'}), (12, {'retval': '$const10.0.1', 'castval': '$12return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$const14.0.1'}), (16, {'value': '$const14.0.1'}), (18, {'res': '$dest_ndim18.1'}), (20, {'res': '$src_ndim20.2'}), (22, {'lhs': '$dest_ndim18.1', 'rhs': '$src_ndim20.2', 'res': '$22binary_subtract.3'}), (24, {'value': '$22binary_subtract.3'}), (26, {'res': '$src_index26.4'}), (28, {'res': '$src_ndim28.5'}), (30, {'lhs': '$src_index26.4', 'rhs': '$src_ndim28.5', 'res': '$30compare_op.6'}), (32, {'pred': '$30compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 126: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$src_shape34.0'}), (36, {'res': '$src_index36.1'}), (38, {'index': '$src_index36.1', 'target': '$src_shape34.0', 'res': '$38binary_subscr.2'}), (40, {'value': '$38binary_subscr.2'}), (42, {'res': '$dest_shape42.3'}), (44, {'res': '$dest_index44.4'}), (46, {'index': '$dest_index44.4', 'target': '$dest_shape42.3', 'res': '$46binary_subscr.5'}), (48, {'value': '$46binary_subscr.5'}), (50, {'res': '$dest_dim_size50.6'}), (52, {'res': '$const52.7.2'}), (54, {'lhs': '$dest_dim_size50.6', 'rhs': '$const52.7.2', 'res': '$54compare_op.8'}), (56, {'pred': '$54compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$src_dim_size58.0'}), (60, {'res': '$dest_dim_size60.1'}), (62, {'lhs': '$src_dim_size58.0', 'rhs': '$dest_dim_size60.1', 'res': '$62compare_op.2'}), (64, {'pred': '$62compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={66: (), 84: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$src_dim_size66.0'}), (68, {'res': '$const68.1.2'}), (70, {'lhs': '$src_dim_size66.0', 'rhs': '$const68.1.2', 'res': '$70compare_op.2'}), (72, {'pred': '$70compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: (), 84: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$dest_index74.0'}), (76, {'res': '$const76.1.2'}), (78, {'lhs': '$dest_index74.0', 'rhs': '$const76.1.2', 'res': '$78binary_add.2'}), (80, {'value': '$78binary_add.2', 'res': '$80unary_negative.3'}), (82, {'retval': '$80unary_negative.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$src_dim_size86.0'}), (88, {'res': '$const88.1.2'}), (90, {'lhs': '$src_dim_size86.0', 'rhs': '$const88.1.2', 'res': '$90compare_op.2'}), (92, {'pred': '$90compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: (), 102: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$src_dim_size94.0'}), (96, {'res': '$dest_shape96.1'}), (98, {'res': '$dest_index98.2'}), (100, {'target': '$dest_shape96.1', 'index': '$dest_index98.2', 'value': '$src_dim_size94.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$src_index102.0'}), (104, {'res': '$const104.1.2'}), (106, {'lhs': '$src_index102.0', 'rhs': '$const104.1.2', 'res': '$106inplace_add.2'}), (108, {'value': '$106inplace_add.2'}), (110, {'res': '$dest_index110.3'}), (112, {'res': '$const112.4.2'}), (114, {'lhs': '$dest_index110.3', 'rhs': '$const112.4.2', 'res': '$114inplace_add.5'}), (116, {'value': '$114inplace_add.5'}), (118, {'res': '$src_index118.6'}), (120, {'res': '$src_ndim120.7'}), (122, {'lhs': '$src_index118.6', 'rhs': '$src_ndim120.7', 'res': '$122compare_op.8'}), (124, {'pred': '$122compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={126: (), 34: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=126 nstack_initial=0):
AdaptBlockInfo(insts=((126, {'res': '$dest_index126.0'}), (128, {'retval': '$dest_index126.0', 'castval': '$128return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    src_ndim = arg(0, name=src_ndim)         ['src_ndim']
    src_shape = arg(1, name=src_shape)       ['src_shape']
    dest_ndim = arg(2, name=dest_ndim)       ['dest_ndim']
    dest_shape = arg(3, name=dest_shape)     ['dest_shape']
    $6compare_op.2 = src_ndim > dest_ndim    ['$6compare_op.2', 'dest_ndim', 'src_ndim']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:352),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
label 10:
    $const10.0.1 = const(int, 0)             ['$const10.0.1']
    $12return_value.1 = cast(value=$const10.0.1) ['$12return_value.1', '$const10.0.1']
    return $12return_value.1                 ['$12return_value.1']
label 14:
    src_index = const(int, 0)                ['src_index']
    dest_index = dest_ndim - src_ndim        ['dest_index', 'dest_ndim', 'src_ndim']
    $30compare_op.6 = src_index < src_ndim   ['$30compare_op.6', 'src_index', 'src_ndim']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.6, func=bool32, args=(Var($30compare_op.6, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$32pred', 'bool32']
    branch $32pred, 34, 126                  ['$32pred']
label 34:
    src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>) ['src_dim_size', 'src_index', 'src_shape']
    dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>) ['dest_dim_size', 'dest_index', 'dest_shape']
    $const52.7.2 = const(int, 1)             ['$const52.7.2']
    $54compare_op.8 = dest_dim_size != $const52.7.2 ['$54compare_op.8', '$const52.7.2', 'dest_dim_size']
    bool56 = global(bool: <class 'bool'>)    ['bool56']
    $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:364),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.8', '$56pred', 'bool56']
    branch $56pred, 58, 86                   ['$56pred']
label 58:
    $62compare_op.2 = src_dim_size != dest_dim_size ['$62compare_op.2', 'dest_dim_size', 'src_dim_size']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
    branch $64pred, 66, 84                   ['$64pred']
label 66:
    $const68.1.2 = const(int, 1)             ['$const68.1.2']
    $70compare_op.2 = src_dim_size != $const68.1.2 ['$70compare_op.2', '$const68.1.2', 'src_dim_size']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
    branch $72pred, 74, 84                   ['$72pred']
label 74:
    $const76.1.2 = const(int, 1)             ['$const76.1.2']
    $78binary_add.2 = dest_index + $const76.1.2 ['$78binary_add.2', '$const76.1.2', 'dest_index']
    $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2) ['$78binary_add.2', '$80unary_negative.3']
    $82return_value.4 = cast(value=$80unary_negative.3) ['$80unary_negative.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']
label 84:
    jump 102                                 []
label 86:
    $const88.1.2 = const(int, 1)             ['$const88.1.2']
    $90compare_op.2 = src_dim_size != $const88.1.2 ['$90compare_op.2', '$const88.1.2', 'src_dim_size']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:370),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
    branch $92pred, 94, 102                  ['$92pred']
label 94:
    dest_shape[dest_index] = src_dim_size    ['dest_index', 'dest_shape', 'src_dim_size']
    jump 102                                 []
label 102:
    $const104.1.2 = const(int, 1)            ['$const104.1.2']
    $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1.2, static_lhs=Undefined, static_rhs=Undefined) ['$106inplace_add.2', '$const104.1.2', 'src_index']
    src_index = $106inplace_add.2            ['$106inplace_add.2', 'src_index']
    $const112.4.2 = const(int, 1)            ['$const112.4.2']
    $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4.2, static_lhs=Undefined, static_rhs=Undefined) ['$114inplace_add.5', '$const112.4.2', 'dest_index']
    dest_index = $114inplace_add.5           ['$114inplace_add.5', 'dest_index']
    $122compare_op.8 = src_index < src_ndim  ['$122compare_op.8', 'src_index', 'src_ndim']
    bool124 = global(bool: <class 'bool'>)   ['bool124']
    $124pred = call bool124($122compare_op.8, func=bool124, args=(Var($122compare_op.8, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None) ['$122compare_op.8', '$124pred', 'bool124']
    branch $124pred, 34, 126                 ['$124pred']
label 126:
    $128return_value.1 = cast(value=dest_index) ['$128return_value.1', 'dest_index']
    return $128return_value.1                ['$128return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a67760>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:352),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block analysis pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a67760>
DEBUG:numba.core.ssa:on stmt: $const10.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0.1)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a67760>
DEBUG:numba.core.ssa:on stmt: src_index = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.6, func=bool32, args=(Var($30compare_op.6, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 126
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a67760>
DEBUG:numba.core.ssa:on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const52.7.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54compare_op.8 = dest_dim_size != $const52.7.2
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:364),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a67760>
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 84
DEBUG:numba.core.ssa:==== SSA block analysis pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a67760>
DEBUG:numba.core.ssa:on stmt: $const68.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = src_dim_size != $const68.1.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 84
DEBUG:numba.core.ssa:==== SSA block analysis pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a67760>
DEBUG:numba.core.ssa:on stmt: $const76.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $78binary_add.2 = dest_index + $const76.1.2
DEBUG:numba.core.ssa:on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
DEBUG:numba.core.ssa:on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $82return_value.4
DEBUG:numba.core.ssa:==== SSA block analysis pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a67760>
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a67760>
DEBUG:numba.core.ssa:on stmt: $const88.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = src_dim_size != $const88.1.2
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:370),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a67760>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a67760>
DEBUG:numba.core.ssa:on stmt: $const104.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index = $106inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const112.4.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index = $114inplace_add.5
DEBUG:numba.core.ssa:on stmt: $122compare_op.8 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.8, func=bool124, args=(Var($122compare_op.8, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 34, 126
DEBUG:numba.core.ssa:==== SSA block analysis pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a67760>
DEBUG:numba.core.ssa:on stmt: $128return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:on stmt: return $128return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$106inplace_add.2': [(<numba.core.ir.Assign object at 0x7f1590a66800>,
                                    102)],
             '$114inplace_add.5': [(<numba.core.ir.Assign object at 0x7f1590a66ce0>,
                                    102)],
             '$122compare_op.8': [(<numba.core.ir.Assign object at 0x7f1590a67160>,
                                   102)],
             '$124pred': [(<numba.core.ir.Assign object at 0x7f1590a673d0>,
                           102)],
             '$128return_value.1': [(<numba.core.ir.Assign object at 0x7f1590a67610>,
                                     126)],
             '$12return_value.1': [(<numba.core.ir.Assign object at 0x7f1590be3d00>,
                                    10)],
             '$30compare_op.6': [(<numba.core.ir.Assign object at 0x7f1590be08e0>,
                                  14)],
             '$32pred': [(<numba.core.ir.Assign object at 0x7f1590be00d0>, 14)],
             '$54compare_op.8': [(<numba.core.ir.Assign object at 0x7f1590bc77c0>,
                                  34)],
             '$56pred': [(<numba.core.ir.Assign object at 0x7f1590bc7a30>, 34)],
             '$62compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590be25f0>,
                                  58)],
             '$64pred': [(<numba.core.ir.Assign object at 0x7f1590be3ee0>, 58)],
             '$6compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590be2a40>,
                                 0)],
             '$70compare_op.2': [(<numba.core.ir.Assign object at 0x7f15909f5480>,
                                  66)],
             '$72pred': [(<numba.core.ir.Assign object at 0x7f1590bc7cd0>, 66)],
             '$78binary_add.2': [(<numba.core.ir.Assign object at 0x7f1590a654e0>,
                                  74)],
             '$80unary_negative.3': [(<numba.core.ir.Assign object at 0x7f1590a66380>,
                                      74)],
             '$82return_value.4': [(<numba.core.ir.Assign object at 0x7f1590a66200>,
                                    74)],
             '$8pred': [(<numba.core.ir.Assign object at 0x7f1590be3760>, 0)],
             '$90compare_op.2': [(<numba.core.ir.Assign object at 0x7f1590a659f0>,
                                  86)],
             '$92pred': [(<numba.core.ir.Assign object at 0x7f1590a65870>, 86)],
             '$const10.0.1': [(<numba.core.ir.Assign object at 0x7f1590be3b80>,
                               10)],
             '$const104.1.2': [(<numba.core.ir.Assign object at 0x7f1590a66650>,
                                102)],
             '$const112.4.2': [(<numba.core.ir.Assign object at 0x7f1590a66b30>,
                                102)],
             '$const52.7.2': [(<numba.core.ir.Assign object at 0x7f1590bc7610>,
                               34)],
             '$const68.1.2': [(<numba.core.ir.Assign object at 0x7f15909f4880>,
                               66)],
             '$const76.1.2': [(<numba.core.ir.Assign object at 0x7f1590bc6c50>,
                               74)],
             '$const88.1.2': [(<numba.core.ir.Assign object at 0x7f1590a65600>,
                               86)],
             'bool124': [(<numba.core.ir.Assign object at 0x7f1590a672b0>,
                          102)],
             'bool32': [(<numba.core.ir.Assign object at 0x7f1590be0130>, 14)],
             'bool56': [(<numba.core.ir.Assign object at 0x7f1590bc7910>, 34)],
             'bool64': [(<numba.core.ir.Assign object at 0x7f1590be3f40>, 58)],
             'bool72': [(<numba.core.ir.Assign object at 0x7f1590bc7520>, 66)],
             'bool8': [(<numba.core.ir.Assign object at 0x7f1590be38b0>, 0)],
             'bool92': [(<numba.core.ir.Assign object at 0x7f1590a656c0>, 86)],
             'dest_dim_size': [(<numba.core.ir.Assign object at 0x7f1590bc7280>,
                                34)],
             'dest_index': [(<numba.core.ir.Assign object at 0x7f1590be01c0>,
                             14),
                            (<numba.core.ir.Assign object at 0x7f1590a66da0>,
                             102)],
             'dest_ndim': [(<numba.core.ir.Assign object at 0x7f1590be2890>,
                            0)],
             'dest_shape': [(<numba.core.ir.Assign object at 0x7f1590be3cd0>,
                             0)],
             'src_dim_size': [(<numba.core.ir.Assign object at 0x7f1590bc7fa0>,
                               34)],
             'src_index': [(<numba.core.ir.Assign object at 0x7f1590be0eb0>,
                            14),
                           (<numba.core.ir.Assign object at 0x7f1590a668c0>,
                            102)],
             'src_ndim': [(<numba.core.ir.Assign object at 0x7f1590be3340>, 0)],
             'src_shape': [(<numba.core.ir.Assign object at 0x7f1590be07f0>,
                            0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15909f5c00>
DEBUG:numba.core.ssa:Fix SSA violator on var src_index
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:352),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const10.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0.1)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: src_index = const(int, 0)
DEBUG:numba.core.ssa:first assign: src_index
DEBUG:numba.core.ssa:replaced with: src_index = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.6, func=bool32, args=(Var($30compare_op.6, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const52.7.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54compare_op.8 = dest_dim_size != $const52.7.2
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:364),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const68.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = src_dim_size != $const68.1.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const76.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $78binary_add.2 = dest_index + $const76.1.2
DEBUG:numba.core.ssa:on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
DEBUG:numba.core.ssa:on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $82return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const88.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = src_dim_size != $const88.1.2
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:370),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const104.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index = $106inplace_add.2
DEBUG:numba.core.ssa:replaced with: src_index.1 = $106inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const112.4.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index = $114inplace_add.5
DEBUG:numba.core.ssa:on stmt: $122compare_op.8 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.8, func=bool124, args=(Var($122compare_op.8, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 34, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $128return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:on stmt: return $128return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x7f15909f5ff0>],
             102: [<numba.core.ir.Assign object at 0x7f1590a1ba90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:352),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const10.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0.1)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: src_index = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = src_index < src_ndim
DEBUG:numba.core.ssa:find_def var='src_index' stmt=$30compare_op.6 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.6, func=bool32, args=(Var($30compare_op.6, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='src_index' stmt=src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:insert phi node src_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 34
DEBUG:numba.core.ssa:find_def_from_bottom label 102
DEBUG:numba.core.ssa:incoming_def src_index.1 = $106inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 14
DEBUG:numba.core.ssa:incoming_def src_index = const(int, 0)
DEBUG:numba.core.ssa:replaced with: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const52.7.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54compare_op.8 = dest_dim_size != $const52.7.2
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:364),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const68.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = src_dim_size != $const68.1.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const76.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $78binary_add.2 = dest_index + $const76.1.2
DEBUG:numba.core.ssa:on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
DEBUG:numba.core.ssa:on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $82return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const88.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = src_dim_size != $const88.1.2
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:370),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const104.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='src_index' stmt=$106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 102
DEBUG:numba.core.ssa:idom 34 from label 102
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:replaced with: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const104.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index.1 = $106inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const112.4.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index = $114inplace_add.5
DEBUG:numba.core.ssa:on stmt: $122compare_op.8 = src_index < src_ndim
DEBUG:numba.core.ssa:find_def var='src_index' stmt=$122compare_op.8 = src_index < src_ndim
DEBUG:numba.core.ssa:replaced with: $122compare_op.8 = src_index.1 < src_ndim
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.8, func=bool124, args=(Var($122compare_op.8, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 34, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $128return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:on stmt: return $128return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var dest_index
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a1b9d0>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:352),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a1b9d0>
DEBUG:numba.core.ssa:on stmt: $const10.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0.1)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a1b9d0>
DEBUG:numba.core.ssa:on stmt: src_index = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:first assign: dest_index
DEBUG:numba.core.ssa:replaced with: dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.6, func=bool32, args=(Var($30compare_op.6, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a1b9d0>
DEBUG:numba.core.ssa:on stmt: src_index.2 = phi(incoming_values=[Var(src_index.1, npyimpl.py:373), Var(src_index, npyimpl.py:357)], incoming_blocks=[102, 14])
DEBUG:numba.core.ssa:on stmt: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const52.7.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54compare_op.8 = dest_dim_size != $const52.7.2
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:364),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a1b9d0>
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a1b9d0>
DEBUG:numba.core.ssa:on stmt: $const68.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = src_dim_size != $const68.1.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a1b9d0>
DEBUG:numba.core.ssa:on stmt: $const76.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $78binary_add.2 = dest_index + $const76.1.2
DEBUG:numba.core.ssa:on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
DEBUG:numba.core.ssa:on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $82return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a1b9d0>
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a1b9d0>
DEBUG:numba.core.ssa:on stmt: $const88.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = src_dim_size != $const88.1.2
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:370),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a1b9d0>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a1b9d0>
DEBUG:numba.core.ssa:on stmt: $const104.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const104.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index.1 = $106inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const112.4.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index = $114inplace_add.5
DEBUG:numba.core.ssa:replaced with: dest_index.1 = $114inplace_add.5
DEBUG:numba.core.ssa:on stmt: $122compare_op.8 = src_index.1 < src_ndim
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.8, func=bool124, args=(Var($122compare_op.8, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 34, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a1b9d0>
DEBUG:numba.core.ssa:on stmt: $128return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:on stmt: return $128return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x7f15909f5630>],
             102: [<numba.core.ir.Assign object at 0x7f1590a88250>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:352),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const10.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0.1)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: src_index = const(int, 0)
DEBUG:numba.core.ssa:on stmt: dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.6, func=bool32, args=(Var($30compare_op.6, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: src_index.2 = phi(incoming_values=[Var(src_index.1, npyimpl.py:373), Var(src_index, npyimpl.py:357)], incoming_blocks=[102, 14])
DEBUG:numba.core.ssa:on stmt: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:insert phi node dest_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 34
DEBUG:numba.core.ssa:find_def_from_bottom label 102
DEBUG:numba.core.ssa:incoming_def dest_index.1 = $114inplace_add.5
DEBUG:numba.core.ssa:find_def_from_bottom label 14
DEBUG:numba.core.ssa:incoming_def dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:replaced with: dest_dim_size = getitem(value=dest_shape, index=dest_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const52.7.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54compare_op.8 = dest_dim_size != $const52.7.2
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54compare_op.8, func=bool56, args=(Var($54compare_op.8, npyimpl.py:364),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const68.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = src_dim_size != $const68.1.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const76.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $78binary_add.2 = dest_index + $const76.1.2
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=$78binary_add.2 = dest_index + $const76.1.2
DEBUG:numba.core.ssa:find_def_from_top label 74
DEBUG:numba.core.ssa:idom 66 from label 74
DEBUG:numba.core.ssa:find_def_from_bottom label 66
DEBUG:numba.core.ssa:find_def_from_top label 66
DEBUG:numba.core.ssa:idom 58 from label 66
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 34 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:replaced with: $78binary_add.2 = dest_index.2 + $const76.1.2
DEBUG:numba.core.ssa:on stmt: $80unary_negative.3 = unary(fn=<built-in function neg>, value=$78binary_add.2)
DEBUG:numba.core.ssa:on stmt: $82return_value.4 = cast(value=$80unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $82return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const88.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = src_dim_size != $const88.1.2
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, npyimpl.py:370),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:find_def_from_top label 94
DEBUG:numba.core.ssa:idom 86 from label 94
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:idom 34 from label 86
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:replaced with: dest_shape[dest_index.2] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $const104.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const104.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index.1 = $106inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const112.4.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=$114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const112.4.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 102
DEBUG:numba.core.ssa:idom 34 from label 102
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:replaced with: $114inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index.2, rhs=$const112.4.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index.1 = $114inplace_add.5
DEBUG:numba.core.ssa:on stmt: $122compare_op.8 = src_index.1 < src_ndim
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($122compare_op.8, func=bool124, args=(Var($122compare_op.8, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 34, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f15909f4070>
DEBUG:numba.core.ssa:on stmt: $128return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=$128return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:insert phi node dest_index.3 = phi(incoming_values=[], incoming_blocks=[]) at 126
DEBUG:numba.core.ssa:find_def_from_bottom label 102
DEBUG:numba.core.ssa:incoming_def dest_index.1 = $114inplace_add.5
DEBUG:numba.core.ssa:find_def_from_bottom label 14
DEBUG:numba.core.ssa:incoming_def dest_index = dest_ndim - src_ndim
DEBUG:numba.core.ssa:replaced with: $128return_value.1 = cast(value=dest_index.3)
DEBUG:numba.core.ssa:on stmt: return $128return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	LOAD_FAST(arg=0, lineno=4333)
           4	LOAD_METHOD(arg=0, lineno=4333)
           6	LOAD_FAST(arg=1, lineno=4333)
           8	LOAD_FAST(arg=2, lineno=4333)
          10	CALL_METHOD(arg=2, lineno=4333)
          12	RETURN_VALUE(arg=None, lineno=4333)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4330)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4333)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4333)
DEBUG:numba.core.byteflow:stack ['$arrtype2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4333)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4333)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$size6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4333)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$size6.2', '$align8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4333)
DEBUG:numba.core.byteflow:stack ['$10call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590934880>
DEBUG:numba.core.ssa:on stmt: arrtype = arg(0, name=arrtype)
DEBUG:numba.core.ssa:on stmt: size = arg(1, name=size)
DEBUG:numba.core.ssa:on stmt: align = arg(2, name=align)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
DEBUG:numba.core.ssa:on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_method.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7f1590a9ba90>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7f1590a9b9a0>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7f1590a9b6d0>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7f1590a93dc0>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x7f1590a91a20>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x7f1590a935e0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590934880>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	LOAD_GLOBAL(arg=0, lineno=4326)
           4	LOAD_FAST(arg=1, lineno=4326)
           6	LOAD_FAST(arg=2, lineno=4326)
           8	CALL_FUNCTION(arg=2, lineno=4326)
          10	RETURN_VALUE(arg=None, lineno=4326)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4325)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4326)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4326)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4326)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$allocsize4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4326)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4326)
DEBUG:numba.core.byteflow:stack ['$8call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590a93340>
DEBUG:numba.core.ssa:on stmt: cls = arg(0, name=cls)
DEBUG:numba.core.ssa:on stmt: allocsize = arg(1, name=allocsize)
DEBUG:numba.core.ssa:on stmt: align = arg(2, name=align)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
DEBUG:numba.core.ssa:on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10return_value.4 = cast(value=$8call_function.3)
DEBUG:numba.core.ssa:on stmt: return $10return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x7f1590936050>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7f1590935b10>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x7f1590935f30>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x7f1590935990>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x7f1590935870>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x7f1590934a90>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590a93340>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=165)
           2	LOAD_DEREF(arg=0, lineno=166)
           4	STORE_FAST(arg=1, lineno=166)
           6	LOAD_GLOBAL(arg=0, lineno=167)
           8	LOAD_METHOD(arg=1, lineno=167)
          10	LOAD_FAST(arg=0, lineno=167)
          12	CALL_METHOD(arg=1, lineno=167)
          14	GET_ITER(arg=None, lineno=167)
>         16	FOR_ITER(arg=8, lineno=167)
          18	STORE_FAST(arg=2, lineno=167)
          20	LOAD_FAST(arg=1, lineno=168)
          22	LOAD_FAST(arg=2, lineno=168)
          24	LOAD_METHOD(arg=2, lineno=168)
          26	CALL_METHOD(arg=0, lineno=168)
          28	INPLACE_ADD(arg=None, lineno=168)
          30	STORE_FAST(arg=1, lineno=168)
          32	JUMP_ABSOLUTE(arg=9, lineno=168)
>         34	LOAD_FAST(arg=1, lineno=169)
          36	RETURN_VALUE(arg=None, lineno=169)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=165)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=166)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=1, lineno=166)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=167)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=167)
DEBUG:numba.core.byteflow:stack ['$6load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=167)
DEBUG:numba.core.byteflow:stack ['$8load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=167)
DEBUG:numba.core.byteflow:stack ['$8load_method.2', '$arr10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=GET_ITER(arg=None, lineno=167)
DEBUG:numba.core.byteflow:stack ['$12call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi16.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=16 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=16, inst=FOR_ITER(arg=8, lineno=167)
DEBUG:numba.core.byteflow:stack ['$phi16.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=169)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=RETURN_VALUE(arg=None, lineno=169)
DEBUG:numba.core.byteflow:stack ['$c34.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi18.0', '$phi18.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=18 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=2, lineno=167)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$phi18.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$c20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$c20.2', '$v22.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$c20.2', '$24load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$c20.2', '$26call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=1, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$28inplace_add.6']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=JUMP_ABSOLUTE(arg=9, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$arr10.3'}), (12, {'func': '$8load_method.2', 'args': ['$arr10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'retval': '$c34.0', 'castval': '$36return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    arr = arg(0, name=arr)                   ['arr']
    c = freevar(zero: 0.0)                   ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(arr, func=$8load_method.2, args=[Var(arr, old_arraymath.py:165)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'arr']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $36return_value.1 = cast(value=c)        ['$36return_value.1', 'c']
    return $36return_value.1                 ['$36return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590b3c880>
DEBUG:numba.core.ssa:on stmt: arr = arg(0, name=arr)
DEBUG:numba.core.ssa:on stmt: c = freevar(zero: 0.0)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $12call_method.4 = call $8load_method.2(arr, func=$8load_method.2, args=[Var(arr, old_arraymath.py:165)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
DEBUG:numba.core.ssa:on stmt: $phi16.0 = $14get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590b3c880>
DEBUG:numba.core.ssa:on stmt: $16for_iter.1 = iternext(value=$phi16.0)
DEBUG:numba.core.ssa:on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi18.1 = $16for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $16for_iter.3, 18, 34
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590b3c880>
DEBUG:numba.core.ssa:on stmt: v = $phi18.1
DEBUG:numba.core.ssa:on stmt: $24load_method.4 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $28inplace_add.6
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590b3c880>
DEBUG:numba.core.ssa:on stmt: $36return_value.1 = cast(value=c)
DEBUG:numba.core.ssa:on stmt: return $36return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12call_method.4': [(<numba.core.ir.Assign object at 0x7f1590bc5360>,
                                   0)],
             '$14get_iter.5': [(<numba.core.ir.Assign object at 0x7f1590bc54e0>,
                                0)],
             '$16for_iter.1': [(<numba.core.ir.Assign object at 0x7f1590bc6230>,
                                16)],
             '$16for_iter.2': [(<numba.core.ir.Assign object at 0x7f1590bc43d0>,
                                16)],
             '$16for_iter.3': [(<numba.core.ir.Assign object at 0x7f1590bc4be0>,
                                16)],
             '$24load_method.4': [(<numba.core.ir.Assign object at 0x7f1590bc44c0>,
                                   18)],
             '$26call_method.5': [(<numba.core.ir.Assign object at 0x7f1590bc5f90>,
                                   18)],
             '$28inplace_add.6': [(<numba.core.ir.Assign object at 0x7f1590bc6800>,
                                   18)],
             '$36return_value.1': [(<numba.core.ir.Assign object at 0x7f1590bc63b0>,
                                    34)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x7f1590934c10>,
                                  0)],
             '$8load_method.2': [(<numba.core.ir.Assign object at 0x7f1590936440>,
                                  0)],
             '$phi16.0': [(<numba.core.ir.Assign object at 0x7f1590bc4520>, 0)],
             '$phi18.1': [(<numba.core.ir.Assign object at 0x7f1590bc61d0>,
                           16)],
             'arr': [(<numba.core.ir.Assign object at 0x7f1590bc4c10>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7f1590bc49a0>, 0),
                   (<numba.core.ir.Assign object at 0x7f1590bc66e0>, 18)],
             'v': [(<numba.core.ir.Assign object at 0x7f1590bc41f0>, 18)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590b3c880>
DEBUG:numba.core.ssa:Fix SSA violator on var c
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590b3caf0>
DEBUG:numba.core.ssa:on stmt: arr = arg(0, name=arr)
DEBUG:numba.core.ssa:on stmt: c = freevar(zero: 0.0)
DEBUG:numba.core.ssa:first assign: c
DEBUG:numba.core.ssa:replaced with: c = freevar(zero: 0.0)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $12call_method.4 = call $8load_method.2(arr, func=$8load_method.2, args=[Var(arr, old_arraymath.py:165)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
DEBUG:numba.core.ssa:on stmt: $phi16.0 = $14get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590b3caf0>
DEBUG:numba.core.ssa:on stmt: $16for_iter.1 = iternext(value=$phi16.0)
DEBUG:numba.core.ssa:on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi18.1 = $16for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $16for_iter.3, 18, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590b3caf0>
DEBUG:numba.core.ssa:on stmt: v = $phi18.1
DEBUG:numba.core.ssa:on stmt: $24load_method.4 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $28inplace_add.6
DEBUG:numba.core.ssa:replaced with: c.1 = $28inplace_add.6
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590b3caf0>
DEBUG:numba.core.ssa:on stmt: $36return_value.1 = cast(value=c)
DEBUG:numba.core.ssa:on stmt: return $36return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1590b3cb80>],
             18: [<numba.core.ir.Assign object at 0x7f1590b3cdf0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590b3caf0>
DEBUG:numba.core.ssa:on stmt: arr = arg(0, name=arr)
DEBUG:numba.core.ssa:on stmt: c = freevar(zero: 0.0)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $12call_method.4 = call $8load_method.2(arr, func=$8load_method.2, args=[Var(arr, old_arraymath.py:165)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
DEBUG:numba.core.ssa:on stmt: $phi16.0 = $14get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590b3caf0>
DEBUG:numba.core.ssa:on stmt: $16for_iter.1 = iternext(value=$phi16.0)
DEBUG:numba.core.ssa:on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi18.1 = $16for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $16for_iter.3, 18, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590b3caf0>
DEBUG:numba.core.ssa:on stmt: v = $phi18.1
DEBUG:numba.core.ssa:on stmt: $24load_method.4 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 18
DEBUG:numba.core.ssa:idom 16 from label 18
DEBUG:numba.core.ssa:find_def_from_bottom label 16
DEBUG:numba.core.ssa:find_def_from_top label 16
DEBUG:numba.core.ssa:insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def c = freevar(zero: 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:incoming_def c.1 = $28inplace_add.6
DEBUG:numba.core.ssa:replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c.1 = $28inplace_add.6
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590b3caf0>
DEBUG:numba.core.ssa:on stmt: $36return_value.1 = cast(value=c)
DEBUG:numba.core.ssa:find_def var='c' stmt=$36return_value.1 = cast(value=c)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 16 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 16
DEBUG:numba.core.ssa:replaced with: $36return_value.1 = cast(value=c.2)
DEBUG:numba.core.ssa:on stmt: return $36return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3601)
           2	LOAD_GLOBAL(arg=0, lineno=3602)
           4	LOAD_FAST(arg=0, lineno=3602)
           6	CALL_FUNCTION(arg=1, lineno=3602)
           8	STORE_FAST(arg=2, lineno=3602)
          10	LOAD_GLOBAL(arg=1, lineno=3603)
          12	LOAD_FAST(arg=2, lineno=3603)
          14	CALL_FUNCTION(arg=1, lineno=3603)
          16	GET_ITER(arg=None, lineno=3603)
>         18	FOR_ITER(arg=20, lineno=3603)
          20	STORE_FAST(arg=3, lineno=3603)
          22	LOAD_FAST(arg=0, lineno=3604)
          24	LOAD_FAST(arg=3, lineno=3604)
          26	BINARY_SUBSCR(arg=None, lineno=3604)
          28	LOAD_FAST(arg=1, lineno=3604)
          30	LOAD_GLOBAL(arg=0, lineno=3604)
          32	LOAD_FAST(arg=1, lineno=3604)
          34	CALL_FUNCTION(arg=1, lineno=3604)
          36	LOAD_FAST(arg=2, lineno=3604)
          38	BINARY_SUBTRACT(arg=None, lineno=3604)
          40	LOAD_FAST(arg=3, lineno=3604)
          42	BINARY_ADD(arg=None, lineno=3604)
          44	BINARY_SUBSCR(arg=None, lineno=3604)
          46	COMPARE_OP(arg=3, lineno=3604)
          48	POP_JUMP_IF_FALSE(arg=30, lineno=3604)
          50	LOAD_GLOBAL(arg=2, lineno=3605)
          52	LOAD_CONST(arg=1, lineno=3605)
          54	CALL_FUNCTION(arg=1, lineno=3605)
          56	RAISE_VARARGS(arg=1, lineno=3605)
>         58	JUMP_ABSOLUTE(arg=10, lineno=3604)
>         60	LOAD_CONST(arg=0, lineno=3603)
          62	RETURN_VALUE(arg=None, lineno=3603)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3601)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3602)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3602)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=3602)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=2, lineno=3602)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=3603)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$10load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$10load_global.3', '$n12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=GET_ITER(arg=None, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$14call_function.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=18, stack=('$16get_iter.6',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi18.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=18 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=18, inst=FOR_ITER(arg=20, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=60 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=0, lineno=3603)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=RETURN_VALUE(arg=None, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$const60.0.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi20.0', '$phi20.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=20 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=20, inst=STORE_FAST(arg=3, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$phi20.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$shape22.2']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$shape22.2', '$i24.3']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_GLOBAL(arg=0, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6', '$main_shape32.7']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_SUBTRACT(arg=None, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8', '$n36.9']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=3, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_ADD(arg=None, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10', '$i40.11']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$42binary_add.12']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=COMPARE_OP(arg=3, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$44binary_subscr.13']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=POP_JUMP_IF_FALSE(arg=30, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$46compare_op.14']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=('$phi20.0',), blockstack=(), npush=0), Edge(pc=58, stack=('$phi20.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=58 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi50.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_GLOBAL(arg=2, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$phi50.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$phi50.0', '$50load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=CALL_FUNCTION(arg=1, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$phi50.0', '$50load_global.1', '$const52.2.1']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$phi50.0', '$54call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi58.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=JUMP_ABSOLUTE(arg=10, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi58.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=18, stack=('$phi58.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=58 nstack_initial=1): set(),
             State(pc_initial=60 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi58.0', State(pc_initial=58 nstack_initial=1))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi58.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi18.0': {('$16get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$16get_iter.6'},
             State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'func': '$2load_global.0', 'args': ['$shape4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$n12.4'}), (14, {'func': '$10load_global.3', 'args': ['$n12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5', 'res': '$16get_iter.6'})), outgoing_phis={'$phi18.0': '$16get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.6',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 20: ('$phi18.0', '$18for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'value': '$phi20.1'}), (22, {'res': '$shape22.2'}), (24, {'res': '$i24.3'}), (26, {'index': '$i24.3', 'target': '$shape22.2', 'res': '$26binary_subscr.4'}), (28, {'res': '$main_shape28.5'}), (30, {'res': '$30load_global.6'}), (32, {'res': '$main_shape32.7'}), (34, {'func': '$30load_global.6', 'args': ['$main_shape32.7'], 'res': '$34call_function.8'}), (36, {'res': '$n36.9'}), (38, {'lhs': '$34call_function.8', 'rhs': '$n36.9', 'res': '$38binary_subtract.10'}), (40, {'res': '$i40.11'}), (42, {'lhs': '$38binary_subtract.10', 'rhs': '$i40.11', 'res': '$42binary_add.12'}), (44, {'index': '$42binary_add.12', 'target': '$main_shape28.5', 'res': '$44binary_subscr.13'}), (46, {'lhs': '$26binary_subscr.4', 'rhs': '$44binary_subscr.13', 'res': '$46compare_op.14'}), (48, {'pred': '$46compare_op.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi20.0',), 58: ('$phi20.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'res': '$50load_global.1'}), (52, {'res': '$const52.2.1'}), (54, {'func': '$50load_global.1', 'args': ['$const52.2.1'], 'res': '$54call_function.3'}), (56, {'exc': '$54call_function.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=1):
AdaptBlockInfo(insts=((58, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi58.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$const60.0.0'}), (62, {'retval': '$const60.0.0', 'castval': '$62return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:3601)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'n', 'shape']
    $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3602)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'n']
    $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
    $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 60             ['$18for_iter.3']
label 20:
    i = $phi20.1                             ['$phi20.1', 'i']
    $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
    $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
    $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:3601)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
    $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
    $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
    $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
    $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
    $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3604),), kws=(), vararg=None, varkwarg=None, target=None) ['$46compare_op.14', '$48pred', 'bool48']
    branch $48pred, 50, 58                   ['$48pred']
label 50:
    $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
    $const52.2.1 = const(str, nditer(): operands could not be broadcast together) ['$const52.2.1']
    $54call_function.3 = call $50load_global.1($const52.2.1, func=$50load_global.1, args=[Var($const52.2.1, arrayobj.py:3605)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$54call_function.3', '$const52.2.1']
    raise $54call_function.3                 ['$54call_function.3']
label 58:
    jump 18                                  []
label 60:
    $const60.0.0 = const(NoneType, None)     ['$const60.0.0']
    $62return_value.1 = cast(value=$const60.0.0) ['$62return_value.1', '$const60.0.0']
    return $62return_value.1                 ['$62return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590b6b670>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: main_shape = arg(1, name=main_shape)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3602)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.6 = getiter(value=$14call_function.5)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590b6b670>
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 60
DEBUG:numba.core.ssa:==== SSA block analysis pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590b6b670>
DEBUG:numba.core.ssa:on stmt: i = $phi20.1
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $30load_global.6 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $34call_function.8 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38binary_subtract.10 = $34call_function.8 - n
DEBUG:numba.core.ssa:on stmt: $42binary_add.12 = $38binary_subtract.10 + i
DEBUG:numba.core.ssa:on stmt: $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13
DEBUG:numba.core.ssa:on stmt: bool48 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3604),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $48pred, 50, 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590b6b670>
DEBUG:numba.core.ssa:on stmt: $50load_global.1 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const52.2.1 = const(str, nditer(): operands could not be broadcast together)
DEBUG:numba.core.ssa:on stmt: $54call_function.3 = call $50load_global.1($const52.2.1, func=$50load_global.1, args=[Var($const52.2.1, arrayobj.py:3605)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590b6b670>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block analysis pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590b6b670>
DEBUG:numba.core.ssa:on stmt: $const60.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $62return_value.1 = cast(value=$const60.0.0)
DEBUG:numba.core.ssa:on stmt: return $62return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10load_global.3': [(<numba.core.ir.Assign object at 0x7f1590b6ab00>,
                                   0)],
             '$14call_function.5': [(<numba.core.ir.Assign object at 0x7f1590b6ae60>,
                                     0)],
             '$16get_iter.6': [(<numba.core.ir.Assign object at 0x7f1590b680a0>,
                                0)],
             '$18for_iter.1': [(<numba.core.ir.Assign object at 0x7f1590b68370>,
                                18)],
             '$18for_iter.2': [(<numba.core.ir.Assign object at 0x7f1590b68460>,
                                18)],
             '$18for_iter.3': [(<numba.core.ir.Assign object at 0x7f1590b68580>,
                                18)],
             '$26binary_subscr.4': [(<numba.core.ir.Assign object at 0x7f1590b69210>,
                                     20)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7f1590b6b430>,
                                  0)],
             '$30load_global.6': [(<numba.core.ir.Assign object at 0x7f1590b69450>,
                                   20)],
             '$34call_function.8': [(<numba.core.ir.Assign object at 0x7f1590b69780>,
                                     20)],
             '$38binary_subtract.10': [(<numba.core.ir.Assign object at 0x7f1590b699c0>,
                                        20)],
             '$42binary_add.12': [(<numba.core.ir.Assign object at 0x7f1590b69c30>,
                                   20)],
             '$44binary_subscr.13': [(<numba.core.ir.Assign object at 0x7f1590b6a320>,
                                      20)],
             '$46compare_op.14': [(<numba.core.ir.Assign object at 0x7f1590b19ab0>,
                                   20)],
             '$48pred': [(<numba.core.ir.Assign object at 0x7f1590b186d0>, 20)],
             '$50load_global.1': [(<numba.core.ir.Assign object at 0x7f1590b69a50>,
                                   50)],
             '$54call_function.3': [(<numba.core.ir.Assign object at 0x7f1590b1a6e0>,
                                     50)],
             '$62return_value.1': [(<numba.core.ir.Assign object at 0x7f1590b1bf40>,
                                    60)],
             '$const52.2.1': [(<numba.core.ir.Assign object at 0x7f1590b18f10>,
                               50)],
             '$const60.0.0': [(<numba.core.ir.Assign object at 0x7f1590b1bdc0>,
                               60)],
             '$phi18.0': [(<numba.core.ir.Assign object at 0x7f1590b6b280>, 0)],
             '$phi20.1': [(<numba.core.ir.Assign object at 0x7f1590b68250>,
                           18)],
             'bool48': [(<numba.core.ir.Assign object at 0x7f1590b19ae0>, 20)],
             'i': [(<numba.core.ir.Assign object at 0x7f1590b689d0>, 20)],
             'main_shape': [(<numba.core.ir.Assign object at 0x7f1590b68bb0>,
                             0)],
             'n': [(<numba.core.ir.Assign object at 0x7f1590b6a9e0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7f1590b6af80>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590b6b670>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=1)
           6	CALL_FUNCTION(arg=1, lineno=1)
           8	RETURN_VALUE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$numer_data_24.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$numer_data_24.1'}), (6, {'func': '$2load_global.0', 'args': ['$numer_data_24.1'], 'res': '$6call_function.2'}), (8, {'retval': '$6call_function.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    numer_data_2 = arg(0, name=numer_data_2) ['numer_data_2']
    $2load_global.0 = global(__ufunc_or_dufunc_0x7f161f81e14: <ufunc 'absolute'>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(numer_data_2, func=$2load_global.0, args=[Var(numer_data_2, sparse.py:1)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'numer_data_2']
    $8return_value.3 = cast(value=$6call_function.2) ['$6call_function.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590c5a020>
DEBUG:numba.core.ssa:on stmt: numer_data_2 = arg(0, name=numer_data_2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(__ufunc_or_dufunc_0x7f161f81e14: <ufunc 'absolute'>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_global.0(numer_data_2, func=$2load_global.0, args=[Var(numer_data_2, sparse.py:1)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6call_function.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$2load_global.0': [(<numba.core.ir.Assign object at 0x7f1590c58910>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7f1590c5ae60>,
                                    0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x7f1590c5a530>,
                                   0)],
             'numer_data_2': [(<numba.core.ir.Assign object at 0x7f1590c5bb50>,
                               0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590c5a020>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=463)
           2	LOAD_GLOBAL(arg=0, lineno=476)
           4	LOAD_FAST(arg=0, lineno=476)
           6	LOAD_FAST(arg=1, lineno=476)
           8	LOAD_FAST(arg=2, lineno=476)
          10	LOAD_FAST(arg=3, lineno=476)
          12	CALL_FUNCTION(arg=4, lineno=476)
          14	UNPACK_SEQUENCE(arg=2, lineno=476)
          16	STORE_FAST(arg=4, lineno=476)
          18	STORE_FAST(arg=5, lineno=476)
          20	LOAD_GLOBAL(arg=1, lineno=477)
          22	LOAD_METHOD(arg=2, lineno=477)
          24	LOAD_FAST(arg=5, lineno=477)
          26	CALL_METHOD(arg=1, lineno=477)
          28	STORE_FAST(arg=5, lineno=477)
          30	LOAD_FAST(arg=5, lineno=479)
          32	LOAD_ATTR(arg=3, lineno=479)
          34	LOAD_CONST(arg=1, lineno=479)
          36	BINARY_SUBSCR(arg=None, lineno=479)
          38	LOAD_CONST(arg=1, lineno=479)
          40	COMPARE_OP(arg=2, lineno=479)
          42	POP_JUMP_IF_FALSE(arg=25, lineno=479)
          44	LOAD_CONST(arg=2, lineno=480)
          46	RETURN_VALUE(arg=None, lineno=480)
>         48	LOAD_GLOBAL(arg=1, lineno=482)
          50	LOAD_METHOD(arg=4, lineno=482)
          52	LOAD_FAST(arg=5, lineno=482)
          54	CALL_METHOD(arg=1, lineno=482)
          56	STORE_FAST(arg=6, lineno=482)
          58	LOAD_FAST(arg=6, lineno=484)
          60	LOAD_CONST(arg=2, lineno=484)
          62	COMPARE_OP(arg=2, lineno=484)
          64	POP_JUMP_IF_FALSE(arg=36, lineno=484)
          66	LOAD_CONST(arg=2, lineno=485)
          68	RETURN_VALUE(arg=None, lineno=485)
>         70	LOAD_GLOBAL(arg=5, lineno=487)
          72	LOAD_FAST(arg=0, lineno=487)
          74	LOAD_FAST(arg=1, lineno=487)
          76	LOAD_FAST(arg=2, lineno=487)
          78	LOAD_FAST(arg=3, lineno=487)
          80	CALL_FUNCTION(arg=4, lineno=487)
          82	UNPACK_SEQUENCE(arg=2, lineno=487)
          84	STORE_FAST(arg=4, lineno=487)
          86	STORE_FAST(arg=7, lineno=487)
          88	LOAD_GLOBAL(arg=1, lineno=488)
          90	LOAD_METHOD(arg=2, lineno=488)
          92	LOAD_FAST(arg=7, lineno=488)
          94	CALL_METHOD(arg=1, lineno=488)
          96	STORE_FAST(arg=7, lineno=488)
          98	LOAD_GLOBAL(arg=1, lineno=490)
         100	LOAD_METHOD(arg=4, lineno=490)
         102	LOAD_FAST(arg=7, lineno=490)
         104	CALL_METHOD(arg=1, lineno=490)
         106	STORE_FAST(arg=8, lineno=490)
         108	LOAD_GLOBAL(arg=6, lineno=492)
         110	LOAD_FAST(arg=8, lineno=492)
         112	CALL_FUNCTION(arg=1, lineno=492)
         114	LOAD_FAST(arg=6, lineno=492)
         116	BINARY_TRUE_DIVIDE(arg=None, lineno=492)
         118	RETURN_VALUE(arg=None, lineno=492)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=463)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=476)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=476)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=476)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=476)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$data16.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=3, lineno=476)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$data16.2', '$ind28.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_FUNCTION(arg=4, lineno=476)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$data16.2', '$ind28.3', '$data210.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=UNPACK_SEQUENCE(arg=2, lineno=476)
DEBUG:numba.core.byteflow:stack ['$12call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=4, lineno=476)
DEBUG:numba.core.byteflow:stack ['$14unpack_sequence.7', '$14unpack_sequence.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=5, lineno=476)
DEBUG:numba.core.byteflow:stack ['$14unpack_sequence.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=477)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=477)
DEBUG:numba.core.byteflow:stack ['$20load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=477)
DEBUG:numba.core.byteflow:stack ['$22load_method.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=477)
DEBUG:numba.core.byteflow:stack ['$22load_method.10', '$denom_data24.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_FAST(arg=5, lineno=477)
DEBUG:numba.core.byteflow:stack ['$26call_method.12']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=5, lineno=479)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_ATTR(arg=3, lineno=479)
DEBUG:numba.core.byteflow:stack ['$denom_data30.13']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=479)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=479)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$const34.15.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=479)
DEBUG:numba.core.byteflow:stack ['$36binary_subscr.16']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=2, lineno=479)
DEBUG:numba.core.byteflow:stack ['$36binary_subscr.16', '$const38.17.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=25, lineno=479)
DEBUG:numba.core.byteflow:stack ['$40compare_op.18']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=44 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=480)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=480)
DEBUG:numba.core.byteflow:stack ['$const44.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_GLOBAL(arg=1, lineno=482)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_METHOD(arg=4, lineno=482)
DEBUG:numba.core.byteflow:stack ['$48load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=5, lineno=482)
DEBUG:numba.core.byteflow:stack ['$50load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=CALL_METHOD(arg=1, lineno=482)
DEBUG:numba.core.byteflow:stack ['$50load_method.1', '$denom_data52.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=STORE_FAST(arg=6, lineno=482)
DEBUG:numba.core.byteflow:stack ['$54call_method.3']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=6, lineno=484)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=484)
DEBUG:numba.core.byteflow:stack ['$denominator58.4']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=COMPARE_OP(arg=2, lineno=484)
DEBUG:numba.core.byteflow:stack ['$denominator58.4', '$const60.5.2']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=POP_JUMP_IF_FALSE(arg=36, lineno=484)
DEBUG:numba.core.byteflow:stack ['$62compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=66, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=70 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=66 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_CONST(arg=2, lineno=485)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=RETURN_VALUE(arg=None, lineno=485)
DEBUG:numba.core.byteflow:stack ['$const66.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=70 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=70 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_GLOBAL(arg=5, lineno=487)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=0, lineno=487)
DEBUG:numba.core.byteflow:stack ['$70load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=487)
DEBUG:numba.core.byteflow:stack ['$70load_global.0', '$ind172.1']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=2, lineno=487)
DEBUG:numba.core.byteflow:stack ['$70load_global.0', '$ind172.1', '$data174.2']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=3, lineno=487)
DEBUG:numba.core.byteflow:stack ['$70load_global.0', '$ind172.1', '$data174.2', '$ind276.3']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=CALL_FUNCTION(arg=4, lineno=487)
DEBUG:numba.core.byteflow:stack ['$70load_global.0', '$ind172.1', '$data174.2', '$ind276.3', '$data278.4']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=UNPACK_SEQUENCE(arg=2, lineno=487)
DEBUG:numba.core.byteflow:stack ['$80call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=STORE_FAST(arg=4, lineno=487)
DEBUG:numba.core.byteflow:stack ['$82unpack_sequence.7', '$82unpack_sequence.6']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=STORE_FAST(arg=7, lineno=487)
DEBUG:numba.core.byteflow:stack ['$82unpack_sequence.7']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_GLOBAL(arg=1, lineno=488)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_METHOD(arg=2, lineno=488)
DEBUG:numba.core.byteflow:stack ['$88load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=7, lineno=488)
DEBUG:numba.core.byteflow:stack ['$90load_method.10']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=CALL_METHOD(arg=1, lineno=488)
DEBUG:numba.core.byteflow:stack ['$90load_method.10', '$numer_data92.11']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=STORE_FAST(arg=7, lineno=488)
DEBUG:numba.core.byteflow:stack ['$94call_method.12']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_GLOBAL(arg=1, lineno=490)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_METHOD(arg=4, lineno=490)
DEBUG:numba.core.byteflow:stack ['$98load_global.13']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=7, lineno=490)
DEBUG:numba.core.byteflow:stack ['$100load_method.14']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=CALL_METHOD(arg=1, lineno=490)
DEBUG:numba.core.byteflow:stack ['$100load_method.14', '$numer_data102.15']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=STORE_FAST(arg=8, lineno=490)
DEBUG:numba.core.byteflow:stack ['$104call_method.16']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_GLOBAL(arg=6, lineno=492)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=8, lineno=492)
DEBUG:numba.core.byteflow:stack ['$108load_global.17']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=CALL_FUNCTION(arg=1, lineno=492)
DEBUG:numba.core.byteflow:stack ['$108load_global.17', '$numerator110.18']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=6, lineno=492)
DEBUG:numba.core.byteflow:stack ['$112call_function.19']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=492)
DEBUG:numba.core.byteflow:stack ['$112call_function.19', '$denominator114.20']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=RETURN_VALUE(arg=None, lineno=492)
DEBUG:numba.core.byteflow:stack ['$116binary_true_divide.21']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$ind14.1'}), (6, {'res': '$data16.2'}), (8, {'res': '$ind28.3'}), (10, {'res': '$data210.4'}), (12, {'func': '$2load_global.0', 'args': ['$ind14.1', '$data16.2', '$ind28.3', '$data210.4'], 'res': '$12call_function.5'}), (14, {'iterable': '$12call_function.5', 'stores': ['$14unpack_sequence.6', '$14unpack_sequence.7'], 'tupleobj': '$14unpack_sequence.8'}), (16, {'value': '$14unpack_sequence.6'}), (18, {'value': '$14unpack_sequence.7'}), (20, {'res': '$20load_global.9'}), (22, {'item': '$20load_global.9', 'res': '$22load_method.10'}), (24, {'res': '$denom_data24.11'}), (26, {'func': '$22load_method.10', 'args': ['$denom_data24.11'], 'res': '$26call_method.12'}), (28, {'value': '$26call_method.12'}), (30, {'res': '$denom_data30.13'}), (32, {'item': '$denom_data30.13', 'res': '$32load_attr.14'}), (34, {'res': '$const34.15.1'}), (36, {'index': '$const34.15.1', 'target': '$32load_attr.14', 'res': '$36binary_subscr.16'}), (38, {'res': '$const38.17.1'}), (40, {'lhs': '$36binary_subscr.16', 'rhs': '$const38.17.1', 'res': '$40compare_op.18'}), (42, {'pred': '$40compare_op.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0.2'}), (46, {'retval': '$const44.0.2', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_global.0'}), (50, {'item': '$48load_global.0', 'res': '$50load_method.1'}), (52, {'res': '$denom_data52.2'}), (54, {'func': '$50load_method.1', 'args': ['$denom_data52.2'], 'res': '$54call_method.3'}), (56, {'value': '$54call_method.3'}), (58, {'res': '$denominator58.4'}), (60, {'res': '$const60.5.2'}), (62, {'lhs': '$denominator58.4', 'rhs': '$const60.5.2', 'res': '$62compare_op.6'}), (64, {'pred': '$62compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={66: (), 70: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$const66.0.2'}), (68, {'retval': '$const66.0.2', 'castval': '$68return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$70load_global.0'}), (72, {'res': '$ind172.1'}), (74, {'res': '$data174.2'}), (76, {'res': '$ind276.3'}), (78, {'res': '$data278.4'}), (80, {'func': '$70load_global.0', 'args': ['$ind172.1', '$data174.2', '$ind276.3', '$data278.4'], 'res': '$80call_function.5'}), (82, {'iterable': '$80call_function.5', 'stores': ['$82unpack_sequence.6', '$82unpack_sequence.7'], 'tupleobj': '$82unpack_sequence.8'}), (84, {'value': '$82unpack_sequence.6'}), (86, {'value': '$82unpack_sequence.7'}), (88, {'res': '$88load_global.9'}), (90, {'item': '$88load_global.9', 'res': '$90load_method.10'}), (92, {'res': '$numer_data92.11'}), (94, {'func': '$90load_method.10', 'args': ['$numer_data92.11'], 'res': '$94call_method.12'}), (96, {'value': '$94call_method.12'}), (98, {'res': '$98load_global.13'}), (100, {'item': '$98load_global.13', 'res': '$100load_method.14'}), (102, {'res': '$numer_data102.15'}), (104, {'func': '$100load_method.14', 'args': ['$numer_data102.15'], 'res': '$104call_method.16'}), (106, {'value': '$104call_method.16'}), (108, {'res': '$108load_global.17'}), (110, {'res': '$numerator110.18'}), (112, {'func': '$108load_global.17', 'args': ['$numerator110.18'], 'res': '$112call_function.19'}), (114, {'res': '$denominator114.20'}), (116, {'lhs': '$112call_function.19', 'rhs': '$denominator114.20', 'res': '$116binary_true_divide.21'}), (118, {'retval': '$116binary_true_divide.21', 'castval': '$118return_value.22'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    ind1 = arg(0, name=ind1)                 ['ind1']
    data1 = arg(1, name=data1)               ['data1']
    ind2 = arg(2, name=ind2)                 ['ind2']
    data2 = arg(3, name=data2)               ['data2']
    $2load_global.0 = global(sparse_sum: CPUDispatcher(<function sparse_sum at 0x7f15912ca950>)) ['$2load_global.0']
    $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_function.5', '$2load_global.0', 'data1', 'data2', 'ind1', 'ind2']
    $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2) ['$12call_function.5', '$14unpack_sequence.8']
    $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>) ['$14unpack_sequence.6', '$14unpack_sequence.8']
    $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>) ['$14unpack_sequence.7', '$14unpack_sequence.8']
    _ = $14unpack_sequence.6                 ['$14unpack_sequence.6', '_']
    denom_data = $14unpack_sequence.7        ['$14unpack_sequence.7', 'denom_data']
    $20load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.9']
    $22load_method.10 = getattr(value=$20load_global.9, attr=abs) ['$20load_global.9', '$22load_method.10']
    denom_data.1 = call $22load_method.10(denom_data, func=$22load_method.10, args=[Var(denom_data, sparse.py:476)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.10', 'denom_data', 'denom_data.1']
    $32load_attr.14 = getattr(value=denom_data.1, attr=shape) ['$32load_attr.14', 'denom_data.1']
    $const34.15.1 = const(int, 0)            ['$const34.15.1']
    $36binary_subscr.16 = getitem(value=$32load_attr.14, index=$const34.15.1, fn=<built-in function getitem>) ['$32load_attr.14', '$36binary_subscr.16', '$const34.15.1']
    $const38.17.1 = const(int, 0)            ['$const38.17.1']
    $40compare_op.18 = $36binary_subscr.16 == $const38.17.1 ['$36binary_subscr.16', '$40compare_op.18', '$const38.17.1']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.18, func=bool42, args=(Var($40compare_op.18, sparse.py:479),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.18', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $const44.0.2 = const(float, 0.0)         ['$const44.0.2']
    $46return_value.1 = cast(value=$const44.0.2) ['$46return_value.1', '$const44.0.2']
    return $46return_value.1                 ['$46return_value.1']
label 48:
    $48load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$48load_global.0']
    $50load_method.1 = getattr(value=$48load_global.0, attr=sum) ['$48load_global.0', '$50load_method.1']
    denominator = call $50load_method.1(denom_data.1, func=$50load_method.1, args=[Var(denom_data.1, sparse.py:477)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_method.1', 'denom_data.1', 'denominator']
    $const60.5.2 = const(float, 0.0)         ['$const60.5.2']
    $62compare_op.6 = denominator == $const60.5.2 ['$62compare_op.6', '$const60.5.2', 'denominator']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($62compare_op.6, func=bool64, args=(Var($62compare_op.6, sparse.py:484),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.6', '$64pred', 'bool64']
    branch $64pred, 66, 70                   ['$64pred']
label 66:
    $const66.0.2 = const(float, 0.0)         ['$const66.0.2']
    $68return_value.1 = cast(value=$const66.0.2) ['$68return_value.1', '$const66.0.2']
    return $68return_value.1                 ['$68return_value.1']
label 70:
    $70load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>)) ['$70load_global.0']
    $80call_function.5 = call $70load_global.0(ind1, data1, ind2, data2, func=$70load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.0', '$80call_function.5', 'data1', 'data2', 'ind1', 'ind2']
    $82unpack_sequence.8 = exhaust_iter(value=$80call_function.5, count=2) ['$80call_function.5', '$82unpack_sequence.8']
    $82unpack_sequence.6 = static_getitem(value=$82unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>) ['$82unpack_sequence.6', '$82unpack_sequence.8']
    $82unpack_sequence.7 = static_getitem(value=$82unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>) ['$82unpack_sequence.7', '$82unpack_sequence.8']
    _ = $82unpack_sequence.6                 ['$82unpack_sequence.6', '_']
    numer_data = $82unpack_sequence.7        ['$82unpack_sequence.7', 'numer_data']
    $88load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$88load_global.9']
    $90load_method.10 = getattr(value=$88load_global.9, attr=abs) ['$88load_global.9', '$90load_method.10']
    numer_data = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_method.10', 'numer_data', 'numer_data']
    $98load_global.13 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$98load_global.13']
    $100load_method.14 = getattr(value=$98load_global.13, attr=sum) ['$100load_method.14', '$98load_global.13']
    numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_method.14', 'numer_data', 'numerator']
    $108load_global.17 = global(float: <class 'float'>) ['$108load_global.17']
    $112call_function.19 = call $108load_global.17(numerator, func=$108load_global.17, args=[Var(numerator, sparse.py:490)], kws=(), vararg=None, varkwarg=None, target=None) ['$108load_global.17', '$112call_function.19', 'numerator']
    $116binary_true_divide.21 = $112call_function.19 / denominator ['$112call_function.19', '$116binary_true_divide.21', 'denominator']
    $118return_value.22 = cast(value=$116binary_true_divide.21) ['$116binary_true_divide.21', '$118return_value.22']
    return $118return_value.22               ['$118return_value.22']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ed1180>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_sum: CPUDispatcher(<function sparse_sum at 0x7f15912ca950>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: denom_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.10 = getattr(value=$20load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: denom_data.1 = call $22load_method.10(denom_data, func=$22load_method.10, args=[Var(denom_data, sparse.py:476)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=denom_data.1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const34.15.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.16 = static_getitem(value=$32load_attr.14, index=0, index_var=$const34.15.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.17.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.18 = $36binary_subscr.16 == $const38.17.1
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.18, func=bool42, args=(Var($40compare_op.18, sparse.py:479),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ed1180>
DEBUG:numba.core.ssa:on stmt: $const44.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.2)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ed1180>
DEBUG:numba.core.ssa:on stmt: $48load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.1 = getattr(value=$48load_global.0, attr=sum)
DEBUG:numba.core.ssa:on stmt: denominator = call $50load_method.1(denom_data.1, func=$50load_method.1, args=[Var(denom_data.1, sparse.py:477)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.5.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.6 = denominator == $const60.5.2
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.6, func=bool64, args=(Var($62compare_op.6, sparse.py:484),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 70
DEBUG:numba.core.ssa:==== SSA block analysis pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ed1180>
DEBUG:numba.core.ssa:on stmt: $const66.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=$const66.0.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 70
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590ed1180>
DEBUG:numba.core.ssa:on stmt: $70load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $80call_function.5 = call $70load_global.0(ind1, data1, ind2, data2, func=$70load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.8 = exhaust_iter(value=$80call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.6 = static_getitem(value=$82unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.7 = static_getitem(value=$82unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $82unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: numer_data = $82unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $88load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_method.10 = getattr(value=$88load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: numer_data = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.13 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $100load_method.14 = getattr(value=$98load_global.13, attr=sum)
DEBUG:numba.core.ssa:on stmt: numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_global.17 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $112call_function.19 = call $108load_global.17(numerator, func=$108load_global.17, args=[Var(numerator, sparse.py:490)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $116binary_true_divide.21 = $112call_function.19 / denominator
DEBUG:numba.core.ssa:on stmt: $118return_value.22 = cast(value=$116binary_true_divide.21)
DEBUG:numba.core.ssa:on stmt: return $118return_value.22
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100load_method.14': [(<numba.core.ir.Assign object at 0x7f1590ed3c10>,
                                     70)],
             '$108load_global.17': [(<numba.core.ir.Assign object at 0x7f1590d367a0>,
                                     70)],
             '$112call_function.19': [(<numba.core.ir.Assign object at 0x7f1590d36560>,
                                       70)],
             '$116binary_true_divide.21': [(<numba.core.ir.Assign object at 0x7f1590d35c00>,
                                            70)],
             '$118return_value.22': [(<numba.core.ir.Assign object at 0x7f1590d35ba0>,
                                      70)],
             '$12call_function.5': [(<numba.core.ir.Assign object at 0x7f1590ed3430>,
                                     0)],
             '$14unpack_sequence.6': [(<numba.core.ir.Assign object at 0x7f1590ed1ed0>,
                                       0)],
             '$14unpack_sequence.7': [(<numba.core.ir.Assign object at 0x7f1590ed14e0>,
                                       0)],
             '$14unpack_sequence.8': [(<numba.core.ir.Assign object at 0x7f1590ed1de0>,
                                       0)],
             '$20load_global.9': [(<numba.core.ir.Assign object at 0x7f1590a29390>,
                                   0)],
             '$22load_method.10': [(<numba.core.ir.Assign object at 0x7f1590a29210>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7f1590a28520>,
                                  0)],
             '$32load_attr.14': [(<numba.core.ir.Assign object at 0x7f1590ddad70>,
                                  0)],
             '$36binary_subscr.16': [(<numba.core.ir.Assign object at 0x7f1590a0efb0>,
                                      0)],
             '$40compare_op.18': [(<numba.core.ir.Assign object at 0x7f1590ed2b90>,
                                   0)],
             '$42pred': [(<numba.core.ir.Assign object at 0x7f1590ed3070>, 0)],
             '$46return_value.1': [(<numba.core.ir.Assign object at 0x7f1590ed2f20>,
                                    44)],
             '$48load_global.0': [(<numba.core.ir.Assign object at 0x7f1590ed3d90>,
                                   48)],
             '$50load_method.1': [(<numba.core.ir.Assign object at 0x7f1590ed2b60>,
                                   48)],
             '$62compare_op.6': [(<numba.core.ir.Assign object at 0x7f1590ed2860>,
                                  48)],
             '$64pred': [(<numba.core.ir.Assign object at 0x7f1590ed2ad0>, 48)],
             '$68return_value.1': [(<numba.core.ir.Assign object at 0x7f1590ed0700>,
                                    66)],
             '$70load_global.0': [(<numba.core.ir.Assign object at 0x7f1590ed0490>,
                                   70)],
             '$80call_function.5': [(<numba.core.ir.Assign object at 0x7f1590ed1a20>,
                                     70)],
             '$82unpack_sequence.6': [(<numba.core.ir.Assign object at 0x7f1590ed1cc0>,
                                       70)],
             '$82unpack_sequence.7': [(<numba.core.ir.Assign object at 0x7f1590ed1c60>,
                                       70)],
             '$82unpack_sequence.8': [(<numba.core.ir.Assign object at 0x7f1590ed1b70>,
                                       70)],
             '$88load_global.9': [(<numba.core.ir.Assign object at 0x7f1590ed03a0>,
                                   70)],
             '$90load_method.10': [(<numba.core.ir.Assign object at 0x7f1590ed0280>,
                                    70)],
             '$98load_global.13': [(<numba.core.ir.Assign object at 0x7f1590ed34c0>,
                                    70)],
             '$const34.15.1': [(<numba.core.ir.Assign object at 0x7f1590ed3910>,
                                0)],
             '$const38.17.1': [(<numba.core.ir.Assign object at 0x7f1590ed3a90>,
                                0)],
             '$const44.0.2': [(<numba.core.ir.Assign object at 0x7f1590a2ac80>,
                               44)],
             '$const60.5.2': [(<numba.core.ir.Assign object at 0x7f1590ed25f0>,
                               48)],
             '$const66.0.2': [(<numba.core.ir.Assign object at 0x7f1590ed09a0>,
                               66)],
             '_': [(<numba.core.ir.Assign object at 0x7f1590ed14b0>, 0),
                   (<numba.core.ir.Assign object at 0x7f1590ed1e10>, 70)],
             'bool42': [(<numba.core.ir.Assign object at 0x7f1590ed3370>, 0)],
             'bool64': [(<numba.core.ir.Assign object at 0x7f1590ed29b0>, 48)],
             'data1': [(<numba.core.ir.Assign object at 0x7f1590a296c0>, 0)],
             'data2': [(<numba.core.ir.Assign object at 0x7f1590a28340>, 0)],
             'denom_data': [(<numba.core.ir.Assign object at 0x7f1590ed34f0>,
                             0)],
             'denom_data.1': [(<numba.core.ir.Assign object at 0x7f1590a0d4b0>,
                               0)],
             'denominator': [(<numba.core.ir.Assign object at 0x7f1590ed2320>,
                              48)],
             'ind1': [(<numba.core.ir.Assign object at 0x7f1590a295a0>, 0)],
             'ind2': [(<numba.core.ir.Assign object at 0x7f1590a281f0>, 0)],
             'numer_data': [(<numba.core.ir.Assign object at 0x7f1590ed1090>,
                             70),
                            (<numba.core.ir.Assign object at 0x7f1590ed0790>,
                             70)],
             'numerator': [(<numba.core.ir.Assign object at 0x7f1590d36da0>,
                            70)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590ed1180>
DEBUG:numba.core.ssa:Fix SSA violator on var _
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a0fd30>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_sum: CPUDispatcher(<function sparse_sum at 0x7f15912ca950>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:first assign: _
DEBUG:numba.core.ssa:replaced with: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: denom_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.10 = getattr(value=$20load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: denom_data.1 = call $22load_method.10(denom_data, func=$22load_method.10, args=[Var(denom_data, sparse.py:476)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=denom_data.1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const34.15.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.16 = static_getitem(value=$32load_attr.14, index=0, index_var=$const34.15.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.17.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.18 = $36binary_subscr.16 == $const38.17.1
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.18, func=bool42, args=(Var($40compare_op.18, sparse.py:479),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a0fd30>
DEBUG:numba.core.ssa:on stmt: $const44.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.2)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a0fd30>
DEBUG:numba.core.ssa:on stmt: $48load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.1 = getattr(value=$48load_global.0, attr=sum)
DEBUG:numba.core.ssa:on stmt: denominator = call $50load_method.1(denom_data.1, func=$50load_method.1, args=[Var(denom_data.1, sparse.py:477)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.5.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.6 = denominator == $const60.5.2
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.6, func=bool64, args=(Var($62compare_op.6, sparse.py:484),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 70
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a0fd30>
DEBUG:numba.core.ssa:on stmt: $const66.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=$const66.0.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 70
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a0fd30>
DEBUG:numba.core.ssa:on stmt: $70load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $80call_function.5 = call $70load_global.0(ind1, data1, ind2, data2, func=$70load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.8 = exhaust_iter(value=$80call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.6 = static_getitem(value=$82unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.7 = static_getitem(value=$82unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $82unpack_sequence.6
DEBUG:numba.core.ssa:replaced with: _.1 = $82unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: numer_data = $82unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $88load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_method.10 = getattr(value=$88load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: numer_data = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.13 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $100load_method.14 = getattr(value=$98load_global.13, attr=sum)
DEBUG:numba.core.ssa:on stmt: numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_global.17 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $112call_function.19 = call $108load_global.17(numerator, func=$108load_global.17, args=[Var(numerator, sparse.py:490)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $116binary_true_divide.21 = $112call_function.19 / denominator
DEBUG:numba.core.ssa:on stmt: $118return_value.22 = cast(value=$116binary_true_divide.21)
DEBUG:numba.core.ssa:on stmt: return $118return_value.22
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1590d372e0>],
             70: [<numba.core.ir.Assign object at 0x7f1590d36d10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590a0fd30>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_sum: CPUDispatcher(<function sparse_sum at 0x7f15912ca950>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: denom_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.10 = getattr(value=$20load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: denom_data.1 = call $22load_method.10(denom_data, func=$22load_method.10, args=[Var(denom_data, sparse.py:476)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=denom_data.1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const34.15.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.16 = static_getitem(value=$32load_attr.14, index=0, index_var=$const34.15.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.17.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.18 = $36binary_subscr.16 == $const38.17.1
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.18, func=bool42, args=(Var($40compare_op.18, sparse.py:479),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590a0fd30>
DEBUG:numba.core.ssa:on stmt: $const44.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.2)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590a0fd30>
DEBUG:numba.core.ssa:on stmt: $48load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.1 = getattr(value=$48load_global.0, attr=sum)
DEBUG:numba.core.ssa:on stmt: denominator = call $50load_method.1(denom_data.1, func=$50load_method.1, args=[Var(denom_data.1, sparse.py:477)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.5.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.6 = denominator == $const60.5.2
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.6, func=bool64, args=(Var($62compare_op.6, sparse.py:484),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 70
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590a0fd30>
DEBUG:numba.core.ssa:on stmt: $const66.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=$const66.0.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 70
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590a0fd30>
DEBUG:numba.core.ssa:on stmt: $70load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $80call_function.5 = call $70load_global.0(ind1, data1, ind2, data2, func=$70load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.8 = exhaust_iter(value=$80call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.6 = static_getitem(value=$82unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.7 = static_getitem(value=$82unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _.1 = $82unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: numer_data = $82unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $88load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_method.10 = getattr(value=$88load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: numer_data = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.13 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $100load_method.14 = getattr(value=$98load_global.13, attr=sum)
DEBUG:numba.core.ssa:on stmt: numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_global.17 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $112call_function.19 = call $108load_global.17(numerator, func=$108load_global.17, args=[Var(numerator, sparse.py:490)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $116binary_true_divide.21 = $112call_function.19 / denominator
DEBUG:numba.core.ssa:on stmt: $118return_value.22 = cast(value=$116binary_true_divide.21)
DEBUG:numba.core.ssa:on stmt: return $118return_value.22
DEBUG:numba.core.ssa:Fix SSA violator on var numer_data
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a0f160>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_sum: CPUDispatcher(<function sparse_sum at 0x7f15912ca950>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: denom_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.10 = getattr(value=$20load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: denom_data.1 = call $22load_method.10(denom_data, func=$22load_method.10, args=[Var(denom_data, sparse.py:476)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=denom_data.1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const34.15.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.16 = static_getitem(value=$32load_attr.14, index=0, index_var=$const34.15.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.17.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.18 = $36binary_subscr.16 == $const38.17.1
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.18, func=bool42, args=(Var($40compare_op.18, sparse.py:479),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a0f160>
DEBUG:numba.core.ssa:on stmt: $const44.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.2)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a0f160>
DEBUG:numba.core.ssa:on stmt: $48load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.1 = getattr(value=$48load_global.0, attr=sum)
DEBUG:numba.core.ssa:on stmt: denominator = call $50load_method.1(denom_data.1, func=$50load_method.1, args=[Var(denom_data.1, sparse.py:477)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.5.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.6 = denominator == $const60.5.2
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.6, func=bool64, args=(Var($62compare_op.6, sparse.py:484),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 70
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a0f160>
DEBUG:numba.core.ssa:on stmt: $const66.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=$const66.0.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 70
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f1590a0f160>
DEBUG:numba.core.ssa:on stmt: $70load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $80call_function.5 = call $70load_global.0(ind1, data1, ind2, data2, func=$70load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.8 = exhaust_iter(value=$80call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.6 = static_getitem(value=$82unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.7 = static_getitem(value=$82unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _.1 = $82unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: numer_data = $82unpack_sequence.7
DEBUG:numba.core.ssa:first assign: numer_data
DEBUG:numba.core.ssa:replaced with: numer_data = $82unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $88load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_method.10 = getattr(value=$88load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: numer_data = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: numer_data.1 = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.13 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $100load_method.14 = getattr(value=$98load_global.13, attr=sum)
DEBUG:numba.core.ssa:on stmt: numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_global.17 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $112call_function.19 = call $108load_global.17(numerator, func=$108load_global.17, args=[Var(numerator, sparse.py:490)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $116binary_true_divide.21 = $112call_function.19 / denominator
DEBUG:numba.core.ssa:on stmt: $118return_value.22 = cast(value=$116binary_true_divide.21)
DEBUG:numba.core.ssa:on stmt: return $118return_value.22
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {70: [<numba.core.ir.Assign object at 0x7f1590d35930>,
                  <numba.core.ir.Assign object at 0x7f1590d37190>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590a0f160>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(sparse_sum: CPUDispatcher(<function sparse_sum at 0x7f15912ca950>))
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(ind1, data1, ind2, data2, func=$2load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.8 = exhaust_iter(value=$12call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.6 = static_getitem(value=$14unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14unpack_sequence.7 = static_getitem(value=$14unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _ = $14unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: denom_data = $14unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.10 = getattr(value=$20load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: denom_data.1 = call $22load_method.10(denom_data, func=$22load_method.10, args=[Var(denom_data, sparse.py:476)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=denom_data.1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const34.15.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.16 = static_getitem(value=$32load_attr.14, index=0, index_var=$const34.15.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const38.17.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.18 = $36binary_subscr.16 == $const38.17.1
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.18, func=bool42, args=(Var($40compare_op.18, sparse.py:479),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590a0f160>
DEBUG:numba.core.ssa:on stmt: $const44.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.2)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590a0f160>
DEBUG:numba.core.ssa:on stmt: $48load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.1 = getattr(value=$48load_global.0, attr=sum)
DEBUG:numba.core.ssa:on stmt: denominator = call $50load_method.1(denom_data.1, func=$50load_method.1, args=[Var(denom_data.1, sparse.py:477)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.5.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.6 = denominator == $const60.5.2
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.6, func=bool64, args=(Var($62compare_op.6, sparse.py:484),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 70
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590a0f160>
DEBUG:numba.core.ssa:on stmt: $const66.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $68return_value.1 = cast(value=$const66.0.2)
DEBUG:numba.core.ssa:on stmt: return $68return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 70
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f1590a0f160>
DEBUG:numba.core.ssa:on stmt: $70load_global.0 = global(sparse_diff: CPUDispatcher(<function sparse_diff at 0x7f15910bc550>))
DEBUG:numba.core.ssa:on stmt: $80call_function.5 = call $70load_global.0(ind1, data1, ind2, data2, func=$70load_global.0, args=[Var(ind1, sparse.py:463), Var(data1, sparse.py:463), Var(ind2, sparse.py:463), Var(data2, sparse.py:463)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.8 = exhaust_iter(value=$80call_function.5, count=2)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.6 = static_getitem(value=$82unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82unpack_sequence.7 = static_getitem(value=$82unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: _.1 = $82unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: numer_data = $82unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $88load_global.9 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_method.10 = getattr(value=$88load_global.9, attr=abs)
DEBUG:numba.core.ssa:on stmt: numer_data.1 = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='numer_data' stmt=numer_data.1 = call $90load_method.10(numer_data, func=$90load_method.10, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.13 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $100load_method.14 = getattr(value=$98load_global.13, attr=sum)
DEBUG:numba.core.ssa:on stmt: numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='numer_data' stmt=numerator = call $100load_method.14(numer_data, func=$100load_method.14, args=[Var(numer_data, sparse.py:487)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: numerator = call $100load_method.14(numer_data.1, func=$100load_method.14, args=[Var(numer_data.1, sparse.py:488)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_global.17 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $112call_function.19 = call $108load_global.17(numerator, func=$108load_global.17, args=[Var(numerator, sparse.py:490)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $116binary_true_divide.21 = $112call_function.19 / denominator
DEBUG:numba.core.ssa:on stmt: $118return_value.22 = cast(value=$116binary_true_divide.21)
DEBUG:numba.core.ssa:on stmt: return $118return_value.22
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=1)
           6	CALL_FUNCTION(arg=1, lineno=1)
           8	RETURN_VALUE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$denom_data_24.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$denom_data_24.1'}), (6, {'func': '$2load_global.0', 'args': ['$denom_data_24.1'], 'res': '$6call_function.2'}), (8, {'retval': '$6call_function.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    denom_data_2 = arg(0, name=denom_data_2) ['denom_data_2']
    $2load_global.0 = global(__ufunc_or_dufunc_0x7f161f81e14: <ufunc 'absolute'>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(denom_data_2, func=$2load_global.0, args=[Var(denom_data_2, sparse.py:1)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'denom_data_2']
    $8return_value.3 = cast(value=$6call_function.2) ['$6call_function.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590e44460>
DEBUG:numba.core.ssa:on stmt: denom_data_2 = arg(0, name=denom_data_2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(__ufunc_or_dufunc_0x7f161f81e14: <ufunc 'absolute'>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_global.0(denom_data_2, func=$2load_global.0, args=[Var(denom_data_2, sparse.py:1)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6call_function.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$2load_global.0': [(<numba.core.ir.Assign object at 0x7f1590e47910>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7f1590e453c0>,
                                    0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x7f1590e44d90>,
                                   0)],
             'denom_data_2': [(<numba.core.ir.Assign object at 0x7f1590e44a90>,
                               0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590e44460>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=1)
           6	CALL_FUNCTION(arg=1, lineno=1)
           8	RETURN_VALUE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$numer_data_24.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$numer_data_24.1'}), (6, {'func': '$2load_global.0', 'args': ['$numer_data_24.1'], 'res': '$6call_function.2'}), (8, {'retval': '$6call_function.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    numer_data_2 = arg(0, name=numer_data_2) ['numer_data_2']
    $2load_global.0 = global(__ufunc_or_dufunc_0x7f161f81e14: <ufunc 'absolute'>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(numer_data_2, func=$2load_global.0, args=[Var(numer_data_2, sparse.py:1)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'numer_data_2']
    $8return_value.3 = cast(value=$6call_function.2) ['$6call_function.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f1590f2f850>
DEBUG:numba.core.ssa:on stmt: numer_data_2 = arg(0, name=numer_data_2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(__ufunc_or_dufunc_0x7f161f81e14: <ufunc 'absolute'>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_global.0(numer_data_2, func=$2load_global.0, args=[Var(numer_data_2, sparse.py:1)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6call_function.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$2load_global.0': [(<numba.core.ir.Assign object at 0x7f1590e8fa60>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7f1590e8d450>,
                                    0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x7f1590e8cfd0>,
                                   0)],
             'numer_data_2': [(<numba.core.ir.Assign object at 0x7f1590e8edd0>,
                               0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f1590f2f850>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=506)
           2	LOAD_GLOBAL(arg=0, lineno=520)
           4	LOAD_FAST(arg=0, lineno=520)
           6	LOAD_FAST(arg=2, lineno=520)
           8	CALL_FUNCTION(arg=2, lineno=520)
          10	STORE_FAST(arg=4, lineno=520)
          12	LOAD_FAST(arg=0, lineno=521)
          14	LOAD_ATTR(arg=1, lineno=521)
          16	LOAD_CONST(arg=1, lineno=521)
          18	BINARY_SUBSCR(arg=None, lineno=521)
          20	LOAD_FAST(arg=2, lineno=521)
          22	LOAD_ATTR(arg=1, lineno=521)
          24	LOAD_CONST(arg=1, lineno=521)
          26	BINARY_SUBSCR(arg=None, lineno=521)
          28	BINARY_ADD(arg=None, lineno=521)
          30	LOAD_FAST(arg=4, lineno=521)
          32	BINARY_SUBTRACT(arg=None, lineno=521)
          34	STORE_FAST(arg=5, lineno=521)
          36	LOAD_FAST(arg=5, lineno=523)
          38	LOAD_CONST(arg=1, lineno=523)
          40	COMPARE_OP(arg=2, lineno=523)
          42	POP_JUMP_IF_FALSE(arg=25, lineno=523)
          44	LOAD_CONST(arg=2, lineno=524)
          46	RETURN_VALUE(arg=None, lineno=524)
>         48	LOAD_FAST(arg=4, lineno=525)
          50	LOAD_CONST(arg=1, lineno=525)
          52	COMPARE_OP(arg=2, lineno=525)
          54	POP_JUMP_IF_FALSE(arg=31, lineno=525)
          56	LOAD_GLOBAL(arg=2, lineno=526)
          58	RETURN_VALUE(arg=None, lineno=526)
>         60	LOAD_GLOBAL(arg=3, lineno=528)
          62	LOAD_METHOD(arg=4, lineno=528)
          64	LOAD_FAST(arg=4, lineno=528)
          66	LOAD_FAST(arg=5, lineno=528)
          68	BINARY_TRUE_DIVIDE(arg=None, lineno=528)
          70	CALL_METHOD(arg=1, lineno=528)
          72	UNARY_NEGATIVE(arg=None, lineno=528)
          74	RETURN_VALUE(arg=None, lineno=528)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=506)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=520)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=520)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=520)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=520)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$ind26.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=STORE_FAST(arg=4, lineno=520)
DEBUG:numba.core.byteflow:stack ['$8call_function.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=521)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_ATTR(arg=1, lineno=521)
DEBUG:numba.core.byteflow:stack ['$ind112.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=521)
DEBUG:numba.core.byteflow:stack ['$14load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=BINARY_SUBSCR(arg=None, lineno=521)
DEBUG:numba.core.byteflow:stack ['$14load_attr.5', '$const16.6.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=521)
DEBUG:numba.core.byteflow:stack ['$18binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=521)
DEBUG:numba.core.byteflow:stack ['$18binary_subscr.7', '$ind220.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=521)
DEBUG:numba.core.byteflow:stack ['$18binary_subscr.7', '$22load_attr.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=521)
DEBUG:numba.core.byteflow:stack ['$18binary_subscr.7', '$22load_attr.9', '$const24.10.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_ADD(arg=None, lineno=521)
DEBUG:numba.core.byteflow:stack ['$18binary_subscr.7', '$26binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=4, lineno=521)
DEBUG:numba.core.byteflow:stack ['$28binary_add.12']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BINARY_SUBTRACT(arg=None, lineno=521)
DEBUG:numba.core.byteflow:stack ['$28binary_add.12', '$num_equal30.13']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=5, lineno=521)
DEBUG:numba.core.byteflow:stack ['$32binary_subtract.14']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=5, lineno=523)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=523)
DEBUG:numba.core.byteflow:stack ['$num_non_zero36.15']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=2, lineno=523)
DEBUG:numba.core.byteflow:stack ['$num_non_zero36.15', '$const38.16.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=25, lineno=523)
DEBUG:numba.core.byteflow:stack ['$40compare_op.17']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=44 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=524)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=524)
DEBUG:numba.core.byteflow:stack ['$const44.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=4, lineno=525)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=1, lineno=525)
DEBUG:numba.core.byteflow:stack ['$num_equal48.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=COMPARE_OP(arg=2, lineno=525)
DEBUG:numba.core.byteflow:stack ['$num_equal48.0', '$const50.1.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=POP_JUMP_IF_FALSE(arg=31, lineno=525)
DEBUG:numba.core.byteflow:stack ['$52compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=60, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=60 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_GLOBAL(arg=2, lineno=526)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=RETURN_VALUE(arg=None, lineno=526)
DEBUG:numba.core.byteflow:stack ['$56load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=60 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=60 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_GLOBAL(arg=3, lineno=528)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_METHOD(arg=4, lineno=528)
DEBUG:numba.core.byteflow:stack ['$60load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=4, lineno=528)
DEBUG:numba.core.byteflow:stack ['$62load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=5, lineno=528)
DEBUG:numba.core.byteflow:stack ['$62load_method.1', '$num_equal64.2']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=528)
DEBUG:numba.core.byteflow:stack ['$62load_method.1', '$num_equal64.2', '$num_non_zero66.3']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=CALL_METHOD(arg=1, lineno=528)
DEBUG:numba.core.byteflow:stack ['$62load_method.1', '$68binary_true_divide.4']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=UNARY_NEGATIVE(arg=None, lineno=528)
DEBUG:numba.core.byteflow:stack ['$70call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=RETURN_VALUE(arg=None, lineno=528)
DEBUG:numba.core.byteflow:stack ['$72unary_negative.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$ind14.1'}), (6, {'res': '$ind26.2'}), (8, {'func': '$2load_global.0', 'args': ['$ind14.1', '$ind26.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$ind112.4'}), (14, {'item': '$ind112.4', 'res': '$14load_attr.5'}), (16, {'res': '$const16.6.1'}), (18, {'index': '$const16.6.1', 'target': '$14load_attr.5', 'res': '$18binary_subscr.7'}), (20, {'res': '$ind220.8'}), (22, {'item': '$ind220.8', 'res': '$22load_attr.9'}), (24, {'res': '$const24.10.1'}), (26, {'index': '$const24.10.1', 'target': '$22load_attr.9', 'res': '$26binary_subscr.11'}), (28, {'lhs': '$18binary_subscr.7', 'rhs': '$26binary_subscr.11', 'res': '$28binary_add.12'}), (30, {'res': '$num_equal30.13'}), (32, {'lhs': '$28binary_add.12', 'rhs': '$num_equal30.13', 'res': '$32binary_subtract.14'}), (34, {'value': '$32binary_subtract.14'}), (36, {'res': '$num_non_zero36.15'}), (38, {'res': '$const38.16.1'}), (40, {'lhs': '$num_non_zero36.15', 'rhs': '$const38.16.1', 'res': '$40compare_op.17'}), (42, {'pred': '$40compare_op.17'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0.2'}), (46, {'retval': '$const44.0.2', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$num_equal48.0'}), (50, {'res': '$const50.1.1'}), (52, {'lhs': '$num_equal48.0', 'rhs': '$const50.1.1', 'res': '$52compare_op.2'}), (54, {'pred': '$52compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 60: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$56load_global.0'}), (58, {'retval': '$56load_global.0', 'castval': '$58return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_global.0'}), (62, {'item': '$60load_global.0', 'res': '$62load_method.1'}), (64, {'res': '$num_equal64.2'}), (66, {'res': '$num_non_zero66.3'}), (68, {'lhs': '$num_equal64.2', 'rhs': '$num_non_zero66.3', 'res': '$68binary_true_divide.4'}), (70, {'func': '$62load_method.1', 'args': ['$68binary_true_divide.4'], 'res': '$70call_method.5'}), (72, {'value': '$70call_method.5', 'res': '$72unary_negative.6'}), (74, {'retval': '$72unary_negative.6', 'castval': '$74return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    ind1 = arg(0, name=ind1)                 ['ind1']
    data1 = arg(1, name=data1)               ['data1']
    ind2 = arg(2, name=ind2)                 ['ind2']
    data2 = arg(3, name=data2)               ['data2']
    $2load_global.0 = global(fast_intersection_size: CPUDispatcher(<function fast_intersection_size at 0x7f15910bd5a0>)) ['$2load_global.0']
    num_equal = call $2load_global.0(ind1, ind2, func=$2load_global.0, args=[Var(ind1, sparse.py:506), Var(ind2, sparse.py:506)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'ind1', 'ind2', 'num_equal']
    $14load_attr.5 = getattr(value=ind1, attr=shape) ['$14load_attr.5', 'ind1']
    $const16.6.1 = const(int, 0)             ['$const16.6.1']
    $18binary_subscr.7 = getitem(value=$14load_attr.5, index=$const16.6.1, fn=<built-in function getitem>) ['$14load_attr.5', '$18binary_subscr.7', '$const16.6.1']
    $22load_attr.9 = getattr(value=ind2, attr=shape) ['$22load_attr.9', 'ind2']
    $const24.10.1 = const(int, 0)            ['$const24.10.1']
    $26binary_subscr.11 = getitem(value=$22load_attr.9, index=$const24.10.1, fn=<built-in function getitem>) ['$22load_attr.9', '$26binary_subscr.11', '$const24.10.1']
    $28binary_add.12 = $18binary_subscr.7 + $26binary_subscr.11 ['$18binary_subscr.7', '$26binary_subscr.11', '$28binary_add.12']
    num_non_zero = $28binary_add.12 - num_equal ['$28binary_add.12', 'num_equal', 'num_non_zero']
    $const38.16.1 = const(int, 0)            ['$const38.16.1']
    $40compare_op.17 = num_non_zero == $const38.16.1 ['$40compare_op.17', '$const38.16.1', 'num_non_zero']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.17, func=bool42, args=(Var($40compare_op.17, sparse.py:523),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.17', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $const44.0.2 = const(float, 0.0)         ['$const44.0.2']
    $46return_value.1 = cast(value=$const44.0.2) ['$46return_value.1', '$const44.0.2']
    return $46return_value.1                 ['$46return_value.1']
label 48:
    $const50.1.1 = const(int, 0)             ['$const50.1.1']
    $52compare_op.2 = num_equal == $const50.1.1 ['$52compare_op.2', '$const50.1.1', 'num_equal']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($52compare_op.2, func=bool54, args=(Var($52compare_op.2, sparse.py:525),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.2', '$54pred', 'bool54']
    branch $54pred, 56, 60                   ['$54pred']
label 56:
    $56load_global.0 = global(FLOAT32_MAX: 3.4028235e+38) ['$56load_global.0']
    $58return_value.1 = cast(value=$56load_global.0) ['$56load_global.0', '$58return_value.1']
    return $58return_value.1                 ['$58return_value.1']
label 60:
    $60load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$60load_global.0']
    $62load_method.1 = getattr(value=$60load_global.0, attr=log2) ['$60load_global.0', '$62load_method.1']
    $68binary_true_divide.4 = num_equal / num_non_zero ['$68binary_true_divide.4', 'num_equal', 'num_non_zero']
    $70call_method.5 = call $62load_method.1($68binary_true_divide.4, func=$62load_method.1, args=[Var($68binary_true_divide.4, sparse.py:528)], kws=(), vararg=None, varkwarg=None, target=None) ['$62load_method.1', '$68binary_true_divide.4', '$70call_method.5']
    $72unary_negative.6 = unary(fn=<built-in function neg>, value=$70call_method.5) ['$70call_method.5', '$72unary_negative.6']
    $74return_value.7 = cast(value=$72unary_negative.6) ['$72unary_negative.6', '$74return_value.7']
    return $74return_value.7                 ['$74return_value.7']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910c9660>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(fast_intersection_size: CPUDispatcher(<function fast_intersection_size at 0x7f15910bd5a0>))
DEBUG:numba.core.ssa:on stmt: num_equal = call $2load_global.0(ind1, ind2, func=$2load_global.0, args=[Var(ind1, sparse.py:506), Var(ind2, sparse.py:506)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14load_attr.5 = getattr(value=ind1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const16.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $18binary_subscr.7 = static_getitem(value=$14load_attr.5, index=0, index_var=$const16.6.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.9 = getattr(value=ind2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const24.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28binary_add.12 = $18binary_subscr.7 + $26binary_subscr.11
DEBUG:numba.core.ssa:on stmt: num_non_zero = $28binary_add.12 - num_equal
DEBUG:numba.core.ssa:on stmt: $const38.16.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.17 = num_non_zero == $const38.16.1
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.17, func=bool42, args=(Var($40compare_op.17, sparse.py:523),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910c9660>
DEBUG:numba.core.ssa:on stmt: $const44.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.2)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910c9660>
DEBUG:numba.core.ssa:on stmt: $const50.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $52compare_op.2 = num_equal == $const50.1.1
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($52compare_op.2, func=bool54, args=(Var($52compare_op.2, sparse.py:525),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 56, 60
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910c9660>
DEBUG:numba.core.ssa:on stmt: $56load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $58return_value.1 = cast(value=$56load_global.0)
DEBUG:numba.core.ssa:on stmt: return $58return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15910c9660>
DEBUG:numba.core.ssa:on stmt: $60load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_method.1 = getattr(value=$60load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $68binary_true_divide.4 = num_equal / num_non_zero
DEBUG:numba.core.ssa:on stmt: $70call_method.5 = call $62load_method.1($68binary_true_divide.4, func=$62load_method.1, args=[Var($68binary_true_divide.4, sparse.py:528)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $72unary_negative.6 = unary(fn=<built-in function neg>, value=$70call_method.5)
DEBUG:numba.core.ssa:on stmt: $74return_value.7 = cast(value=$72unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $74return_value.7
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$14load_attr.5': [(<numba.core.ir.Assign object at 0x7f15910ca920>,
                                 0)],
             '$18binary_subscr.7': [(<numba.core.ir.Assign object at 0x7f1590d36320>,
                                     0)],
             '$22load_attr.9': [(<numba.core.ir.Assign object at 0x7f15910cb0d0>,
                                 0)],
             '$26binary_subscr.11': [(<numba.core.ir.Assign object at 0x7f15910cba90>,
                                      0)],
             '$28binary_add.12': [(<numba.core.ir.Assign object at 0x7f15910c99f0>,
                                   0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7f1590d4a7a0>,
                                  0)],
             '$40compare_op.17': [(<numba.core.ir.Assign object at 0x7f15910c84f0>,
                                   0)],
             '$42pred': [(<numba.core.ir.Assign object at 0x7f15910c8d30>, 0)],
             '$46return_value.1': [(<numba.core.ir.Assign object at 0x7f15910c9030>,
                                    44)],
             '$52compare_op.2': [(<numba.core.ir.Assign object at 0x7f15909f6e90>,
                                  48)],
             '$54pred': [(<numba.core.ir.Assign object at 0x7f1590d36da0>, 48)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x7f1590d35f60>,
                                   56)],
             '$58return_value.1': [(<numba.core.ir.Assign object at 0x7f15910c9180>,
                                    56)],
             '$60load_global.0': [(<numba.core.ir.Assign object at 0x7f15910c9480>,
                                   60)],
             '$62load_method.1': [(<numba.core.ir.Assign object at 0x7f15910c97b0>,
                                   60)],
             '$68binary_true_divide.4': [(<numba.core.ir.Assign object at 0x7f15910ca3b0>,
                                          60)],
             '$70call_method.5': [(<numba.core.ir.Assign object at 0x7f15910ca590>,
                                   60)],
             '$72unary_negative.6': [(<numba.core.ir.Assign object at 0x7f15910ca680>,
                                      60)],
             '$74return_value.7': [(<numba.core.ir.Assign object at 0x7f15910ca080>,
                                    60)],
             '$const16.6.1': [(<numba.core.ir.Assign object at 0x7f15910caf50>,
                               0)],
             '$const24.10.1': [(<numba.core.ir.Assign object at 0x7f15910c9780>,
                                0)],
             '$const38.16.1': [(<numba.core.ir.Assign object at 0x7f15910c8550>,
                                0)],
             '$const44.0.2': [(<numba.core.ir.Assign object at 0x7f15910cae00>,
                               44)],
             '$const50.1.1': [(<numba.core.ir.Assign object at 0x7f1590d4b340>,
                               48)],
             'bool42': [(<numba.core.ir.Assign object at 0x7f15910c8760>, 0)],
             'bool54': [(<numba.core.ir.Assign object at 0x7f1590f34a90>, 48)],
             'data1': [(<numba.core.ir.Assign object at 0x7f1590d4bcd0>, 0)],
             'data2': [(<numba.core.ir.Assign object at 0x7f1590d48a00>, 0)],
             'ind1': [(<numba.core.ir.Assign object at 0x7f1590d489a0>, 0)],
             'ind2': [(<numba.core.ir.Assign object at 0x7f1590d48730>, 0)],
             'num_equal': [(<numba.core.ir.Assign object at 0x7f15910cb220>,
                            0)],
             'num_non_zero': [(<numba.core.ir.Assign object at 0x7f15910c88b0>,
                               0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15910c9660>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=506)
           2	LOAD_GLOBAL(arg=0, lineno=520)
           4	LOAD_FAST(arg=0, lineno=520)
           6	LOAD_FAST(arg=2, lineno=520)
           8	CALL_FUNCTION(arg=2, lineno=520)
          10	STORE_FAST(arg=4, lineno=520)
          12	LOAD_FAST(arg=0, lineno=521)
          14	LOAD_ATTR(arg=1, lineno=521)
          16	LOAD_CONST(arg=1, lineno=521)
          18	BINARY_SUBSCR(arg=None, lineno=521)
          20	LOAD_FAST(arg=2, lineno=521)
          22	LOAD_ATTR(arg=1, lineno=521)
          24	LOAD_CONST(arg=1, lineno=521)
          26	BINARY_SUBSCR(arg=None, lineno=521)
          28	BINARY_ADD(arg=None, lineno=521)
          30	LOAD_FAST(arg=4, lineno=521)
          32	BINARY_SUBTRACT(arg=None, lineno=521)
          34	STORE_FAST(arg=5, lineno=521)
          36	LOAD_FAST(arg=5, lineno=523)
          38	LOAD_CONST(arg=1, lineno=523)
          40	COMPARE_OP(arg=2, lineno=523)
          42	POP_JUMP_IF_FALSE(arg=25, lineno=523)
          44	LOAD_CONST(arg=2, lineno=524)
          46	RETURN_VALUE(arg=None, lineno=524)
>         48	LOAD_FAST(arg=4, lineno=525)
          50	LOAD_CONST(arg=1, lineno=525)
          52	COMPARE_OP(arg=2, lineno=525)
          54	POP_JUMP_IF_FALSE(arg=31, lineno=525)
          56	LOAD_GLOBAL(arg=2, lineno=526)
          58	RETURN_VALUE(arg=None, lineno=526)
>         60	LOAD_GLOBAL(arg=3, lineno=528)
          62	LOAD_METHOD(arg=4, lineno=528)
          64	LOAD_FAST(arg=4, lineno=528)
          66	LOAD_FAST(arg=5, lineno=528)
          68	BINARY_TRUE_DIVIDE(arg=None, lineno=528)
          70	CALL_METHOD(arg=1, lineno=528)
          72	UNARY_NEGATIVE(arg=None, lineno=528)
          74	RETURN_VALUE(arg=None, lineno=528)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=506)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=520)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=520)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=520)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=520)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$ind14.1', '$ind26.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=STORE_FAST(arg=4, lineno=520)
DEBUG:numba.core.byteflow:stack ['$8call_function.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=521)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_ATTR(arg=1, lineno=521)
DEBUG:numba.core.byteflow:stack ['$ind112.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=521)
DEBUG:numba.core.byteflow:stack ['$14load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=BINARY_SUBSCR(arg=None, lineno=521)
DEBUG:numba.core.byteflow:stack ['$14load_attr.5', '$const16.6.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=521)
DEBUG:numba.core.byteflow:stack ['$18binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=521)
DEBUG:numba.core.byteflow:stack ['$18binary_subscr.7', '$ind220.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=521)
DEBUG:numba.core.byteflow:stack ['$18binary_subscr.7', '$22load_attr.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=521)
DEBUG:numba.core.byteflow:stack ['$18binary_subscr.7', '$22load_attr.9', '$const24.10.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_ADD(arg=None, lineno=521)
DEBUG:numba.core.byteflow:stack ['$18binary_subscr.7', '$26binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=4, lineno=521)
DEBUG:numba.core.byteflow:stack ['$28binary_add.12']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BINARY_SUBTRACT(arg=None, lineno=521)
DEBUG:numba.core.byteflow:stack ['$28binary_add.12', '$num_equal30.13']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=5, lineno=521)
DEBUG:numba.core.byteflow:stack ['$32binary_subtract.14']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=5, lineno=523)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=523)
DEBUG:numba.core.byteflow:stack ['$num_non_zero36.15']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=2, lineno=523)
DEBUG:numba.core.byteflow:stack ['$num_non_zero36.15', '$const38.16.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=25, lineno=523)
DEBUG:numba.core.byteflow:stack ['$40compare_op.17']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=44 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=524)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=524)
DEBUG:numba.core.byteflow:stack ['$const44.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=4, lineno=525)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=1, lineno=525)
DEBUG:numba.core.byteflow:stack ['$num_equal48.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=COMPARE_OP(arg=2, lineno=525)
DEBUG:numba.core.byteflow:stack ['$num_equal48.0', '$const50.1.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=POP_JUMP_IF_FALSE(arg=31, lineno=525)
DEBUG:numba.core.byteflow:stack ['$52compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=60, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=60 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_GLOBAL(arg=2, lineno=526)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=RETURN_VALUE(arg=None, lineno=526)
DEBUG:numba.core.byteflow:stack ['$56load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=60 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=60 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_GLOBAL(arg=3, lineno=528)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_METHOD(arg=4, lineno=528)
DEBUG:numba.core.byteflow:stack ['$60load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=4, lineno=528)
DEBUG:numba.core.byteflow:stack ['$62load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=5, lineno=528)
DEBUG:numba.core.byteflow:stack ['$62load_method.1', '$num_equal64.2']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=528)
DEBUG:numba.core.byteflow:stack ['$62load_method.1', '$num_equal64.2', '$num_non_zero66.3']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=CALL_METHOD(arg=1, lineno=528)
DEBUG:numba.core.byteflow:stack ['$62load_method.1', '$68binary_true_divide.4']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=UNARY_NEGATIVE(arg=None, lineno=528)
DEBUG:numba.core.byteflow:stack ['$70call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=RETURN_VALUE(arg=None, lineno=528)
DEBUG:numba.core.byteflow:stack ['$72unary_negative.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$ind14.1'}), (6, {'res': '$ind26.2'}), (8, {'func': '$2load_global.0', 'args': ['$ind14.1', '$ind26.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$ind112.4'}), (14, {'item': '$ind112.4', 'res': '$14load_attr.5'}), (16, {'res': '$const16.6.1'}), (18, {'index': '$const16.6.1', 'target': '$14load_attr.5', 'res': '$18binary_subscr.7'}), (20, {'res': '$ind220.8'}), (22, {'item': '$ind220.8', 'res': '$22load_attr.9'}), (24, {'res': '$const24.10.1'}), (26, {'index': '$const24.10.1', 'target': '$22load_attr.9', 'res': '$26binary_subscr.11'}), (28, {'lhs': '$18binary_subscr.7', 'rhs': '$26binary_subscr.11', 'res': '$28binary_add.12'}), (30, {'res': '$num_equal30.13'}), (32, {'lhs': '$28binary_add.12', 'rhs': '$num_equal30.13', 'res': '$32binary_subtract.14'}), (34, {'value': '$32binary_subtract.14'}), (36, {'res': '$num_non_zero36.15'}), (38, {'res': '$const38.16.1'}), (40, {'lhs': '$num_non_zero36.15', 'rhs': '$const38.16.1', 'res': '$40compare_op.17'}), (42, {'pred': '$40compare_op.17'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0.2'}), (46, {'retval': '$const44.0.2', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$num_equal48.0'}), (50, {'res': '$const50.1.1'}), (52, {'lhs': '$num_equal48.0', 'rhs': '$const50.1.1', 'res': '$52compare_op.2'}), (54, {'pred': '$52compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 60: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$56load_global.0'}), (58, {'retval': '$56load_global.0', 'castval': '$58return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_global.0'}), (62, {'item': '$60load_global.0', 'res': '$62load_method.1'}), (64, {'res': '$num_equal64.2'}), (66, {'res': '$num_non_zero66.3'}), (68, {'lhs': '$num_equal64.2', 'rhs': '$num_non_zero66.3', 'res': '$68binary_true_divide.4'}), (70, {'func': '$62load_method.1', 'args': ['$68binary_true_divide.4'], 'res': '$70call_method.5'}), (72, {'value': '$70call_method.5', 'res': '$72unary_negative.6'}), (74, {'retval': '$72unary_negative.6', 'castval': '$74return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    ind1 = arg(0, name=ind1)                 ['ind1']
    data1 = arg(1, name=data1)               ['data1']
    ind2 = arg(2, name=ind2)                 ['ind2']
    data2 = arg(3, name=data2)               ['data2']
    $2load_global.0 = global(fast_intersection_size: CPUDispatcher(<function fast_intersection_size at 0x7f15910bd5a0>)) ['$2load_global.0']
    num_equal = call $2load_global.0(ind1, ind2, func=$2load_global.0, args=[Var(ind1, sparse.py:506), Var(ind2, sparse.py:506)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'ind1', 'ind2', 'num_equal']
    $14load_attr.5 = getattr(value=ind1, attr=shape) ['$14load_attr.5', 'ind1']
    $const16.6.1 = const(int, 0)             ['$const16.6.1']
    $18binary_subscr.7 = getitem(value=$14load_attr.5, index=$const16.6.1, fn=<built-in function getitem>) ['$14load_attr.5', '$18binary_subscr.7', '$const16.6.1']
    $22load_attr.9 = getattr(value=ind2, attr=shape) ['$22load_attr.9', 'ind2']
    $const24.10.1 = const(int, 0)            ['$const24.10.1']
    $26binary_subscr.11 = getitem(value=$22load_attr.9, index=$const24.10.1, fn=<built-in function getitem>) ['$22load_attr.9', '$26binary_subscr.11', '$const24.10.1']
    $28binary_add.12 = $18binary_subscr.7 + $26binary_subscr.11 ['$18binary_subscr.7', '$26binary_subscr.11', '$28binary_add.12']
    num_non_zero = $28binary_add.12 - num_equal ['$28binary_add.12', 'num_equal', 'num_non_zero']
    $const38.16.1 = const(int, 0)            ['$const38.16.1']
    $40compare_op.17 = num_non_zero == $const38.16.1 ['$40compare_op.17', '$const38.16.1', 'num_non_zero']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.17, func=bool42, args=(Var($40compare_op.17, sparse.py:523),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.17', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $const44.0.2 = const(float, 0.0)         ['$const44.0.2']
    $46return_value.1 = cast(value=$const44.0.2) ['$46return_value.1', '$const44.0.2']
    return $46return_value.1                 ['$46return_value.1']
label 48:
    $const50.1.1 = const(int, 0)             ['$const50.1.1']
    $52compare_op.2 = num_equal == $const50.1.1 ['$52compare_op.2', '$const50.1.1', 'num_equal']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($52compare_op.2, func=bool54, args=(Var($52compare_op.2, sparse.py:525),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.2', '$54pred', 'bool54']
    branch $54pred, 56, 60                   ['$54pred']
label 56:
    $56load_global.0 = global(FLOAT32_MAX: 3.4028235e+38) ['$56load_global.0']
    $58return_value.1 = cast(value=$56load_global.0) ['$56load_global.0', '$58return_value.1']
    return $58return_value.1                 ['$58return_value.1']
label 60:
    $60load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>) ['$60load_global.0']
    $62load_method.1 = getattr(value=$60load_global.0, attr=log2) ['$60load_global.0', '$62load_method.1']
    $68binary_true_divide.4 = num_equal / num_non_zero ['$68binary_true_divide.4', 'num_equal', 'num_non_zero']
    $70call_method.5 = call $62load_method.1($68binary_true_divide.4, func=$62load_method.1, args=[Var($68binary_true_divide.4, sparse.py:528)], kws=(), vararg=None, varkwarg=None, target=None) ['$62load_method.1', '$68binary_true_divide.4', '$70call_method.5']
    $72unary_negative.6 = unary(fn=<built-in function neg>, value=$70call_method.5) ['$70call_method.5', '$72unary_negative.6']
    $74return_value.7 = cast(value=$72unary_negative.6) ['$72unary_negative.6', '$74return_value.7']
    return $74return_value.7                 ['$74return_value.7']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911ddc30>
DEBUG:numba.core.ssa:on stmt: ind1 = arg(0, name=ind1)
DEBUG:numba.core.ssa:on stmt: data1 = arg(1, name=data1)
DEBUG:numba.core.ssa:on stmt: ind2 = arg(2, name=ind2)
DEBUG:numba.core.ssa:on stmt: data2 = arg(3, name=data2)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(fast_intersection_size: CPUDispatcher(<function fast_intersection_size at 0x7f15910bd5a0>))
DEBUG:numba.core.ssa:on stmt: num_equal = call $2load_global.0(ind1, ind2, func=$2load_global.0, args=[Var(ind1, sparse.py:506), Var(ind2, sparse.py:506)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14load_attr.5 = getattr(value=ind1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const16.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $18binary_subscr.7 = static_getitem(value=$14load_attr.5, index=0, index_var=$const16.6.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.9 = getattr(value=ind2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const24.10.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28binary_add.12 = $18binary_subscr.7 + $26binary_subscr.11
DEBUG:numba.core.ssa:on stmt: num_non_zero = $28binary_add.12 - num_equal
DEBUG:numba.core.ssa:on stmt: $const38.16.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.17 = num_non_zero == $const38.16.1
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.17, func=bool42, args=(Var($40compare_op.17, sparse.py:523),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911ddc30>
DEBUG:numba.core.ssa:on stmt: $const44.0.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.2)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911ddc30>
DEBUG:numba.core.ssa:on stmt: $const50.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $52compare_op.2 = num_equal == $const50.1.1
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($52compare_op.2, func=bool54, args=(Var($52compare_op.2, sparse.py:525),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 56, 60
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911ddc30>
DEBUG:numba.core.ssa:on stmt: $56load_global.0 = global(FLOAT32_MAX: 3.4028235e+38)
DEBUG:numba.core.ssa:on stmt: $58return_value.1 = cast(value=$56load_global.0)
DEBUG:numba.core.ssa:on stmt: return $58return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f15911ddc30>
DEBUG:numba.core.ssa:on stmt: $60load_global.0 = global(np: <module 'numpy' from '/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_method.1 = getattr(value=$60load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $68binary_true_divide.4 = num_equal / num_non_zero
DEBUG:numba.core.ssa:on stmt: $70call_method.5 = call $62load_method.1($68binary_true_divide.4, func=$62load_method.1, args=[Var($68binary_true_divide.4, sparse.py:528)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $72unary_negative.6 = unary(fn=<built-in function neg>, value=$70call_method.5)
DEBUG:numba.core.ssa:on stmt: $74return_value.7 = cast(value=$72unary_negative.6)
DEBUG:numba.core.ssa:on stmt: return $74return_value.7
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$14load_attr.5': [(<numba.core.ir.Assign object at 0x7f15911f19c0>,
                                 0)],
             '$18binary_subscr.7': [(<numba.core.ir.Assign object at 0x7f1590ed0a60>,
                                     0)],
             '$22load_attr.9': [(<numba.core.ir.Assign object at 0x7f15911f2170>,
                                 0)],
             '$26binary_subscr.11': [(<numba.core.ir.Assign object at 0x7f15910cabf0>,
                                      0)],
             '$28binary_add.12': [(<numba.core.ir.Assign object at 0x7f15911f1870>,
                                   0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7f15911d0dc0>,
                                  0)],
             '$40compare_op.17': [(<numba.core.ir.Assign object at 0x7f15911f3f70>,
                                   0)],
             '$42pred': [(<numba.core.ir.Assign object at 0x7f15911f26e0>, 0)],
             '$46return_value.1': [(<numba.core.ir.Assign object at 0x7f15911f1630>,
                                    44)],
             '$52compare_op.2': [(<numba.core.ir.Assign object at 0x7f15911f1f90>,
                                  48)],
             '$54pred': [(<numba.core.ir.Assign object at 0x7f15911f3190>, 48)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x7f15911f0220>,
                                   56)],
             '$58return_value.1': [(<numba.core.ir.Assign object at 0x7f15911f0100>,
                                    56)],
             '$60load_global.0': [(<numba.core.ir.Assign object at 0x7f15911dd480>,
                                   60)],
             '$62load_method.1': [(<numba.core.ir.Assign object at 0x7f15911d0310>,
                                   60)],
             '$68binary_true_divide.4': [(<numba.core.ir.Assign object at 0x7f15911d08e0>,
                                          60)],
             '$70call_method.5': [(<numba.core.ir.Assign object at 0x7f1590ed0e50>,
                                   60)],
             '$72unary_negative.6': [(<numba.core.ir.Assign object at 0x7f15910118a0>,
                                      60)],
             '$74return_value.7': [(<numba.core.ir.Assign object at 0x7f1590d37ca0>,
                                    60)],
             '$const16.6.1': [(<numba.core.ir.Assign object at 0x7f15911f37c0>,
                               0)],
             '$const24.10.1': [(<numba.core.ir.Assign object at 0x7f15911f2dd0>,
                                0)],
             '$const38.16.1': [(<numba.core.ir.Assign object at 0x7f15911f31f0>,
                                0)],
             '$const44.0.2': [(<numba.core.ir.Assign object at 0x7f15911f2860>,
                               44)],
             '$const50.1.1': [(<numba.core.ir.Assign object at 0x7f15911f3340>,
                               48)],
             'bool42': [(<numba.core.ir.Assign object at 0x7f15911f1690>, 0)],
             'bool54': [(<numba.core.ir.Assign object at 0x7f15911f3be0>, 48)],
             'data1': [(<numba.core.ir.Assign object at 0x7f15911d0190>, 0)],
             'data2': [(<numba.core.ir.Assign object at 0x7f15911d0af0>, 0)],
             'ind1': [(<numba.core.ir.Assign object at 0x7f15911d0100>, 0)],
             'ind2': [(<numba.core.ir.Assign object at 0x7f15911d1660>, 0)],
             'num_equal': [(<numba.core.ir.Assign object at 0x7f15911f2470>,
                            0)],
             'num_non_zero': [(<numba.core.ir.Assign object at 0x7f15911f3700>,
                               0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x7f15911ddc30>
DEBUG:mlmarker.utils:Features added: 0, removed: 0, remaining: 5979
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:matplotlib.pyplot:Loaded backend module://matplotlib_inline.backend_inline version unknown.
DEBUG:matplotlib.pyplot:Loaded backend module://matplotlib_inline.backend_inline version unknown.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 2.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 2.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifKannada-Bold.ttf', name='Noto Serif Kannada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumSquareB.ttf', name='NanumSquare', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifEthiopic-Bold.ttf', name='Noto Serif Ethiopic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Vector-Regular.otf', name='MathJax_Vector', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansShavian-Regular.ttf', name='Noto Sans Shavian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifKhmer-Bold.ttf', name='Noto Serif Khmer', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifArmenian-Bold.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-SemiboldItalic.ttf', name='Lato', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTamilUI-Regular.ttf', name='Noto Sans Tamil UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_AMS-Regular.otf', name='MathJax_AMS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansArmenian-Regular.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGeorgian-Regular.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Bold.ttf', name='Lato', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansSymbols-Bold.ttf', name='Noto Sans Symbols', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 2.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMalayalamUI-Regular.ttf', name='Noto Sans Malayalam UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 2.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGurmukhi-Regular.ttf', name='Noto Sans Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BoldItalic.ttf', name='Lato', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifTamil-Regular.ttf', name='Noto Serif Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HairlineItalic.ttf', name='Lato', style='italic', variant='normal', weight=100, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansLao-Bold.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMalayalam-Regular.ttf', name='Noto Sans Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifGeorgian-Bold.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Italic.otf', name='MathJax_SansSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGujarati-Regular.ttf', name='Noto Sans Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDevanagariUI-Regular.ttf', name='Noto Sans Devanagari UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size4-Regular.otf', name='MathJax_Size4', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDisplay-Italic.ttf', name='Noto Sans Display', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDeseret-Regular.ttf', name='Noto Sans Deseret', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoNaskhArabicUI-Regular.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKhmerUI-Bold.ttf', name='Noto Sans Khmer UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Medium.ttf', name='Lato', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansThaiUI-Regular.ttf', name='Noto Sans Thai UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Black.ttf', name='Lato', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansThaiUI-Bold.ttf', name='Noto Sans Thai UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGujarati-Bold.ttf', name='Noto Sans Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifBengali-Regular.ttf', name='Noto Serif Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMyanmarUI-Regular.ttf', name='Noto Sans Myanmar UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-ThinItalic.ttf', name='Lato', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMyanmarUI-Bold.ttf', name='Noto Sans Myanmar UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifSinhala-Bold.ttf', name='Noto Serif Sinhala', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoKufiArabic-Bold.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansBengaliUI-Bold.ttf', name='Noto Sans Bengali UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifMalayalam-Bold.ttf', name='Noto Serif Malayalam', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 5.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansEthiopic-Bold.ttf', name='Noto Sans Ethiopic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifMyanmar-Regular.ttf', name='Noto Serif Myanmar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKhmerUI-Regular.ttf', name='Noto Sans Khmer UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifThai-Bold.ttf', name='Noto Serif Thai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumSquareRoundB.ttf', name='NanumSquareRound', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_WinIE6-Regular.otf', name='MathJax_WinIE6', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Thin.ttf', name='Lato', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifGujarati-Regular.ttf', name='Noto Serif Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGeorgian-Bold.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansThai-Bold.ttf', name='Noto Sans Thai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Caligraphic-Regular.otf', name='MathJax_Caligraphic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 2.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoNaskhArabicUI-Bold.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifTelugu-Regular.ttf', name='Noto Serif Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size3-Regular.otf', name='MathJax_Size3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Regular.otf', name='MathJax_Main', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMalayalamUI-Bold.ttf', name='Noto Sans Malayalam UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Regular.otf', name='MathJax_SansSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansSinhala-Bold.ttf', name='Noto Sans Sinhala', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 3.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Script-Regular.otf', name='MathJax_Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifEthiopic-Regular.ttf', name='Noto Serif Ethiopic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGurmukhi-Bold.ttf', name='Noto Sans Gurmukhi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Bold.otf', name='MathJax_SansSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDevanagariUI-Bold.ttf', name='Noto Sans Devanagari UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumBarunGothicBold.ttf', name='NanumBarunGothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTamilUI-Bold.ttf', name='Noto Sans Tamil UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansHebrew-Regular.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTelugu-Bold.ttf', name='Noto Sans Telugu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_WinChrome-Regular.otf', name='MathJax_WinChrome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-Italic.otf', name='MathJax_Math', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKannadaUI-Bold.ttf', name='Noto Sans Kannada UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKhmer-Regular.ttf', name='Noto Sans Khmer', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoNaskhArabic-Regular.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansArmenian-Bold.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMyanmar-Bold.ttf', name='Noto Sans Myanmar', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansArabic-Regular.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansLaoUI-Regular.ttf', name='Noto Sans Lao UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-LightItalic.ttf', name='Lato', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Heavy.ttf', name='Lato', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 2.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansLaoUI-Bold.ttf', name='Noto Sans Lao UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKannada-Regular.ttf', name='Noto Sans Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Vector-Bold.otf', name='MathJax_Vector-Bold', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDisplay-Regular.ttf', name='Noto Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTamil-Regular.ttf', name='Noto Sans Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansThaana-Bold.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGurmukhiUI-Regular.ttf', name='Noto Sans Gurmukhi UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumGothic.ttf', name='NanumGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifDisplay-Bold.ttf', name='Noto Serif Display', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansLao-Regular.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Fraktur-Bold.otf', name='MathJax_Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifArmenian-Regular.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf', name='NanumBarunGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansArabicUI-Bold.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifMyanmar-Bold.ttf', name='Noto Serif Myanmar', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 5.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Chilanka-Regular.ttf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifBengali-Bold.ttf', name='Noto Serif Bengali', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKannada-Bold.ttf', name='Noto Sans Kannada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifDisplay-Regular.ttf', name='Noto Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoKufiArabic-Regular.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumMyeongjoBold.ttf', name='NanumMyeongjo', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansSymbols-Regular.ttf', name='Noto Sans Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOriyaUI-Regular.ttf', name='Noto Sans Oriya UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansBengali-Regular.ttf', name='Noto Sans Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifMalayalam-Regular.ttf', name='Noto Serif Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTibetan-Regular.ttf', name='Noto Sans Tibetan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 5.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-R.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifKannada-Regular.ttf', name='Noto Serif Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTeluguUI-Regular.ttf', name='Noto Sans Telugu UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGurmukhiUI-Bold.ttf', name='Noto Sans Gurmukhi UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-BoldItalic.otf', name='MathJax_Math', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifTamil-Bold.ttf', name='Noto Serif Tamil', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumSquareRoundR.ttf', name='NanumSquareRound', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKannadaUI-Regular.ttf', name='Noto Sans Kannada UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOriya-Bold.ttf', name='Noto Sans Oriya', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDisplay-Bold.ttf', name='Noto Sans Display', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifDisplay-BoldItalic.ttf', name='Noto Serif Display', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifThai-Regular.ttf', name='Noto Serif Thai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size2-Regular.otf', name='MathJax_Size2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HeavyItalic.ttf', name='Lato', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGujaratiUI-Regular.ttf', name='Noto Sans Gujarati UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansHebrew-Bold.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Typewriter-Regular.otf', name='MathJax_Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansArabic-Bold.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTelugu-Regular.ttf', name='Noto Sans Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Italic.ttf', name='Lato', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/takao-gothic/TakaoPGothic.ttf', name='TakaoPGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDevanagari-Regular.ttf', name='Noto Sans Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-MediumItalic.ttf', name='Lato', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BlackItalic.ttf', name='Lato', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Regular.ttf', name='Lato', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansAdlamUnjoined-Regular.ttf', name='Noto Sans Adlam Unjoined', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifHebrew-Bold.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 2.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansBengaliUI-Regular.ttf', name='Noto Sans Bengali UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-japanese-gothic.ttf', name='TakaoPGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifHebrew-Regular.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansSinhala-Regular.ttf', name='Noto Sans Sinhala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifLao-Bold.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ancient-scripts/Symbola_hint.ttf', name='Symbola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifLao-Regular.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansSinhalaUI-Bold.ttf', name='Noto Sans Sinhala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDisplay-BoldItalic.ttf', name='Noto Sans Display', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-Regular.otf', name='MathJax_Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Italic.otf', name='MathJax_Main', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOriyaUI-Bold.ttf', name='Noto Sans Oriya UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifGeorgian-Regular.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKhmer-Bold.ttf', name='Noto Sans Khmer', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoNaskhArabic-Bold.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTamil-Bold.ttf', name='Noto Sans Tamil', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansBengali-Bold.ttf', name='Noto Sans Bengali', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifDisplay-Italic.ttf', name='Noto Serif Display', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam.ttf', name='Keraleeyam', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTibetan-Bold.ttf', name='Noto Sans Tibetan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 3.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Bold.otf', name='MathJax_Main', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOriya-Regular.ttf', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansEthiopic-Regular.ttf', name='Noto Sans Ethiopic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumSquareR.ttf', name='NanumSquare', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansCherokee-Bold.ttf', name='Noto Sans Cherokee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Caligraphic-Bold.otf', name='MathJax_Caligraphic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansArabicUI-Regular.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size1-Regular.otf', name='MathJax_Size1', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDevanagari-Bold.ttf', name='Noto Sans Devanagari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob.ttf', name='Uroob', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Fraktur-Regular.otf', name='MathJax_Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifDevanagari-Bold.ttf', name='Noto Serif Devanagari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumGothicBold.ttf', name='NanumGothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifGujarati-Bold.ttf', name='Noto Serif Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 5.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifKhmer-Regular.ttf', name='Noto Serif Khmer', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTeluguUI-Bold.ttf', name='Noto Sans Telugu UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifDevanagari-Regular.ttf', name='Noto Serif Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansSinhalaUI-Regular.ttf', name='Noto Sans Sinhala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMyanmar-Regular.ttf', name='Noto Sans Myanmar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMalayalam-Bold.ttf', name='Noto Sans Malayalam', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifSinhala-Regular.ttf', name='Noto Serif Sinhala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansCherokee-Regular.ttf', name='Noto Sans Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansThai-Regular.ttf', name='Noto Sans Thai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumMyeongjo.ttf', name='NanumMyeongjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGujaratiUI-Bold.ttf', name='Noto Sans Gujarati UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Semibold.ttf', name='Lato', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifTelugu-Bold.ttf', name='Noto Serif Telugu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 2.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=11.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 2.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 2.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifKannada-Bold.ttf', name='Noto Serif Kannada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumSquareB.ttf', name='NanumSquare', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifEthiopic-Bold.ttf', name='Noto Serif Ethiopic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Vector-Regular.otf', name='MathJax_Vector', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansShavian-Regular.ttf', name='Noto Sans Shavian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifKhmer-Bold.ttf', name='Noto Serif Khmer', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifArmenian-Bold.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-SemiboldItalic.ttf', name='Lato', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTamilUI-Regular.ttf', name='Noto Sans Tamil UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_AMS-Regular.otf', name='MathJax_AMS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansArmenian-Regular.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGeorgian-Regular.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Bold.ttf', name='Lato', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansSymbols-Bold.ttf', name='Noto Sans Symbols', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 2.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMalayalamUI-Regular.ttf', name='Noto Sans Malayalam UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 2.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGurmukhi-Regular.ttf', name='Noto Sans Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BoldItalic.ttf', name='Lato', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifTamil-Regular.ttf', name='Noto Serif Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HairlineItalic.ttf', name='Lato', style='italic', variant='normal', weight=100, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansLao-Bold.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMalayalam-Regular.ttf', name='Noto Sans Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifGeorgian-Bold.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Italic.otf', name='MathJax_SansSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGujarati-Regular.ttf', name='Noto Sans Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDevanagariUI-Regular.ttf', name='Noto Sans Devanagari UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size4-Regular.otf', name='MathJax_Size4', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDisplay-Italic.ttf', name='Noto Sans Display', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDeseret-Regular.ttf', name='Noto Sans Deseret', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoNaskhArabicUI-Regular.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKhmerUI-Bold.ttf', name='Noto Sans Khmer UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Medium.ttf', name='Lato', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansThaiUI-Regular.ttf', name='Noto Sans Thai UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Black.ttf', name='Lato', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansThaiUI-Bold.ttf', name='Noto Sans Thai UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGujarati-Bold.ttf', name='Noto Sans Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifBengali-Regular.ttf', name='Noto Serif Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMyanmarUI-Regular.ttf', name='Noto Sans Myanmar UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-ThinItalic.ttf', name='Lato', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMyanmarUI-Bold.ttf', name='Noto Sans Myanmar UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifSinhala-Bold.ttf', name='Noto Serif Sinhala', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoKufiArabic-Bold.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansBengaliUI-Bold.ttf', name='Noto Sans Bengali UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifMalayalam-Bold.ttf', name='Noto Serif Malayalam', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 5.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansEthiopic-Bold.ttf', name='Noto Sans Ethiopic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifMyanmar-Regular.ttf', name='Noto Serif Myanmar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKhmerUI-Regular.ttf', name='Noto Sans Khmer UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifThai-Bold.ttf', name='Noto Serif Thai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumSquareRoundB.ttf', name='NanumSquareRound', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_WinIE6-Regular.otf', name='MathJax_WinIE6', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Thin.ttf', name='Lato', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifGujarati-Regular.ttf', name='Noto Serif Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGeorgian-Bold.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansThai-Bold.ttf', name='Noto Sans Thai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Caligraphic-Regular.otf', name='MathJax_Caligraphic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 2.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoNaskhArabicUI-Bold.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifTelugu-Regular.ttf', name='Noto Serif Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size3-Regular.otf', name='MathJax_Size3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Regular.otf', name='MathJax_Main', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMalayalamUI-Bold.ttf', name='Noto Sans Malayalam UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Regular.otf', name='MathJax_SansSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansSinhala-Bold.ttf', name='Noto Sans Sinhala', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 3.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Script-Regular.otf', name='MathJax_Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifEthiopic-Regular.ttf', name='Noto Serif Ethiopic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGurmukhi-Bold.ttf', name='Noto Sans Gurmukhi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_SansSerif-Bold.otf', name='MathJax_SansSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDevanagariUI-Bold.ttf', name='Noto Sans Devanagari UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumBarunGothicBold.ttf', name='NanumBarunGothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTamilUI-Bold.ttf', name='Noto Sans Tamil UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansHebrew-Regular.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTelugu-Bold.ttf', name='Noto Sans Telugu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_WinChrome-Regular.otf', name='MathJax_WinChrome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-Italic.otf', name='MathJax_Math', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKannadaUI-Bold.ttf', name='Noto Sans Kannada UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKhmer-Regular.ttf', name='Noto Sans Khmer', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoNaskhArabic-Regular.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansArmenian-Bold.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMyanmar-Bold.ttf', name='Noto Sans Myanmar', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansArabic-Regular.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansLaoUI-Regular.ttf', name='Noto Sans Lao UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-LightItalic.ttf', name='Lato', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Heavy.ttf', name='Lato', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 2.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansLaoUI-Bold.ttf', name='Noto Sans Lao UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKannada-Regular.ttf', name='Noto Sans Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Vector-Bold.otf', name='MathJax_Vector-Bold', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDisplay-Regular.ttf', name='Noto Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTamil-Regular.ttf', name='Noto Sans Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansThaana-Bold.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGurmukhiUI-Regular.ttf', name='Noto Sans Gurmukhi UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumGothic.ttf', name='NanumGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifDisplay-Bold.ttf', name='Noto Serif Display', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansLao-Regular.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Fraktur-Bold.otf', name='MathJax_Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifArmenian-Regular.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf', name='NanumBarunGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansArabicUI-Bold.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifMyanmar-Bold.ttf', name='Noto Serif Myanmar', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 5.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Chilanka-Regular.ttf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifBengali-Bold.ttf', name='Noto Serif Bengali', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKannada-Bold.ttf', name='Noto Sans Kannada', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifDisplay-Regular.ttf', name='Noto Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoKufiArabic-Regular.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumMyeongjoBold.ttf', name='NanumMyeongjo', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansSymbols-Regular.ttf', name='Noto Sans Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOriyaUI-Regular.ttf', name='Noto Sans Oriya UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansBengali-Regular.ttf', name='Noto Sans Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifMalayalam-Regular.ttf', name='Noto Serif Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTibetan-Regular.ttf', name='Noto Sans Tibetan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 5.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-R.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifKannada-Regular.ttf', name='Noto Serif Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTeluguUI-Regular.ttf', name='Noto Sans Telugu UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGurmukhiUI-Bold.ttf', name='Noto Sans Gurmukhi UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-BoldItalic.otf', name='MathJax_Math', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifTamil-Bold.ttf', name='Noto Serif Tamil', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumSquareRoundR.ttf', name='NanumSquareRound', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKannadaUI-Regular.ttf', name='Noto Sans Kannada UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOriya-Bold.ttf', name='Noto Sans Oriya', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDisplay-Bold.ttf', name='Noto Sans Display', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifDisplay-BoldItalic.ttf', name='Noto Serif Display', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifThai-Regular.ttf', name='Noto Serif Thai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size2-Regular.otf', name='MathJax_Size2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HeavyItalic.ttf', name='Lato', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGujaratiUI-Regular.ttf', name='Noto Sans Gujarati UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansHebrew-Bold.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Typewriter-Regular.otf', name='MathJax_Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansArabic-Bold.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTelugu-Regular.ttf', name='Noto Sans Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Italic.ttf', name='Lato', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/takao-gothic/TakaoPGothic.ttf', name='TakaoPGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDevanagari-Regular.ttf', name='Noto Sans Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-MediumItalic.ttf', name='Lato', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BlackItalic.ttf', name='Lato', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Regular.ttf', name='Lato', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansAdlamUnjoined-Regular.ttf', name='Noto Sans Adlam Unjoined', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifHebrew-Bold.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 2.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansBengaliUI-Regular.ttf', name='Noto Sans Bengali UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-japanese-gothic.ttf', name='TakaoPGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifHebrew-Regular.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansSinhala-Regular.ttf', name='Noto Sans Sinhala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifLao-Bold.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ancient-scripts/Symbola_hint.ttf', name='Symbola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifLao-Regular.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansSinhalaUI-Bold.ttf', name='Noto Sans Sinhala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDisplay-BoldItalic.ttf', name='Noto Sans Display', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Math-Regular.otf', name='MathJax_Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Italic.otf', name='MathJax_Main', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOriyaUI-Bold.ttf', name='Noto Sans Oriya UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifGeorgian-Regular.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKhmer-Bold.ttf', name='Noto Sans Khmer', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoNaskhArabic-Bold.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTamil-Bold.ttf', name='Noto Sans Tamil', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansBengali-Bold.ttf', name='Noto Sans Bengali', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifDisplay-Italic.ttf', name='Noto Serif Display', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam.ttf', name='Keraleeyam', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTibetan-Bold.ttf', name='Noto Sans Tibetan', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 3.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Main-Bold.otf', name='MathJax_Main', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansOriya-Regular.ttf', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansEthiopic-Regular.ttf', name='Noto Sans Ethiopic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumSquareR.ttf', name='NanumSquare', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansCherokee-Bold.ttf', name='Noto Sans Cherokee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Caligraphic-Bold.otf', name='MathJax_Caligraphic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansArabicUI-Regular.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Size1-Regular.otf', name='MathJax_Size1', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansDevanagari-Bold.ttf', name='Noto Sans Devanagari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob.ttf', name='Uroob', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/mathjax/MathJax_Fraktur-Regular.otf', name='MathJax_Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifDevanagari-Bold.ttf', name='Noto Serif Devanagari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumGothicBold.ttf', name='NanumGothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifGujarati-Bold.ttf', name='Noto Serif Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 5.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifKhmer-Regular.ttf', name='Noto Serif Khmer', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansTeluguUI-Bold.ttf', name='Noto Sans Telugu UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifDevanagari-Regular.ttf', name='Noto Serif Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansSinhalaUI-Regular.ttf', name='Noto Sans Sinhala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMyanmar-Regular.ttf', name='Noto Sans Myanmar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMalayalam-Bold.ttf', name='Noto Sans Malayalam', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifSinhala-Regular.ttf', name='Noto Serif Sinhala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansCherokee-Regular.ttf', name='Noto Sans Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansThai-Regular.ttf', name='Noto Sans Thai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/nanum/NanumMyeongjo.ttf', name='NanumMyeongjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGujaratiUI-Bold.ttf', name='Noto Sans Gujarati UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Semibold.ttf', name='Lato', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSerifTelugu-Bold.ttf', name='Noto Serif Telugu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=11.0 to DejaVu Sans ('/home/compomics/miniconda3/envs/mlmarker/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 2.050000.
INFO:root:Starting MLMarker_to_Dataframe
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_08_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_08_01.mgf.gzip
INFO:root:(1056, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_08_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_08_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_08_01.mgf.gzip
INFO:root:(1174, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database  q-value
0     NRX2A_HUMAN((514-523))((Q9P2S2))        T  0.00304
3      VTNC_HUMAN((338-354))((P04004))        T  0.00304
4       CAD13_HUMAN((66-86))((P55290))        T  0.00304
16    FBLN1_HUMAN((386-396))((P23142))        T  0.00304
39     VTNC_HUMAN((338-354))((P04004))        T  0.00304
...                                ...      ...      ...
1155    NCHL1_HUMAN((72-83))((O00533))        T  0.00304
1160    NCHL1_HUMAN((72-83))((O00533))        T  0.00304
1164     P3IP1_HUMAN((5-35))((Q96FE7))        T  0.00304
1169  APLP1_HUMAN((447-460))((P51693))        T  0.00304
1171  APLP1_HUMAN((430-460))((P51693))        T  0.00304

[309 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fraction_08_01.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5906, removed: 69, remaining: 73
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5906, removed: 69, remaining: 73
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5906
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland  Thyroid  Endometrium  Prostate  Adrenal gland  \
0               0.08046  0.05959      0.00764   0.00726        0.00703   

tissue  Stomach  Monocytes    Colon   Kidney  Salivary gland  ...   Spleen  \
0         0.007    0.00607  0.00402  0.00311         0.00225  ... -0.00766   

tissue    Ovary  Appendix  Esophagus    Brain  Adipose tissue  Lymph node  \
0      -0.00802  -0.00822    -0.0086 -0.00863        -0.01006    -0.01182   

tissue     Lung   Testis  Bone marrow  
0      -0.02481 -0.02672     -0.03711  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_14_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_14_02Jupiter.mgf.gzip
INFO:root:(3681, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                               proteins database   q-value
6        C1S_HUMAN((482-497))((P09871))        T  0.009091
8        CO2_HUMAN((175-190))((P06681))        T  0.009091
21     KLKB1_HUMAN((360-374))((P03952))        T  0.009091
25    APOA_HUMAN((3582-3609))((P08519))        T  0.009091
49       CO2_HUMAN((175-190))((P06681))        T  0.009091
...                                 ...      ...       ...
3171   APOA4_HUMAN((254-267))((P06727))        T  0.009091
3289    FETUA_HUMAN((70-100))((P02765))        T  0.009091
3426   CBPB2_HUMAN((243-258))((Q96IY4))        T  0.009091
3478    FIBA_HUMAN((288-309))((P02671))        T  0.009091
3565      GSTO1_HUMAN((1-26))((P78417))        T  0.009091

[83 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_14_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5953, removed: 13, remaining: 26
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5953, removed: 13, remaining: 26
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5953
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix   Kidney    Colon    Ovary  Salivary gland  \
0              0.06981   0.01164  0.00726  0.00499  0.00407         0.00108   

tissue  Lymph node  Stomach  Urinary bladder    Liver  ...   Testis  Prostate  \
0          0.00089  0.00062          0.00055  0.00046  ... -0.00361  -0.00435   

tissue  Esophagus  B-cells  Smooth muscle    Brain  Endometrium  Nasal Polyps  \
0        -0.00446 -0.00468       -0.00527 -0.00534     -0.00614      -0.00622   

tissue     Lung  Bone marrow  
0      -0.00646     -0.03339  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_02_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_02_02Jupiter.mgf.gzip
INFO:root:(4740, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database  q-value
5        CYTC_HUMAN((35-51))((P01034))        T  0.00173
10    NPTXR_HUMAN((270-278))((O95502))        T  0.00173
22       PTGDS_HUMAN((9-39))((P41222))        T  0.00173
25    FRS1L_HUMAN((239-253))((Q9P0K9))        T  0.00173
26    NELL2_HUMAN((755-767))((Q99435))        T  0.00173
...                                ...      ...      ...
4676     CYTC_HUMAN((35-51))((P01034))        T  0.00173
4684     CYTC_HUMAN((35-51))((P01034))        T  0.00173
4725     CYTC_HUMAN((35-51))((P01034))        T  0.00173
4732     CYTC_HUMAN((35-51))((P01034))        T  0.00173
4739     CYTC_HUMAN((35-51))((P01034))        T  0.00173

[554 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_02_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5906, removed: 56, remaining: 73
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5906, removed: 56, remaining: 73
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5906
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Adrenal gland  Thyroid  Stomach    Heart  \
0               0.17534  0.14209         0.0415  0.01336  0.00596  0.00308   

tissue  Salivary gland   Rectum  Nasal Polyps  Duodenum  ...  Esophagus  \
0              0.00138 -0.00023       -0.0006  -0.00064  ...   -0.01188   

tissue  Endometrium   Kidney  Monocytes   Spleen  Urinary bladder  Lymph node  \
0          -0.01195 -0.01637   -0.01656 -0.01686         -0.01729    -0.02238   

tissue   Testis     Lung  Bone marrow  
0      -0.02368 -0.05268     -0.11335  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_07_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_07_02(Jupiter).mgf.gzip
INFO:root:(2124, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_07_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_07_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_07_02(Jupiter).mgf.gzip
INFO:root:(2920, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                             proteins database   q-value
9     VTNC_HUMAN((338-354))((P04004))        T  0.004292
19    FETUA_HUMAN((70-100))((P02765))        T  0.004292
24    FETUA_HUMAN((70-100))((P02765))        T  0.004292
31    APOE_HUMAN((210-225))((P02649))        T  0.004292
50    VTNC_HUMAN((338-354))((P04004))        T  0.004292
...                               ...      ...       ...
2879  VTNC_HUMAN((338-354))((P04004))        T  0.004292
2880  VTNC_HUMAN((338-354))((P04004))        T  0.004292
2899  VTNC_HUMAN((338-354))((P04004))        T  0.004292
2908  AACT_HUMAN((217-231))((P01011))        T  0.004292
2911  AACT_HUMAN((217-231))((P01011))        T  0.004292

[209 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_07_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5947, removed: 14, remaining: 32
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5947, removed: 14, remaining: 32
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5947
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Monocytes  Appendix    Colon  Urinary bladder  \
0              0.04827    0.03887   0.01211  0.00897           0.0073   

tissue   Rectum    Liver  Small intestine  Duodenum    Ovary  ...  \
0       0.00515  0.00367          0.00315   0.00274  0.00106  ...   

tissue  Adrenal gland  Esophagus   Brain   Spleen   Kidney  Smooth muscle  \
0             -0.0051   -0.00559 -0.0068 -0.00693 -0.00723       -0.00853   

tissue  Endometrium   Testis     Lung  Bone marrow  
0          -0.00975 -0.01092 -0.01173     -0.02862  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_04_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_04_02(Jupiter).mgf.gzip
INFO:root:(4986, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
50       CYTC_HUMAN((35-52))((P01034))        T  0.002475
93    APOA4_HUMAN((254-265))((P06727))        T  0.004158
160    THRB_HUMAN((100-118))((P00734))        T  0.002475
166    THRB_HUMAN((100-118))((P00734))        T  0.002475
193    CFAH_HUMAN((296-304))((P08603))        T  0.009597
...                                ...      ...       ...
4904    CO2_HUMAN((677-688))((P06681))        T  0.002475
4913   CERU_HUMAN((485-501))((P00450))        T  0.002475
4922   HEP2_HUMAN((416-432))((P05546))        T  0.002475
4930   CERU_HUMAN((485-501))((P00450))        T  0.002475
4948   FIBA_HUMAN((405-426))((P02671))        T  0.002475

[413 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_04_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5924, removed: 30, remaining: 55
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5924, removed: 30, remaining: 55
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5924
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue    Brain  Adipose tissue  Monocytes   Spleen  Placenta  Bone marrow  \
0       0.07202         0.04285    0.02211  0.01518   0.01135      0.00483   

tissue  Appendix    Colon    Liver  Salivary gland  ...  Stomach  Prostate  \
0        0.00345  0.00318  0.00154         0.00027  ... -0.00701   -0.0079   

tissue   Kidney  Esophagus  Smooth muscle  Lymph node  Thyroid     Lung  \
0      -0.00897    -0.0094       -0.01098    -0.01242 -0.01377 -0.01458   

tissue  Endometrium   Testis  
0          -0.01777 -0.03423  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_05_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_05_02Jupiter.mgf.gzip
INFO:root:(4271, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                               proteins database   q-value
15     ITIH5_HUMAN((625-654))((Q86UX2))        T  0.003650
128    APOA4_HUMAN((288-305))((P06727))        T  0.003650
163       RCN2_HUMAN((25-36))((Q14257))        T  0.006897
186     HEMO_HUMAN((226-235))((P02790))        T  0.003650
212   MDC1_HUMAN((1884-1905))((Q14676))        T  0.003650
...                                 ...      ...       ...
4235     VGF_HUMAN((279-296))((O15240))        T  0.003650
4243      CYTC_HUMAN((35-51))((P01034))        T  0.003650
4246    CFAH_HUMAN((574-583))((P08603))        T  0.003650
4247      IBP5_HUMAN((50-74))((P24593))        T  0.003650
4254    ANT3_HUMAN((202-216))((P01008))        T  0.003650

[248 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_05_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5919, removed: 43, remaining: 60
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5919, removed: 43, remaining: 60
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5919
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Adrenal gland  Thyroid  Appendix   Kidney  \
0               0.16313  0.10662        0.03061  0.02774   0.00513  0.00312   

tissue  Salivary gland  Prostate    Heart  Stomach  ...  B-cells  Placenta  \
0              0.00077  -0.00002 -0.00043 -0.00049  ... -0.00755  -0.00931   

tissue  Esophagus   Testis  Smooth muscle  Endometrium  Urinary bladder  \
0        -0.01275 -0.01326       -0.01617     -0.01892          -0.0191   

tissue  Lymph node     Lung  Bone marrow  
0         -0.02151 -0.04952     -0.10703  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_22_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_22_02Jupiter.mgf.gzip
INFO:root:(1748, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
8      PEDF_HUMAN((307-317))((P36955))        T  0.005525
9     FBLN3_HUMAN((316-329))((Q12805))        T  0.005525
10    P3IP1_HUMAN((141-156))((Q96FE7))        T  0.005525
18     MIME_HUMAN((189-196))((P20774))        T  0.005525
26      VGF_HUMAN((268-279))((O15240))        T  0.005525
...                                ...      ...       ...
1729      CFAB_HUMAN((3-33))((P00751))        T  0.007026
1730   VTNC_HUMAN((354-363))((P04004))        T  0.005525
1733     JAM1_HUMAN((48-60))((Q9Y624))        T  0.009238
1734    CBLN4_HUMAN((54-66))((Q9NTU7))        T  0.005525
1742  CH3L1_HUMAN((311-322))((P36222))        T  0.005525

[245 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_22_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5900, removed: 50, remaining: 79
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5900, removed: 50, remaining: 79
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5900
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue    Brain  Pituitary gland  Thyroid    Ovary  Prostate  Adrenal gland  \
0       0.09047          0.07579  0.03213  0.01468   0.01294        0.01275   

tissue  Stomach   Testis  Appendix  Salivary gland  ...  Parotid gland  \
0       0.00445  0.00417   0.00377         0.00184  ...       -0.00562   

tissue    Liver  Kidney  Urinary bladder  Lymph node  Endometrium  \
0      -0.00577 -0.0085         -0.01132     -0.0167     -0.01838   

tissue  Smooth muscle   Spleen     Lung  Bone marrow  
0            -0.01861 -0.02041 -0.03907     -0.07693  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_16_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_16_02Jupiter.mgf.gzip
INFO:root:(3108, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
6      PLMN_HUMAN((491-513))((P00747))        T  0.007194
37      CJ095_HUMAN((64-83))((Q9H7T3))        T  0.007194
84      C4BPA_HUMAN((79-88))((P04003))        T  0.007194
106    HEMO_HUMAN((209-220))((P02790))        T  0.007194
145    AMBP_HUMAN((283-294))((P02760))        T  0.007194
...                                ...      ...       ...
2995  KLKB1_HUMAN((360-374))((P03952))        T  0.007194
3049   PLMN_HUMAN((491-513))((P00747))        T  0.007194
3052   PLMN_HUMAN((491-513))((P00747))        T  0.007194
3073   PLMN_HUMAN((491-513))((P00747))        T  0.007194
3092   PLMN_HUMAN((491-513))((P00747))        T  0.007194

[107 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_16_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5943, removed: 16, remaining: 36
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5943, removed: 16, remaining: 36
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5943
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix    Ovary  Placenta  Urinary bladder  \
0                0.055   0.00965  0.00681   0.00667          0.00476   

tissue  Lymph node  Pituitary gland   Rectum  Stomach  Prostate  ...  B-cells  \
0          0.00376          0.00221  0.00144  0.00097   0.00053  ... -0.00402   

tissue  Esophagus  Spleen  Parotid gland  Endometrium  Thyroid  Smooth muscle  \
0        -0.00532 -0.0056       -0.00562     -0.00567 -0.00578       -0.00599   

tissue   Testis    Brain  Bone marrow  
0      -0.01071 -0.01138     -0.01886  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_08_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_08_02(Jupiter).mgf.gzip
INFO:root:(3498, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                             proteins database   q-value
3     C1QB_HUMAN((142-157))((P02746))        T  0.001698
12    VTNC_HUMAN((338-354))((P04004))        T  0.001698
16      APOA_HUMAN((79-92))((P08519))        T  0.001698
20    VTNC_HUMAN((338-354))((P04004))        T  0.001698
22    VTNC_HUMAN((338-354))((P04004))        T  0.001698
...                               ...      ...       ...
3463  VTNC_HUMAN((331-354))((P04004))        T  0.001698
3468  VTNC_HUMAN((338-354))((P04004))        T  0.001698
3473  VTNC_HUMAN((338-354))((P04004))        T  0.001698
3476  VTNC_HUMAN((338-354))((P04004))        T  0.001698
3483  VTNC_HUMAN((338-354))((P04004))        T  0.001698

[594 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_08_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5922, removed: 33, remaining: 57
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5922, removed: 33, remaining: 57
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5922
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Monocytes  Appendix    Colon  Urinary bladder  \
0              0.04801    0.03371   0.01815  0.01446          0.00864   

tissue  Placenta  Lymph node  Stomach    Ovary  Pituitary gland  ...   Spleen  \
0        0.00846     0.00461  0.00378  0.00377          0.00223  ... -0.00329   

tissue  Smooth muscle  Nasal Polyps  Esophagus  Parotid gland  Endometrium  \
0             -0.0035      -0.00356   -0.00379       -0.00501     -0.00825   

tissue  Thyroid    Brain   Testis  Bone marrow  
0      -0.00913 -0.01826 -0.03238     -0.04549  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_18_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_18_02(Jupiter).mgf.gzip
INFO:root:(1582, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_18_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_03_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_03_02Jupiter.mgf.gzip
INFO:root:(5868, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                             proteins database   q-value
12    IBP2_HUMAN((302-318))((P18065))        T  0.006173
13     CYTC_HUMAN((97-119))((P01034))        T  0.001815
16    IBP2_HUMAN((302-318))((P18065))        T  0.001815
21     CYTC_HUMAN((97-119))((P01034))        T  0.001815
30    IBP2_HUMAN((302-318))((P18065))        T  0.001815
...                               ...      ...       ...
5807    CYTC_HUMAN((35-51))((P01034))        T  0.001815
5811  KLK6_HUMAN((191-209))((Q92876))        T  0.001815
5831  OSTP_HUMAN((204-221))((P10451))        T  0.001815
5848  OSTP_HUMAN((204-221))((P10451))        T  0.001815
5860    CYTC_HUMAN((35-51))((P01034))        T  0.001815

[568 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_03_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5890, removed: 65, remaining: 89
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5890, removed: 65, remaining: 89
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5890
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Adrenal gland    Heart   Rectum  Stomach  \
0                0.2517  0.12734         0.0428  0.00237  0.00226 -0.00017   

tissue  Nasal Polyps  Small intestine   Tonsil  Skeletal muscle  ...  \
0           -0.00077          -0.0016 -0.00189          -0.0033  ...   

tissue  Prostate  Esophagus  Endometrium  Smooth muscle  Lymph node  \
0       -0.01273   -0.01456     -0.01513       -0.01783    -0.02133   

tissue  Urinary bladder  Thyroid   Testis     Lung  Bone marrow  
0              -0.02141 -0.02279 -0.02298 -0.05199     -0.11046  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_19_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_19_01.mgf.gzip
INFO:root:(497, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_19_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_20_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_20_01.mgf.gzip
INFO:root:(345, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_20_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_04_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_04_02Jupiter.mgf.gzip
INFO:root:(5071, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
2     COL12_HUMAN((662-674))((Q5KU26))        T  0.002088
6     COL12_HUMAN((662-674))((Q5KU26))        T  0.002088
9     COL12_HUMAN((662-674))((Q5KU26))        T  0.002088
28    FBLN3_HUMAN((331-359))((Q12805))        T  0.002088
30       CYTC_HUMAN((35-52))((P01034))        T  0.002088
...                                ...      ...       ...
5056     CYTC_HUMAN((35-52))((P01034))        T  0.002088
5057     CYTC_HUMAN((35-52))((P01034))        T  0.002088
5058  APLP1_HUMAN((540-549))((P51693))        T  0.002088
5061  APLP1_HUMAN((540-549))((P51693))        T  0.002088
5062     CYTC_HUMAN((32-51))((P01034))        T  0.002088

[482 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_04_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5902, removed: 53, remaining: 77
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5902, removed: 53, remaining: 77
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5902
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Adrenal gland  Thyroid  Prostate  Monocytes  \
0               0.20346  0.12121        0.03246  0.01763   0.00947    0.00612   

tissue  Nasal Polyps  Stomach   Rectum   Tonsil  ...  Endometrium    Ovary  \
0           -0.00088 -0.00183 -0.00189 -0.00208  ...     -0.01564 -0.01589   

tissue  Smooth muscle   Testis  Urinary bladder   Kidney   Spleen  Lymph node  \
0            -0.01704 -0.01984         -0.02112 -0.02323 -0.02336    -0.02484   

tissue     Lung  Bone marrow  
0      -0.04448     -0.07893  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_03_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_03_02Jupiter.mgf.gzip
INFO:root:(5266, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
0     APOA4_HUMAN((135-144))((P06727))        T  0.002222
37     ANT3_HUMAN((403-426))((P01008))        T  0.002222
57     ANT3_HUMAN((403-426))((P01008))        T  0.002222
65     CO8A_HUMAN((413-423))((P07357))        T  0.002222
70    ITIH4_HUMAN((300-308))((Q14624))        T  0.009009
...                                ...      ...       ...
5183    CO3_HUMAN((428-440))((P01024))        T  0.002222
5236   CERU_HUMAN((485-501))((P00450))        T  0.002222
5240   CERU_HUMAN((485-501))((P00450))        T  0.002222
5257    PZP_HUMAN((318-336))((P20742))        T  0.002222
5264  CADH5_HUMAN((223-231))((P33151))        T  0.005859

[456 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_03_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5902, removed: 38, remaining: 77
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5902, removed: 38, remaining: 77
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5902
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue    Ovary  Placenta  Monocytes  Appendix   Spleen  \
0              0.10436  0.02968   0.02007    0.01934   0.01521  0.01115   

tissue  Pituitary gland  Prostate    Colon   Rectum  ...  Thyroid  Oviduct  \
0               0.00667   0.00417  0.00384  0.00279  ... -0.00397 -0.00585   

tissue  Esophagus  Smooth muscle  Parotid gland  Endometrium     Lung  \
0        -0.00649       -0.00804       -0.00812     -0.01205 -0.02354   

tissue    Brain   Testis  Bone marrow  
0      -0.02442 -0.02576     -0.07798  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_06_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_06_02Jupiter.mgf.gzip
INFO:root:(2731, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                                proteins database   q-value
30         CYTC_HUMAN((35-52))((P01034))        T  0.009174
46         CYTC_HUMAN((32-52))((P01034))        T  0.009174
72         CYTC_HUMAN((35-52))((P01034))        T  0.009174
84         CYTC_HUMAN((35-52))((P01034))        T  0.009174
114        CYTC_HUMAN((35-52))((P01034))        T  0.009174
...                                  ...      ...       ...
2651       CYTC_HUMAN((32-52))((P01034))        T  0.009174
2670       CYTC_HUMAN((35-52))((P01034))        T  0.009174
2693       CYTC_HUMAN((35-52))((P01034))        T  0.009174
2699       CYTC_HUMAN((35-52))((P01034))        T  0.009174
2724  NCHL1_HUMAN((1031-1047))((O00533))        T  0.009174

[107 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_06_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5966, removed: 6, remaining: 13
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5966, removed: 6, remaining: 13
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5966
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland  Adrenal gland  Stomach  Esophagus    Colon  \
0               0.07762        0.01843  0.00761    0.00434  0.00406   

tissue  Lymph node  Appendix   Rectum  Salivary gland    Ovary  ...  B-cells  \
0          0.00384   0.00364  0.00237         0.00079  0.00023  ... -0.00382   

tissue  Adipose tissue    Brain  Nasal Polyps  Thyroid   Kidney   Testis  \
0             -0.00518 -0.00572      -0.00577 -0.00664 -0.00765 -0.00785   

tissue  Endometrium     Lung  Bone marrow  
0          -0.00788 -0.01286     -0.03223  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_01_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_01_02Jupiter.mgf.gzip
INFO:root:(2630, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
22     VTNC_HUMAN((242-269))((P04004))        T  0.003390
83    ITIH4_HUMAN((300-308))((Q14624))        T  0.003390
89     CFAB_HUMAN((671-680))((P00751))        T  0.003390
110     FBLN1_HUMAN((13-43))((P23142))        T  0.009231
111    PLMN_HUMAN((491-513))((P00747))        T  0.003390
...                                ...      ...       ...
2572   CO8A_HUMAN((112-135))((P07357))        T  0.003390
2594   VTNC_HUMAN((338-354))((P04004))        T  0.003390
2621   CLUS_HUMAN((326-337))((P10909))        T  0.003390
2625   VTNC_HUMAN((230-242))((P04004))        T  0.003390
2627    CO7_HUMAN((100-125))((P10643))        T  0.003390

[240 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_01_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5945, removed: 14, remaining: 34
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5945, removed: 14, remaining: 34
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5945
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue    Ovary  Appendix   Spleen  Placenta    Colon  \
0              0.09169  0.02568   0.02503  0.01579   0.01466  0.00495   

tissue  Lymph node  B-cells  Small intestine  Adrenal gland  ...  \
0          0.00334  0.00322         -0.00034       -0.00044  ...   

tissue  Urinary bladder  Parotid gland  Thyroid   Kidney    Brain  \
0              -0.00604       -0.00673  -0.0077 -0.00908 -0.01013   

tissue  Endometrium  Smooth muscle   Testis     Lung  Bone marrow  
0          -0.01081       -0.01144 -0.01979 -0.02152     -0.04588  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_06_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_06_02(Jupiter).mgf.gzip
INFO:root:(2695, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                                proteins database   q-value
33         CYTC_HUMAN((35-52))((P01034))        T  0.009259
48         CYTC_HUMAN((32-52))((P01034))        T  0.009259
64         CYTC_HUMAN((32-52))((P01034))        T  0.009259
71         CYTC_HUMAN((35-52))((P01034))        T  0.009259
83         CYTC_HUMAN((35-52))((P01034))        T  0.009259
...                                  ...      ...       ...
2617       CYTC_HUMAN((32-52))((P01034))        T  0.009259
2635       CYTC_HUMAN((35-52))((P01034))        T  0.009259
2658       CYTC_HUMAN((35-52))((P01034))        T  0.009259
2664       CYTC_HUMAN((35-52))((P01034))        T  0.009259
2687  NCHL1_HUMAN((1031-1047))((O00533))        T  0.009259

[107 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_06_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5971, removed: 7, remaining: 8
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5971, removed: 7, remaining: 8
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5971
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland  Stomach    Colon  Lymph node  Appendix    Ovary  \
0               0.01296  0.00746  0.00548     0.00495   0.00434  0.00349   

tissue    Liver  Urinary bladder    Heart  Salivary gland  ...  \
0       0.00247          0.00183  0.00058         0.00052  ...   

tissue  Skeletal muscle  Adrenal gland  Smooth muscle  Adipose tissue  \
0              -0.00157       -0.00168       -0.00169         -0.0017   

tissue  Bone marrow  Prostate  Endometrium  B-cells     Lung   Testis  
0          -0.00171  -0.00177     -0.00342 -0.00678 -0.00683 -0.00945  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_05_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_05_02(Jupiter).mgf.gzip
INFO:root:(4458, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                               proteins database   q-value
13     ITIH5_HUMAN((625-654))((Q86UX2))        T  0.002985
42     APLP1_HUMAN((526-549))((P51693))        T  0.002985
116    APOA4_HUMAN((288-305))((P06727))        T  0.002985
185     HEMO_HUMAN((226-235))((P02790))        T  0.002985
212   MDC1_HUMAN((1884-1905))((Q14676))        T  0.002985
...                                 ...      ...       ...
4414     VGF_HUMAN((279-296))((O15240))        T  0.002985
4427      CYTC_HUMAN((35-51))((P01034))        T  0.002985
4430    CFAH_HUMAN((574-583))((P08603))        T  0.002985
4431      IBP5_HUMAN((50-74))((P24593))        T  0.002985
4443    ANT3_HUMAN((202-216))((P01008))        T  0.002985

[304 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_05_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5904, removed: 50, remaining: 75
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5904, removed: 50, remaining: 75
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5904
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Adrenal gland  Thyroid  Appendix   Kidney  \
0                0.1728  0.10113        0.03097  0.02194   0.00587  0.00262   

tissue  Salivary gland  Stomach  Prostate    Heart  ...  Oviduct  Placenta  \
0              0.00047 -0.00069  -0.00076 -0.00101  ... -0.00751  -0.00834   

tissue   Testis  Esophagus  Smooth muscle  Urinary bladder  Endometrium  \
0      -0.01261     -0.014       -0.01643         -0.01669      -0.0194   

tissue  Lymph node     Lung  Bone marrow  
0         -0.02079 -0.05042     -0.11812  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_21_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_21_02(Jupiter).mgf.gzip
INFO:root:(1951, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_21_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_18_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_18_02(Jupiter).mgf.gzip
INFO:root:(1915, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_18_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_23_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_23_01.mgf.gzip
INFO:root:(599, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_23_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_08_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_08_02Jupiter.mgf.gzip
INFO:root:(3011, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                                proteins database   q-value
5        C1QB_HUMAN((142-157))((P02746))        T  0.002299
6           CCKN_HUMAN((6-36))((P06307))        T  0.002299
8        C1QB_HUMAN((142-157))((P02746))        T  0.002299
32        RTN4_HUMAN((92-105))((Q9NQC3))        T  0.007722
40       VTNC_HUMAN((338-354))((P04004))        T  0.002299
...                                  ...      ...       ...
2977     VTNC_HUMAN((338-354))((P04004))        T  0.002299
2980  COIA1_HUMAN((1599-1610))((P39060))        T  0.002299
2984     VTNC_HUMAN((338-354))((P04004))        T  0.002299
2994  COIA1_HUMAN((1599-1610))((P39060))        T  0.002299
3001     CHST8_HUMAN((88-102))((Q9H2A9))        T  0.002299

[480 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_08_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5887, removed: 92, remaining: 92
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5887, removed: 92, remaining: 92
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5887
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland  Thyroid    Brain  Adipose tissue  Monocytes  \
0               0.05823  0.05807  0.03568         0.02121    0.00885   

tissue  Endometrium  Smooth muscle  Stomach    Colon  Placenta  ...  \
0           0.00812        0.00609  0.00592  0.00592   0.00386  ...   

tissue  Nasal Polyps  Oviduct  Appendix  Esophagus  Urinary bladder   Testis  \
0           -0.00451  -0.0064   -0.0067   -0.00945         -0.00985 -0.01155   

tissue     Lung  Lymph node   Spleen  Bone marrow  
0      -0.01313    -0.01761 -0.01969     -0.09129  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_13_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_13_01.mgf.gzip
INFO:root:(1172, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_13_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_14_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_14_02Jupiter.mgf.gzip
INFO:root:(3060, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_14_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_14_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_14_02(Jupiter).mgf.gzip
INFO:root:(3033, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_14_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_14_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_14_01.mgf.gzip
INFO:root:(1074, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_14_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_08_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_08_02(Jupiter).mgf.gzip
INFO:root:(3522, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                                proteins database   q-value
5        C1QB_HUMAN((142-157))((P02746))        T  0.001890
6           CCKN_HUMAN((6-36))((P06307))        T  0.001890
9        C1QB_HUMAN((142-157))((P02746))        T  0.001890
46       VTNC_HUMAN((338-354))((P04004))        T  0.001890
49       VTNC_HUMAN((338-354))((P04004))        T  0.001890
...                                  ...      ...       ...
3486  COIA1_HUMAN((1599-1610))((P39060))        T  0.001890
3490     VTNC_HUMAN((338-354))((P04004))        T  0.003578
3500  COIA1_HUMAN((1599-1610))((P39060))        T  0.003578
3508     CHST8_HUMAN((88-102))((Q9H2A9))        T  0.001890
3519   PGBM_HUMAN((3433-3453))((P98160))        T  0.001890

[609 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_08_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5874, removed: 102, remaining: 105
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5874, removed: 102, remaining: 105
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5874
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Oviduct  Thyroid  Pituitary gland    Brain  Endometrium  Monocytes  \
0       0.09855   0.0553          0.04964  0.02148      0.01186    0.01177   

tissue  Adipose tissue  Smooth muscle    Colon  Salivary gland  ...    Ovary  \
0              0.00751        0.00337  0.00204         0.00151  ... -0.00897   

tissue  Appendix   Kidney  Esophagus   Testis  Urinary bladder  Lymph node  \
0        -0.0095 -0.00965   -0.01349 -0.01773         -0.01783    -0.02082   

tissue   Spleen     Lung  Bone marrow  
0      -0.02233 -0.02683     -0.07425  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_01_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_01_02(Jupiter).mgf.gzip
INFO:root:(3033, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
26     VTNC_HUMAN((242-269))((P04004))        T  0.003125
65     VTNC_HUMAN((338-354))((P04004))        T  0.008602
98    ITIH4_HUMAN((300-308))((Q14624))        T  0.007426
102    CFAB_HUMAN((671-680))((P00751))        T  0.005420
128    PLMN_HUMAN((491-513))((P00747))        T  0.003125
...                                ...      ...       ...
2991   VTNC_HUMAN((338-354))((P04004))        T  0.003125
3024   CLUS_HUMAN((326-337))((P10909))        T  0.003125
3026   CERU_HUMAN((396-416))((P00450))        T  0.003125
3028   VTNC_HUMAN((230-242))((P04004))        T  0.005420
3030    CO7_HUMAN((100-125))((P10643))        T  0.003125

[362 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_01_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5934, removed: 26, remaining: 45
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5934, removed: 26, remaining: 45
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5934
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix    Ovary  Placenta   Spleen  Monocytes  \
0              0.09221   0.02525  0.02092   0.01834  0.01788    0.00503   

tissue    Colon  Lymph node    Liver  B-cells  ...  Pituitary gland  \
0       0.00449     0.00362  0.00191  0.00121  ...          -0.0059   

tissue  Esophagus   Kidney  Thyroid    Brain  Endometrium  Smooth muscle  \
0        -0.00684 -0.00768 -0.00878 -0.00971     -0.01152       -0.01384   

tissue     Lung   Testis  Bone marrow  
0      -0.02202 -0.02218     -0.05314  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_21_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_21_02Jupiter.mgf.gzip
INFO:root:(1859, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
0     FBLN3_HUMAN((316-329))((Q12805))        T  0.006135
21     ALBU_HUMAN((427-435))((P02768))        T  0.006135
23    FBLN3_HUMAN((316-329))((Q12805))        T  0.006135
34     LCAT_HUMAN((110-124))((P04180))        T  0.006135
41     ALBU_HUMAN((427-435))((P02768))        T  0.006135
...                                ...      ...       ...
1824  FBLN3_HUMAN((316-329))((Q12805))        T  0.006135
1830  FBLN3_HUMAN((316-329))((Q12805))        T  0.006135
1837  FBLN3_HUMAN((316-329))((Q12805))        T  0.006135
1851   RGMA_HUMAN((276-285))((Q96B86))        T  0.006135
1857   PEDF_HUMAN((307-317))((P36955))        T  0.006135

[142 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_21_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5936, removed: 22, remaining: 43
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5936, removed: 22, remaining: 43
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5936
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue    Brain  Pituitary gland  Thyroid  Prostate  Adipose tissue  \
0       0.08804          0.03273  0.01985   0.01883         0.01364   

tissue  Adrenal gland  Endometrium  Placenta  Rectum  Stomach  ...  B-cells  \
0             0.00974      0.00429   0.00061  0.0001  0.00004  ...  -0.0059   

tissue  Esophagus   Kidney  Smooth muscle  Lymph node  Monocytes     Lung  \
0        -0.00792 -0.00866       -0.00927    -0.00932   -0.01018 -0.01033   

tissue   Spleen   Testis  Bone marrow  
0      -0.01431 -0.01717     -0.05789  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_18_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_18_01.mgf.gzip
INFO:root:(581, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_18_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_06_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_06_01.mgf.gzip
INFO:root:(348, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_06_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_21_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_21_01.mgf.gzip
INFO:root:(992, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_21_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_20_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_20_02(Jupiter).mgf.gzip
INFO:root:(1796, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_20_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_12_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_12_02(Jupiter).mgf.gzip
INFO:root:(3065, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_12_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_14_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_14_02(Jupiter).mgf.gzip
INFO:root:(3548, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                               proteins database   q-value
6        C1S_HUMAN((482-497))((P09871))        T  0.009091
8        CO2_HUMAN((175-190))((P06681))        T  0.009091
22     KLKB1_HUMAN((360-374))((P03952))        T  0.009091
24    APOA_HUMAN((3582-3609))((P08519))        T  0.009091
51       CO2_HUMAN((175-190))((P06681))        T  0.009091
...                                 ...      ...       ...
3068   APOA4_HUMAN((254-267))((P06727))        T  0.009091
3187    FETUA_HUMAN((70-100))((P02765))        T  0.009091
3315   CBPB2_HUMAN((243-258))((Q96IY4))        T  0.009091
3363    FIBA_HUMAN((288-309))((P02671))        T  0.009091
3430      GSTO1_HUMAN((1-26))((P78417))        T  0.009091

[84 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_14_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5950, removed: 13, remaining: 29
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5950, removed: 13, remaining: 29
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5950
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix   Kidney   Colon    Ovary  Salivary gland  \
0              0.06989   0.01167  0.00739  0.0049  0.00433         0.00112   

tissue  Lymph node  Stomach    Liver  Urinary bladder  ...  Parotid gland  \
0          0.00106  0.00065  0.00055          0.00051  ...       -0.00348   

tissue  Prostate  Esophagus  B-cells  Smooth muscle    Brain  Endometrium  \
0        -0.0042   -0.00437 -0.00463       -0.00507 -0.00527     -0.00594   

tissue     Lung  Nasal Polyps  Bone marrow  
0      -0.00629      -0.00959     -0.03286  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_10_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_10_02Jupiter.mgf.gzip
INFO:root:(3720, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                                proteins database   q-value
0       CA2D1_HUMAN((690-705))((P54289))        T  0.003268
24        CO2_HUMAN((175-190))((P06681))        T  0.003268
29          CCKN_HUMAN((6-36))((P06307))        T  0.003268
33    COIA1_HUMAN((1599-1610))((P39060))        T  0.003268
51         AUGN_HUMAN((60-67))((Q9H1Z8))        T  0.003268
...                                  ...      ...       ...
3682       CLUS_HUMAN((69-80))((P10909))        T  0.003268
3683      CAD13_HUMAN((75-86))((P55290))        T  0.003268
3691       CLUS_HUMAN((69-80))((P10909))        T  0.003268
3715      CAD13_HUMAN((75-86))((P55290))        T  0.003268
3718     KLK6_HUMAN((118-130))((Q92876))        T  0.003268

[308 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_10_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5894, removed: 76, remaining: 85
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5894, removed: 76, remaining: 85
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5894
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Adrenal gland  Placenta  Adipose tissue  \
0               0.15451  0.12748          0.037   0.00515         0.00342   

tissue  Stomach  Appendix    Heart  Duodenum  Monocytes  ...    Ovary  \
0       0.00229   0.00079  0.00037  -0.00028   -0.00083  ... -0.01063   

tissue   Testis  Parotid gland  Urinary bladder  Thyroid  Lymph node   Kidney  \
0      -0.01181       -0.01186         -0.01534 -0.01604    -0.01642 -0.01676   

tissue   Spleen     Lung  Bone marrow  
0      -0.01762 -0.04732     -0.09557  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_07_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_07_02Jupiter.mgf.gzip
INFO:root:(1826, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_07_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_16_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_16_02(Jupiter).mgf.gzip
INFO:root:(3145, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
4      PLMN_HUMAN((491-513))((P00747))        T  0.007519
36      CJ095_HUMAN((64-83))((Q9H7T3))        T  0.007519
92      C4BPA_HUMAN((79-88))((P04003))        T  0.007519
113    HEMO_HUMAN((209-220))((P02790))        T  0.007519
149    AMBP_HUMAN((283-294))((P02760))        T  0.007519
...                                ...      ...       ...
3034  KLKB1_HUMAN((360-374))((P03952))        T  0.007519
3088   PLMN_HUMAN((491-513))((P00747))        T  0.007519
3093   PLMN_HUMAN((491-513))((P00747))        T  0.007519
3116   PLMN_HUMAN((491-513))((P00747))        T  0.007519
3129   PLMN_HUMAN((491-513))((P00747))        T  0.007519

[102 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_16_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5943, removed: 13, remaining: 36
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5943, removed: 13, remaining: 36
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5943
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix    Ovary  Placenta  Urinary bladder  \
0              0.05494   0.00982  0.00704   0.00676           0.0048   

tissue  Lymph node  Pituitary gland   Rectum  Stomach    Liver  ...  B-cells  \
0          0.00387          0.00222  0.00158  0.00111  0.00062  ... -0.00394   

tissue  Esophagus  Endometrium   Spleen  Thyroid  Smooth muscle  \
0        -0.00524     -0.00538 -0.00551  -0.0057       -0.00601   

tissue  Parotid gland   Testis    Brain  Bone marrow  
0            -0.00707 -0.01062 -0.01123     -0.01851  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_09_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_09_02(Jupiter).mgf.gzip
INFO:root:(4614, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                                proteins database   q-value
2       P3IP1_HUMAN((141-156))((Q96FE7))        T  0.002278
26          CCKN_HUMAN((6-36))((P06307))        T  0.002278
41    COIA1_HUMAN((1599-1610))((P39060))        T  0.002278
43      ESYT2_HUMAN((714-736))((A0FGR8))        T  0.002278
53        BCAM_HUMAN((97-110))((P50895))        T  0.002278
...                                  ...      ...       ...
4584      CATL1_HUMAN((55-68))((P07711))        T  0.002278
4601      VGF_HUMAN((208-217))((O15240))        T  0.003643
4603    CA2D1_HUMAN((690-705))((P54289))        T  0.002278
4610    NRX2A_HUMAN((808-828))((Q9P2S2))        T  0.005034
4613    NRX2A_HUMAN((808-828))((Q9P2S2))        T  0.002278

[551 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_09_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5863, removed: 104, remaining: 116
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5863, removed: 104, remaining: 116
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5863
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland  Thyroid  Adrenal gland  Adipose tissue    Brain  \
0               0.18611  0.03329        0.02545         0.02331  0.02012   

tissue  Placenta   Rectum  Monocytes  B-cells    Colon  ...    Liver  Oviduct  \
0        0.01804  0.00454    0.00315  0.00289  0.00222  ... -0.00819 -0.00932   

tissue  Smooth muscle   Spleen  Lymph node  Esophagus  Urinary bladder  \
0            -0.01506 -0.01587    -0.01644   -0.01746         -0.01899   

tissue   Testis     Lung  Bone marrow  
0      -0.02778 -0.03918     -0.09897  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_03_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_03_01.mgf.gzip
INFO:root:(1172, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_03_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_12_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_12_02Jupiter.mgf.gzip
INFO:root:(3075, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_12_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_22_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_22_01.mgf.gzip
INFO:root:(305, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_22_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_18_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_18_02Jupiter.mgf.gzip
INFO:root:(1552, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_18_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_05_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_05_01.mgf.gzip
INFO:root:(1016, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_05_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_24_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_24_02Jupiter.mgf.gzip
INFO:root:(2306, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_24_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_15_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_15_02Jupiter.mgf.gzip
INFO:root:(3040, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                               proteins database   q-value
96        FIBB_HUMAN((54-73))((P02675))        T  0.008696
124   A2MG_HUMAN((1004-1015))((P01023))        T  0.008696
178        UTER_HUMAN((3-30))((P11684))        T  0.008696
190     CO8A_HUMAN((108-135))((P07357))        T  0.008696
191     CO8A_HUMAN((108-135))((P07357))        T  0.008696
...                                 ...      ...       ...
2745   FETUA_HUMAN((318-338))((P02765))        T  0.008696
2825    A2GL_HUMAN((251-261))((P02750))        T  0.008696
2883      GSTO1_HUMAN((1-26))((P78417))        T  0.008696
2986     CO2_HUMAN((175-190))((P06681))        T  0.008696
2998   KLKB1_HUMAN((360-374))((P03952))        T  0.008696

[84 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_15_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5950, removed: 11, remaining: 29
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5950, removed: 11, remaining: 29
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5950
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix    Ovary  Placenta  Urinary bladder    Colon  \
0              0.06216   0.01564  0.00946   0.00871          0.00244  0.00206   

tissue  Salivary gland  Monocytes  Adrenal gland  Stomach  ...     Lung  \
0              0.00164    0.00103        0.00084   0.0002  ... -0.00368   

tissue  Thyroid  Pituitary gland  Smooth muscle  Parotid gland  Esophagus  \
0      -0.00395         -0.00413       -0.00457       -0.00505   -0.00545   

tissue  B-cells  Endometrium    Brain  Bone marrow  
0      -0.00807     -0.00876 -0.01278     -0.02521  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_16_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_16_01.mgf.gzip
INFO:root:(351, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_16_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_12_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_12_02(Jupiter).mgf.gzip
INFO:root:(2922, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_12_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_04_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_04_02(Jupiter).mgf.gzip
INFO:root:(5500, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
1     COL12_HUMAN((662-674))((Q5KU26))        T  0.001468
3     COL12_HUMAN((662-674))((Q5KU26))        T  0.001468
5     COL12_HUMAN((662-674))((Q5KU26))        T  0.001468
15    FBLN3_HUMAN((331-359))((Q12805))        T  0.004038
19       CYTC_HUMAN((35-52))((P01034))        T  0.001468
...                                ...      ...       ...
5484     CYTC_HUMAN((35-52))((P01034))        T  0.001468
5485     CYTC_HUMAN((35-52))((P01034))        T  0.001468
5486  APLP1_HUMAN((540-549))((P51693))        T  0.001468
5489  APLP1_HUMAN((540-549))((P51693))        T  0.001468
5490     CYTC_HUMAN((32-51))((P01034))        T  0.002853

[688 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_04_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5867, removed: 83, remaining: 112
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5867, removed: 83, remaining: 112
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5867
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Adrenal gland  Thyroid  Prostate  Stomach  \
0               0.23359  0.12014        0.04185  0.01102    0.0085   0.0007   

tissue  B-cells  Salivary gland  Small intestine  Monocytes  ...  Placenta  \
0      -0.00078        -0.00138         -0.00162   -0.00173  ...   -0.0149   

tissue    Ovary  Esophagus   Testis  Spleen  Urinary bladder   Kidney  \
0      -0.01624   -0.01746 -0.02223 -0.0242         -0.02456 -0.02488   

tissue  Lymph node     Lung  Bone marrow  
0          -0.0306 -0.05506     -0.08671  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_23_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_23_02Jupiter.mgf.gzip
INFO:root:(2887, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                                proteins database   q-value
3        MIME_HUMAN((189-196))((P20774))        T  0.003676
4        APLP1_HUMAN((97-107))((P51693))        T  0.003676
10    NRX1A_HUMAN((1005-1019))((Q9ULB1))        T  0.002370
12        FSTL1_HUMAN((30-41))((Q12841))        T  0.003676
15       APOE_HUMAN((176-186))((P02649))        T  0.005455
...                                  ...      ...       ...
2836       DDAH1_HUMAN((2-13))((O94760))        T  0.002370
2848    P3IP1_HUMAN((141-156))((Q96FE7))        T  0.002370
2855     APLP1_HUMAN((97-107))((P51693))        T  0.003676
2858     A1BG_HUMAN((407-418))((P04217))        T  0.003676
2883       SORT_HUMAN((37-50))((Q99523))        T  0.002370

[294 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_23_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5898, removed: 56, remaining: 81
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5898, removed: 56, remaining: 81
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5898
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Thyroid  Adrenal gland  Placenta  Prostate  \
0               0.08581  0.04048  0.03304        0.02047   0.01599   0.01439   

tissue  Monocytes    Colon  Salivary gland    Ovary  ...  Oviduct  \
0         0.00985  0.00787         0.00547  0.00491  ... -0.00945   

tissue  Endometrium  Urinary bladder  Smooth muscle  Esophagus  Lymph node  \
0          -0.00947         -0.01177       -0.01225   -0.01519    -0.01625   

tissue   Spleen   Testis    Lung  Bone marrow  
0      -0.02047 -0.02388 -0.0272      -0.0595  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_17_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_17_02(Jupiter).mgf.gzip
INFO:root:(2372, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_17_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_04_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_04_01.mgf.gzip
INFO:root:(1194, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_04_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_02_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_02_01.mgf.gzip
INFO:root:(772, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_02_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_06_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_06_01.mgf.gzip
INFO:root:(780, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_06_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_24_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_24_02(Jupiter).mgf.gzip
INFO:root:(2274, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_24_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_13_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_13_02(Jupiter).mgf.gzip
INFO:root:(3457, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_13_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_21_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_21_02Jupiter.mgf.gzip
INFO:root:(2217, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
8      AMBP_HUMAN((283-294))((P02760))        T  0.005882
10     VTNC_HUMAN((354-363))((P04004))        T  0.005882
12     CLUS_HUMAN((199-215))((P10909))        T  0.005882
25       CFAH_HUMAN((58-68))((P08603))        T  0.005882
34     HEMO_HUMAN((198-209))((P02790))        T  0.005882
...                                ...      ...       ...
2102    C1R_HUMAN((444-462))((P00736))        T  0.005882
2134    C4BPA_HUMAN((79-88))((P04003))        T  0.005882
2154  KLKB1_HUMAN((360-374))((P03952))        T  0.005882
2182  ITIH4_HUMAN((637-645))((Q14624))        T  0.005882
2194    C1R_HUMAN((447-462))((P00736))        T  0.005882

[116 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_21_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5947, removed: 13, remaining: 32
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5947, removed: 13, remaining: 32
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5947
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue    Ovary  Urinary bladder  Appendix   Rectum    Liver  \
0               0.0519  0.01657          0.01271   0.00797  0.00468  0.00447   

tissue    Colon  Small intestine  Duodenum   Kidney  ...   Testis     Lung  \
0       0.00385          0.00362    0.0028  0.00194  ... -0.00408 -0.00467   

tissue  Monocytes  B-cells  Esophagus  Thyroid  Smooth muscle  Endometrium  \
0        -0.00538 -0.00539   -0.00546 -0.00745       -0.00811     -0.00971   

tissue   Spleen  Bone marrow  
0      -0.01146     -0.02119  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_17_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_17_02Jupiter.mgf.gzip
INFO:root:(2846, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                               proteins database   q-value
66      CFAH_HUMAN((783-797))((P08603))        T  0.008065
83     CBPB2_HUMAN((241-258))((Q96IY4))        T  0.008065
88      AMBP_HUMAN((283-294))((P02760))        T  0.008065
116    CBPB2_HUMAN((241-258))((Q96IY4))        T  0.008065
139   APOB_HUMAN((4486-4497))((P04114))        T  0.008065
...                                 ...      ...       ...
2777      SBSN_HUMAN((46-64))((Q6UWP8))        T  0.008065
2782    CFAH_HUMAN((783-797))((P08603))        T  0.008065
2792    PLMN_HUMAN((491-513))((P00747))        T  0.008065
2828    PLMN_HUMAN((491-513))((P00747))        T  0.008065
2835  A2MG_HUMAN((1004-1015))((P01023))        T  0.008065

[99 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_17_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5944, removed: 17, remaining: 35
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5944, removed: 17, remaining: 35
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5944
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix    Ovary    Colon  Urinary bladder  Stomach  \
0              0.07325   0.01572  0.01168  0.00344           0.0032  0.00289   

tissue     Lung  Salivary gland  Lymph node    Liver  ...  Smooth muscle  \
0       0.00253         0.00233     0.00153  0.00087  ...       -0.00388   

tissue  Thyroid  Monocytes  B-cells   Spleen  Nasal Polyps  Endometrium  \
0      -0.00392   -0.00461 -0.00479 -0.00747      -0.00826     -0.01066   

tissue   Brain   Testis  Bone marrow  
0      -0.0123 -0.01256     -0.02615  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_16_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_16_02(Jupiter).mgf.gzip
INFO:root:(2070, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
17     A1BG_HUMAN((392-407))((P04217))        T  0.008475
45    NRX3A_HUMAN((943-962))((Q9Y4C0))        T  0.008475
46      SELPL_HUMAN((31-39))((Q14242))        T  0.008475
72     VTNC_HUMAN((338-354))((P04004))        T  0.008475
73     VTNC_HUMAN((338-354))((P04004))        T  0.008475
...                                ...      ...       ...
1939    SE6L2_HUMAN((32-62))((Q6UXD5))        T  0.008475
1977   CLUS_HUMAN((247-277))((P10909))        T  0.008475
1984  CO1A2_HUMAN((574-589))((P08123))        T  0.008475
1985  PEBP4_HUMAN((128-150))((Q96S96))        T  0.008475
2027  CO1A2_HUMAN((574-589))((P08123))        T  0.008475

[99 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_16_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5948, removed: 31, remaining: 31
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5948, removed: 31, remaining: 31
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5948
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Thyroid  Adipose tissue  Pituitary gland  Endometrium    Colon  \
0         0.071         0.01882           0.0154      0.00716  0.00474   

tissue   Kidney  Salivary gland  Prostate  Stomach  Smooth muscle  ...  \
0       0.00426         0.00407   0.00352  0.00296        0.00199  ...   

tissue  Monocytes  Lymph node  Nasal Polyps  Adrenal gland  Esophagus  \
0        -0.00476    -0.00489      -0.00701       -0.00722   -0.00744   

tissue    Brain  Spleen  Urinary bladder   Testis  Bone marrow  
0      -0.00802 -0.0088         -0.01049 -0.02391     -0.03443  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_19_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_19_02Jupiter.mgf.gzip
INFO:root:(1330, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
28     AMBP_HUMAN((283-294))((P02760))        T  0.007576
36     CLUS_HUMAN((352-372))((P10909))        T  0.007576
38       KPYM_HUMAN((44-57))((P14618))        T  0.007576
75    CSTN1_HUMAN((537-546))((O94985))        T  0.007576
112    A1BG_HUMAN((407-418))((P04217))        T  0.007576
...                                ...      ...       ...
1298  PTGDS_HUMAN((109-138))((P41222))        T  0.007576
1304     DDAH1_HUMAN((2-13))((O94760))        T  0.007576
1305     FETUA_HUMAN((3-29))((P02765))        T  0.007576
1307     BGH3_HUMAN((28-39))((Q15582))        T  0.007576
1319    VGF_HUMAN((268-279))((O15240))        T  0.007576

[98 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_19_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5948, removed: 19, remaining: 31
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5948, removed: 19, remaining: 31
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5948
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue    Brain  Adipose tissue  Pituitary gland   Testis  Adrenal gland  \
0       0.03172         0.02075          0.01857  0.01341        0.00853   

tissue    Ovary   Colon  Stomach  Placenta    Heart  ...  Urinary bladder  \
0       0.00729  0.0031  0.00276   0.00191  0.00189  ...         -0.00498   

tissue  Smooth muscle   Kidney  Esophagus  Thyroid  Monocytes   Spleen  \
0             -0.0053 -0.00551   -0.00577 -0.00615   -0.00704 -0.00756   

tissue  Lymph node    Lung  Bone marrow  
0         -0.00872 -0.0089     -0.02492  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_14_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_14_01.mgf.gzip
INFO:root:(812, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_14_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_24_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_24_01.mgf.gzip
INFO:root:(739, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_24_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_15_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_15_02(Jupiter).mgf.gzip
INFO:root:(3005, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
6     PCSK9_HUMAN((511-526))((Q8NBP7))        T  0.003984
7     SULF2_HUMAN((548-561))((Q8IWU5))        T  0.006803
10        7B2_HUMAN((43-56))((P05408))        T  0.006803
12    RARR2_HUMAN((114-126))((Q99969))        T  0.003984
17        7B2_HUMAN((43-56))((P05408))        T  0.003984
...                                ...      ...       ...
2961  NDRG2_HUMAN((328-344))((Q9UN36))        T  0.003984
2982  RARR2_HUMAN((114-126))((Q99969))        T  0.003984
2985    CO2_HUMAN((175-190))((P06681))        T  0.003984
2986      CCKN_HUMAN((6-36))((P06307))        T  0.003984
2997  RARR2_HUMAN((114-126))((Q99969))        T  0.003984

[253 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_15_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5913, removed: 45, remaining: 66
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5913, removed: 45, remaining: 66
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5913
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue    Brain  Adipose tissue  Pituitary gland  Placenta    Colon  Thyroid  \
0       0.14074         0.03066          0.01877   0.00814  0.00787  0.00773   

tissue  Monocytes  Stomach  Salivary gland  Duodenum  ...  Appendix  Oviduct  \
0         0.00616  0.00222         0.00168   0.00006  ...  -0.00576 -0.00686   

tissue  Urinary bladder  Prostate   Kidney  Lymph node  Esophagus     Lung  \
0              -0.00767  -0.01039 -0.01236     -0.0131   -0.01646 -0.01946   

tissue   Testis  Bone marrow  
0      -0.02372     -0.07165  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_22_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_22_01.mgf.gzip
INFO:root:(273, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_22_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_02_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_02_02Jupiter.mgf.gzip
INFO:root:(4712, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                               proteins database   q-value
0         F13B_HUMAN((70-87))((P05160))        T  0.001504
53    ATRN_HUMAN((1131-1146))((O75882))        T  0.001504
55      A1BG_HUMAN((325-334))((P04217))        T  0.001504
62    ATRN_HUMAN((1131-1146))((O75882))        T  0.001504
63    ATRN_HUMAN((1131-1146))((O75882))        T  0.001504
...                                 ...      ...       ...
4667    FIBB_HUMAN((265-295))((P02675))        T  0.001504
4671    PON1_HUMAN((291-307))((P27169))        T  0.001504
4683      CYTC_HUMAN((35-51))((P01034))        T  0.001504
4696    FIBB_HUMAN((268-295))((P02675))        T  0.001504
4708      AACT_HUMAN((12-42))((P01011))        T  0.001504

[563 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_02_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5921, removed: 31, remaining: 58
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5921, removed: 31, remaining: 58
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5921
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue    Ovary   Kidney  Placenta  Monocytes  \
0              0.06327  0.03046  0.02785   0.02124    0.01115   

tissue  Urinary bladder   Spleen  B-cells  Pituitary gland  Nasal Polyps  ...  \
0               0.00697  0.00467  0.00359          0.00325       0.00266  ...   

tissue  Parotid gland  Oviduct  Thyroid  Lymph node  Esophagus  Endometrium  \
0            -0.00466 -0.00601 -0.00734    -0.00985   -0.01011     -0.01089   

tissue    Brain   Testis     Lung  Bone marrow  
0      -0.01593 -0.02035 -0.02692     -0.05562  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_09_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_09_01.mgf.gzip
INFO:root:(1873, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                             proteins database   q-value
8       CYTB_HUMAN((45-69))((P04080))        T  0.007937
22    DKK3_HUMAN((202-225))((Q9UBP4))        T  0.003436
31     PCOC1_HUMAN((81-92))((Q15113))        T  0.003436
35      DKK3_HUMAN((34-53))((Q9UBP4))        T  0.003436
36     PCOC1_HUMAN((81-92))((Q15113))        T  0.003436
...                               ...      ...       ...
1842  DKK3_HUMAN((213-225))((Q9UBP4))        T  0.003436
1850  APLP1_HUMAN((97-107))((P51693))        T  0.003436
1854  CATD_HUMAN((393-400))((P07339))        T  0.007937
1863  DAG1_HUMAN((262-283))((Q14118))        T  0.003436
1867  DAG1_HUMAN((262-283))((Q14118))        T  0.005814

[332 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fraction_09_01.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5873, removed: 76, remaining: 106
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5873, removed: 76, remaining: 106
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5873
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland  Adrenal gland  Thyroid  Monocytes  Prostate    Colon  \
0               0.22549         0.0339  0.01808    0.01448    0.0089  0.00592   

tissue  Placenta  Adipose tissue  Appendix  Parotid gland  ...    Liver  \
0        0.00238         0.00154  -0.00009       -0.00029  ... -0.00604   

tissue  Esophagus   Spleen   Kidney  Urinary bladder  Smooth muscle  \
0        -0.01043 -0.01702 -0.01729          -0.0178        -0.0191   

tissue  Lymph node   Testis     Lung  Bone marrow  
0         -0.02154 -0.02586 -0.04818     -0.09057  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_20_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_20_02Jupiter.mgf.gzip
INFO:root:(1535, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                             proteins database   q-value
16    VTNC_HUMAN((354-363))((P04004))        T  0.005181
27      FETUA_HUMAN((3-29))((P02765))        T  0.005181
35    AMBP_HUMAN((283-294))((P02760))        T  0.005181
42    HEMO_HUMAN((198-209))((P02790))        T  0.005181
47      CFAH_HUMAN((58-68))((P08603))        T  0.005181
...                               ...      ...       ...
1459  FIBB_HUMAN((268-286))((P02675))        T  0.005181
1486    FETUA_HUMAN((3-29))((P02765))        T  0.005181
1488   C4BPA_HUMAN((79-88))((P04003))        T  0.005181
1496    BGH3_HUMAN((28-39))((Q15582))        T  0.005181
1530   CBG_HUMAN((273-283))((P08185))        T  0.005181

[140 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_20_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5940, removed: 15, remaining: 39
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5940, removed: 15, remaining: 39
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5940
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue    Ovary  Appendix  Urinary bladder  Placenta   Kidney  \
0              0.03621  0.01235   0.00908           0.0059   0.00394  0.00349   

tissue  Stomach  Lymph node  Salivary gland   Colon  ...  Parotid gland  \
0       0.00238     0.00167         0.00153  0.0011  ...       -0.00262   

tissue  B-cells  Esophagus  Nasal Polyps  Monocytes    Brain  Thyroid  \
0      -0.00283   -0.00318      -0.00419   -0.00478 -0.00486 -0.00584   

tissue   Spleen   Testis  Bone marrow  
0      -0.00716 -0.01178     -0.01284  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_09_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_09_01.mgf.gzip
INFO:root:(1294, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_09_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_09_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_09_02(Jupiter).mgf.gzip
INFO:root:(4511, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
6      VTNC_HUMAN((338-354))((P04004))        T  0.002169
16    HABP2_HUMAN((398-417))((Q14520))        T  0.005474
20     PROP_HUMAN((331-347))((P27918))        T  0.002169
22     F13B_HUMAN((650-662))((P05160))        T  0.002169
37     F13B_HUMAN((650-662))((P05160))        T  0.002169
...                                ...      ...       ...
4417   A2AP_HUMAN((253-272))((P08697))        T  0.002169
4418     LYSC_HUMAN((40-60))((P61626))        T  0.003968
4427   A2AP_HUMAN((253-272))((P08697))        T  0.002169
4441    CO2_HUMAN((175-190))((P06681))        T  0.002169
4476   CFAH_HUMAN((897-907))((P08603))        T  0.002169

[482 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_09_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5904, removed: 40, remaining: 75
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5904, removed: 40, remaining: 75
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5904
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Monocytes    Ovary   Spleen  Appendix    Colon  \
0              0.09781    0.03395  0.02707  0.02422   0.01549  0.01209   

tissue   Kidney  Urinary bladder  Placenta  Salivary gland  ...  \
0       0.00951          0.00877   0.00528         0.00056  ...   

tissue  Parotid gland  Nasal Polyps  Pituitary gland  Lymph node  Endometrium  \
0            -0.00458        -0.005         -0.00509     -0.0071     -0.01139   

tissue  Thyroid    Brain     Lung   Testis  Bone marrow  
0      -0.01301 -0.01573 -0.02715 -0.02802     -0.08547  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_07_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_07_01.mgf.gzip
INFO:root:(626, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_07_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_10_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_10_02(Jupiter).mgf.gzip
INFO:root:(4052, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                                proteins database   q-value
0       CA2D1_HUMAN((690-705))((P54289))        T  0.003155
19        CO2_HUMAN((175-190))((P06681))        T  0.003155
22          CCKN_HUMAN((6-36))((P06307))        T  0.003155
27    COIA1_HUMAN((1599-1610))((P39060))        T  0.003155
39      PGBM_HUMAN((997-1011))((P98160))        T  0.009709
...                                  ...      ...       ...
4013       CLUS_HUMAN((69-80))((P10909))        T  0.003155
4028       LYSC_HUMAN((40-60))((P61626))        T  0.007828
4032     TRFL_HUMAN((316-329))((P02788))        T  0.007828
4047      CAD13_HUMAN((75-86))((P55290))        T  0.003155
4050     KLK6_HUMAN((118-130))((Q92876))        T  0.003155

[438 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_10_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5864, removed: 95, remaining: 115
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5864, removed: 95, remaining: 115
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5864
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Adrenal gland  Adipose tissue  Stomach  \
0                0.1351  0.11869        0.04144         0.02176  0.00345   

tissue  Appendix   Rectum  Monocytes  Small intestine  Duodenum  ...   Spleen  \
0        0.00335  0.00191    0.00053          0.00036  -0.00072  ... -0.01227   

tissue  Endometrium  Esophagus   Kidney  Thyroid  Lymph node  Urinary bladder  \
0          -0.01242   -0.01311 -0.01356 -0.01465    -0.01795         -0.01805   

tissue   Testis     Lung  Bone marrow  
0      -0.02276 -0.05017      -0.0927  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_07_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_07_01.mgf.gzip
INFO:root:(318, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_07_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_24_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_24_01.mgf.gzip
INFO:root:(510, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_24_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_23_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_23_02Jupiter.mgf.gzip
INFO:root:(2528, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_23_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_13_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_13_02Jupiter.mgf.gzip
INFO:root:(3505, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_13_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_12_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_12_01.mgf.gzip
INFO:root:(811, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_12_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_18_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_18_02Jupiter.mgf.gzip
INFO:root:(1747, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_18_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_21_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_21_01.mgf.gzip
INFO:root:(693, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_21_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_24_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_24_02(Jupiter).mgf.gzip
INFO:root:(2527, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_24_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_10_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_10_02Jupiter.mgf.gzip
INFO:root:(3851, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                               proteins database   q-value
27       CO2_HUMAN((175-190))((P06681))        T  0.003096
46    APOA_HUMAN((3582-3609))((P08519))        T  0.003096
60       ALS_HUMAN((566-596))((P35858))        T  0.003096
69     APOA4_HUMAN((267-280))((P06727))        T  0.003096
97      PLMN_HUMAN((493-513))((P00747))        T  0.003096
...                                 ...      ...       ...
3796  APOA_HUMAN((4241-4260))((P08519))        T  0.003096
3804    CD5L_HUMAN((110-140))((O43866))        T  0.003096
3807    PLMN_HUMAN((494-513))((P00747))        T  0.003096
3820    AACT_HUMAN((299-307))((P01011))        T  0.003096
3839   RARR2_HUMAN((114-126))((Q99969))        T  0.003096

[283 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_10_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5925, removed: 20, remaining: 54
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5925, removed: 20, remaining: 54
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5925
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue    Colon   Ovary  Appendix    Liver  Placenta  \
0               0.0883  0.02119  0.0177    0.0145  0.01282    0.0069   

tissue  Small intestine   Rectum  Urinary bladder  Salivary gland  ...  \
0               0.00588  0.00417          0.00325         0.00062  ...   

tissue  B-cells  Esophagus  Smooth muscle  Thyroid   Spleen   Testis    Brain  \
0      -0.00635   -0.00671       -0.00756  -0.0087 -0.00888 -0.00917 -0.01134   

tissue     Lung  Endometrium  Bone marrow  
0      -0.01218      -0.0126     -0.05235  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_11_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_11_02(Jupiter).mgf.gzip
INFO:root:(3166, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_11_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_04_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_04_01.mgf.gzip
INFO:root:(1060, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
1      AACT_HUMAN((215-231))((P01011))        T  0.008696
5      FCN3_HUMAN((277-286))((O75636))        T  0.008696
9       FBLN1_HUMAN((63-91))((P23142))        T  0.008696
17     CERU_HUMAN((577-599))((P00450))        T  0.008696
37    C4BPA_HUMAN((405-419))((P04003))        T  0.008696
...                                ...      ...       ...
1049   FETUA_HUMAN((70-100))((P02765))        T  0.008696
1050     CERU_HUMAN((44-63))((P00450))        T  0.008696
1053  PGRP2_HUMAN((234-257))((Q96PD5))        T  0.008696
1055    HRG_HUMAN((161-177))((P04196))        T  0.008696
1056    HRG_HUMAN((161-177))((P04196))        T  0.008696

[96 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Farction_04_01.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5942, removed: 16, remaining: 37
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5942, removed: 16, remaining: 37
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5942
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Monocytes  Appendix  Placenta    Colon    Ovary  \
0              0.08797    0.03954   0.01479   0.00851  0.00833  0.00457   

tissue  Lymph node  Pituitary gland  Small intestine  Urinary bladder  ...  \
0          0.00143          0.00142         -0.00054          -0.0006  ...   

tissue  Esophagus  Prostate    Heart   Testis  Endometrium   Spleen  \
0        -0.00571  -0.00589 -0.00641 -0.00805     -0.00955 -0.01064   

tissue  Smooth muscle     Lung    Brain  Bone marrow  
0            -0.01086 -0.01439 -0.01688     -0.03359  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_16_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_16_01.mgf.gzip
INFO:root:(693, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_16_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_05_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_05_02(Jupiter).mgf.gzip
INFO:root:(4839, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
7      FIBA_HUMAN((250-272))((P02671))        T  0.003067
17     VTNC_HUMAN((451-464))((P04004))        T  0.007673
45     FIBA_HUMAN((250-272))((P02671))        T  0.003067
70    APOA4_HUMAN((288-305))((P06727))        T  0.003067
95     FIBA_HUMAN((250-272))((P02671))        T  0.003067
...                                ...      ...       ...
4783   FIBA_HUMAN((250-272))((P02671))        T  0.003067
4784   FIBA_HUMAN((250-272))((P02671))        T  0.003067
4811   FIBA_HUMAN((250-272))((P02671))        T  0.003067
4818   HEMO_HUMAN((209-220))((P02790))        T  0.003067
4828   FIBA_HUMAN((250-272))((P02671))        T  0.003067

[313 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_05_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5929, removed: 25, remaining: 50
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5929, removed: 25, remaining: 50
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5929
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue   Kidney  Placenta   Spleen  Monocytes    Colon  \
0              0.07669  0.02269    0.0177  0.00966    0.00883  0.00805   

tissue    Ovary  Appendix  Stomach  Pituitary gland  ...  Prostate  Esophagus  \
0       0.00776   0.00546  0.00238          0.00132  ...  -0.00429   -0.00534   

tissue  Smooth muscle     Lung  Thyroid  Parotid gland  Endometrium   Testis  \
0            -0.00558 -0.00563 -0.00648       -0.00689     -0.01209 -0.01498   

tissue    Brain  Bone marrow  
0      -0.01975     -0.05834  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_11_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_11_02(Jupiter).mgf.gzip
INFO:root:(3224, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
5      CFAB_HUMAN((594-606))((P00751))        T  0.009009
12      CO2_HUMAN((175-190))((P06681))        T  0.009009
33      CO2_HUMAN((175-190))((P06681))        T  0.009009
37     A1BG_HUMAN((392-407))((P04217))        T  0.009009
52    APOA4_HUMAN((267-280))((P06727))        T  0.009009
...                                ...      ...       ...
3012   PLMN_HUMAN((493-513))((P00747))        T  0.009009
3042    PROS_HUMAN((91-112))((P07225))        T  0.009009
3136     GSTO1_HUMAN((1-26))((P78417))        T  0.009009
3154   PLMN_HUMAN((494-513))((P00747))        T  0.009009
3221   A1BG_HUMAN((392-407))((P04217))        T  0.009009

[88 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_11_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5953, removed: 12, remaining: 26
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5953, removed: 12, remaining: 26
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5953
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix    Ovary    Colon  Placenta   Kidney  \
0              0.07114   0.01623  0.00748  0.00474   0.00353  0.00143   

tissue  Salivary gland    Liver  Urinary bladder  Stomach  ...   Spleen  \
0               0.0013  0.00036          0.00009  0.00006  ... -0.00375   

tissue   Testis  Nasal Polyps  Thyroid  Esophagus  B-cells    Brain  \
0      -0.00409      -0.00413 -0.00437   -0.00453 -0.00485 -0.00531   

tissue  Endometrium     Lung  Bone marrow  
0          -0.00614 -0.00674     -0.03516  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_23_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_23_02(Jupiter).mgf.gzip
INFO:root:(2743, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_23_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_12_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_12_01.mgf.gzip
INFO:root:(875, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_12_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_05_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_05_01.mgf.gzip
INFO:root:(1173, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_05_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_03_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_03_02(Jupiter).mgf.gzip
INFO:root:(5457, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
0     APOA4_HUMAN((135-144))((P06727))        T  0.003899
8       CO7_HUMAN((812-825))((P10643))        T  0.007669
34     ANT3_HUMAN((403-426))((P01008))        T  0.002169
55     ANT3_HUMAN((403-426))((P01008))        T  0.002169
66     CO8A_HUMAN((413-423))((P07357))        T  0.003899
...                                ...      ...       ...
5373    CO3_HUMAN((428-440))((P01024))        T  0.003899
5430   CERU_HUMAN((485-501))((P00450))        T  0.002169
5436   CERU_HUMAN((485-501))((P00450))        T  0.002169
5446    PZP_HUMAN((318-336))((P20742))        T  0.005137
5453  CADH5_HUMAN((223-231))((P33151))        T  0.005137

[525 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_03_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5897, removed: 37, remaining: 82
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5897, removed: 37, remaining: 82
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5897
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue    Ovary  Placenta  Monocytes  Appendix  \
0              0.13121  0.03214   0.01888     0.0103   0.01013   

tissue  Pituitary gland  Lymph node    Colon   Spleen    Heart  ...  Oviduct  \
0               0.00643     0.00478  0.00196  0.00128  0.00082  ... -0.00551   

tissue  Esophagus  Parotid gland  Smooth muscle  Salivary gland  Endometrium  \
0        -0.00691       -0.00713       -0.00792        -0.00804     -0.01133   

tissue    Brain     Lung   Testis  Bone marrow  
0      -0.02024 -0.02237 -0.03015     -0.08132  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_05_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_05_02Jupiter.mgf.gzip
INFO:root:(4683, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
17     VTNC_HUMAN((451-464))((P04004))        T  0.009119
65    APOA4_HUMAN((288-305))((P06727))        T  0.003279
176    PLMN_HUMAN((732-739))((P00747))        T  0.006270
180    THRB_HUMAN((100-118))((P00734))        T  0.003279
198    CFAH_HUMAN((296-304))((P08603))        T  0.003279
...                                ...      ...       ...
4606   THRB_HUMAN((178-199))((P00734))        T  0.003279
4619   FIBA_HUMAN((259-272))((P02671))        T  0.003279
4651   HEMO_HUMAN((209-220))((P02790))        T  0.006270
4655   FIBA_HUMAN((259-272))((P02671))        T  0.003279
4664   HEMO_HUMAN((209-220))((P02790))        T  0.003279

[254 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_05_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5929, removed: 20, remaining: 50
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5929, removed: 20, remaining: 50
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5929
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue   Kidney  Placenta  Monocytes    Colon    Ovary  \
0              0.07742  0.02253   0.01622    0.00813  0.00644  0.00634   

tissue   Spleen  Appendix   Rectum  Pituitary gland  ...  Lymph node  \
0       0.00589   0.00419  0.00333          0.00173  ...    -0.00469   

tissue  Parotid gland  Prostate  Thyroid  Esophagus     Lung  Endometrium  \
0            -0.00476  -0.00551 -0.00625   -0.00661 -0.00734     -0.01133   

tissue   Testis    Brain  Bone marrow  
0      -0.01603 -0.01798      -0.0532  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_15_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_15_01.mgf.gzip
INFO:root:(594, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_15_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_11_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_11_02Jupiter.mgf.gzip
INFO:root:(3259, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_11_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_19_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_19_02(Jupiter).mgf.gzip
INFO:root:(1700, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_19_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_10_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_10_01.mgf.gzip
INFO:root:(1424, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
3      NTRI_HUMAN((176-194))((Q9P121))        T  0.003968
4     ITIH4_HUMAN((410-439))((Q14624))        T  0.003968
14      AMD_HUMAN((611-620))((P19021))        T  0.003968
16    IGSF8_HUMAN((214-224))((Q969P0))        T  0.003968
17       KAIN_HUMAN((51-62))((P29622))        T  0.003968
...                                ...      ...       ...
1371     DKK3_HUMAN((34-53))((Q9UBP4))        T  0.003968
1375       MGP_HUMAN((8-38))((P08493))        T  0.003968
1398     APOD_HUMAN((46-61))((P05090))        T  0.003968
1411  CNTN1_HUMAN((819-844))((Q12860))        T  0.003968
1416  NRCAM_HUMAN((944-960))((Q92823))        T  0.007634

[223 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fraction_10_01.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5908, removed: 55, remaining: 71
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5908, removed: 55, remaining: 71
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5908
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Adrenal gland  Adipose tissue  Monocytes  \
0               0.17242  0.12117        0.03406         0.02203    0.01449   

tissue  Appendix  Salivary gland  Duodenum  Nasal Polyps  Placenta  ...  \
0        0.00187         0.00011  -0.00022      -0.00042  -0.00108  ...   

tissue    Ovary  Esophagus   Testis  Thyroid  Urinary bladder   Kidney  \
0      -0.01211   -0.01237 -0.01515 -0.01603         -0.01732 -0.01763   

tissue  Lymph node   Spleen     Lung  Bone marrow  
0         -0.01792 -0.01922 -0.04839      -0.1164  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_17_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_17_02(Jupiter).mgf.gzip
INFO:root:(2848, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                               proteins database   q-value
65      CFAH_HUMAN((783-797))((P08603))        T  0.007937
78      AMBP_HUMAN((283-294))((P02760))        T  0.007937
90     CBPB2_HUMAN((241-258))((Q96IY4))        T  0.007937
95      AMBP_HUMAN((283-294))((P02760))        T  0.007937
122    CBPB2_HUMAN((241-258))((Q96IY4))        T  0.007937
...                                 ...      ...       ...
2776      SBSN_HUMAN((46-64))((Q6UWP8))        T  0.007937
2781    CFAH_HUMAN((783-797))((P08603))        T  0.007937
2792    PLMN_HUMAN((491-513))((P00747))        T  0.007937
2831    PLMN_HUMAN((491-513))((P00747))        T  0.007937
2836  A2MG_HUMAN((1004-1015))((P01023))        T  0.007937

[101 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_17_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5943, removed: 17, remaining: 36
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5943, removed: 17, remaining: 36
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5943
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix    Ovary  Urinary bladder    Colon  Stomach  \
0              0.07229   0.01578  0.01167           0.0036  0.00333  0.00315   

tissue  Salivary gland     Lung  Duodenum  Pituitary gland  ...  Prostate  \
0              0.00219  0.00176   0.00173          0.00166  ...  -0.00443   

tissue  Thyroid   Kidney  Smooth muscle  B-cells   Spleen  Endometrium  \
0      -0.00449 -0.00463         -0.005 -0.00698 -0.00759     -0.01147   

tissue    Brain   Testis  Bone marrow  
0      -0.01314 -0.01393     -0.02591  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_02_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_02_02(Jupiter).mgf.gzip
INFO:root:(4631, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                               proteins database   q-value
0         F13B_HUMAN((70-87))((P05160))        T  0.001553
48    ATRN_HUMAN((1131-1146))((O75882))        T  0.001553
50      A1BG_HUMAN((325-334))((P04217))        T  0.001553
58    ATRN_HUMAN((1131-1146))((O75882))        T  0.001553
59    ATRN_HUMAN((1131-1146))((O75882))        T  0.001553
...                                 ...      ...       ...
4585    FIBB_HUMAN((265-295))((P02675))        T  0.001553
4589    PON1_HUMAN((291-307))((P27169))        T  0.001553
4602      CYTC_HUMAN((35-51))((P01034))        T  0.001553
4614    FIBB_HUMAN((268-295))((P02675))        T  0.001553
4626      AACT_HUMAN((12-42))((P01011))        T  0.001553

[555 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_02_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5922, removed: 30, remaining: 57
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5922, removed: 30, remaining: 57
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5922
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue    Ovary   Kidney  Placenta  Monocytes  \
0              0.06326  0.03045  0.02783   0.02124    0.01115   

tissue  Urinary bladder   Spleen  B-cells  Pituitary gland  Nasal Polyps  ...  \
0               0.00698  0.00465  0.00359          0.00325       0.00266  ...   

tissue  Parotid gland  Oviduct  Thyroid  Lymph node  Esophagus  Endometrium  \
0            -0.00466 -0.00601 -0.00734    -0.00985   -0.01011     -0.01087   

tissue    Brain   Testis     Lung  Bone marrow  
0      -0.01591 -0.02038 -0.02692     -0.05562  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_13_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_13_02(Jupiter).mgf.gzip
INFO:root:(3320, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_13_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_03_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_03_02(Jupiter).mgf.gzip
INFO:root:(6175, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                             proteins database   q-value
7     IBP2_HUMAN((302-318))((P18065))        T  0.002577
12    IBP2_HUMAN((302-318))((P18065))        T  0.001616
17     CYTC_HUMAN((97-119))((P01034))        T  0.002577
27    IBP2_HUMAN((302-318))((P18065))        T  0.001616
29     CYTC_HUMAN((97-119))((P01034))        T  0.007151
...                               ...      ...       ...
6113  KLK6_HUMAN((191-209))((Q92876))        T  0.001616
6118  MK15_HUMAN((293-322))((Q8TD08))        T  0.007151
6136  OSTP_HUMAN((204-221))((P10451))        T  0.001616
6154  OSTP_HUMAN((204-221))((P10451))        T  0.001616
6167    CYTC_HUMAN((35-51))((P01034))        T  0.001616

[752 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_03_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5866, removed: 89, remaining: 113
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5866, removed: 89, remaining: 113
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5866
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Adrenal gland  Adipose tissue   Kidney  \
0               0.20473  0.13867        0.04228         0.00552  0.00301   

tissue    Heart  Stomach  Nasal Polyps  B-cells   Tonsil  ...    Ovary  \
0       0.00215  0.00059      -0.00162 -0.00213 -0.00214  ... -0.01279   

tissue  Esophagus  Duodenum  Smooth muscle   Spleen  Lymph node  \
0        -0.01321  -0.01351       -0.01695 -0.01876     -0.0215   

tissue  Urinary bladder  Thyroid     Lung  Bone marrow  
0              -0.02199 -0.02209 -0.05128     -0.10922  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_01_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_01_01.mgf.gzip
INFO:root:(658, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_01_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_11_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_11_01.mgf.gzip
INFO:root:(1009, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                             proteins database  q-value
17     C1R_HUMAN((183-213))((P00736))        T  0.00885
19     AMD_HUMAN((611-620))((P19021))        T  0.00885
23     PTPR2_HUMAN((64-82))((Q92932))        T  0.00885
39     VGF_HUMAN((140-168))((O15240))        T  0.00885
46      NEU2_HUMAN((52-75))((P01185))        T  0.00885
..                                ...      ...      ...
954    TNF13_HUMAN((30-60))((O75888))        T  0.00885
968   DKK3_HUMAN((202-225))((Q9UBP4))        T  0.00885
973     DKK3_HUMAN((34-53))((Q9UBP4))        T  0.00885
989    AL9A1_HUMAN((76-83))((P49189))        T  0.00885
994  APOA4_HUMAN((317-327))((P06727))        T  0.00885

[90 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fraction_11_01.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5947, removed: 32, remaining: 32
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5947, removed: 32, remaining: 32
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5947
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland  Adipose tissue    Brain  Adrenal gland   Colon  \
0               0.08063         0.02426  0.02193        0.01623  0.0074   

tissue  Appendix   Kidney  Smooth muscle  Endometrium  Salivary gland  ...  \
0         0.0056  0.00434        0.00332      0.00253         0.00242  ...   

tissue  Prostate  Oviduct  Monocytes   Spleen  Urinary bladder     Lung  \
0       -0.00548 -0.00589   -0.00805 -0.00865          -0.0092 -0.01016   

tissue  Lymph node  Esophagus   Testis  Bone marrow  
0         -0.01223   -0.01502 -0.01761     -0.05904  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_09_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_09_02Jupiter.mgf.gzip
INFO:root:(4142, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
7      VTNC_HUMAN((338-354))((P04004))        T  0.003401
21    HABP2_HUMAN((398-417))((Q14520))        T  0.005935
27     F13B_HUMAN((650-662))((P05160))        T  0.003401
42     F13B_HUMAN((650-662))((P05160))        T  0.003401
54     C1QB_HUMAN((142-157))((P02746))        T  0.003401
...                                ...      ...       ...
4059   A2AP_HUMAN((253-272))((P08697))        T  0.003401
4068   VTNC_HUMAN((338-354))((P04004))        T  0.005935
4071    CO2_HUMAN((175-190))((P06681))        T  0.003401
4106   CFAH_HUMAN((897-907))((P08603))        T  0.003401
4135   VTNC_HUMAN((338-354))((P04004))        T  0.003401

[309 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_09_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5918, removed: 29, remaining: 61
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5918, removed: 29, remaining: 61
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5918
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Monocytes   Spleen    Ovary  Appendix  \
0              0.10655    0.04331  0.02167  0.02069   0.01646   

tissue  Urinary bladder  Placenta    Colon  Adrenal gland   Kidney  ...  \
0               0.00935   0.00785  0.00476        0.00459  0.00357  ...   

tissue  Lymph node  Pituitary gland  Nasal Polyps  Stomach  Thyroid  \
0         -0.00586         -0.00602      -0.01005 -0.01062 -0.01224   

tissue  Endometrium     Lung    Brain   Testis  Bone marrow  
0          -0.01457 -0.02091 -0.02147 -0.02513     -0.08189  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_06_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_06_02Jupiter.mgf.gzip
INFO:root:(3585, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                                proteins database   q-value
12    COIA1_HUMAN((1599-1610))((P39060))        T  0.003704
62       PLMN_HUMAN((657-664))((P00747))        T  0.003704
67       VTNC_HUMAN((338-354))((P04004))        T  0.003704
69       CFAH_HUMAN((897-907))((P08603))        T  0.003704
85       VTNC_HUMAN((338-354))((P04004))        T  0.003704
...                                  ...      ...       ...
3513     CFAH_HUMAN((425-442))((P08603))        T  0.003704
3514     HEMO_HUMAN((209-220))((P02790))        T  0.003704
3542     VTNC_HUMAN((338-354))((P04004))        T  0.003704
3545     VTDB_HUMAN((342-353))((P02774))        T  0.003704
3578     VTNC_HUMAN((338-354))((P04004))        T  0.003704

[255 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_06_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5934, removed: 23, remaining: 45
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5934, removed: 23, remaining: 45
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5934
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Placenta  Appendix    Colon  Monocytes  \
0              0.07291   0.01343   0.01335  0.01183    0.01113   

tissue  Urinary bladder  Pituitary gland    Ovary  Lymph node  Endometrium  \
0               0.00881          0.00542  0.00383     0.00208      0.00182   

tissue  ...   Tonsil  B-cells  Thyroid   Heart  Oviduct  Prostate  Esophagus  \
0       ... -0.00302 -0.00316 -0.00421 -0.0044 -0.00471  -0.00613   -0.00948   

tissue    Brain   Testis  Bone marrow  
0      -0.01433 -0.02722     -0.05775  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_01_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_01_02Jupiter.mgf.gzip
INFO:root:(2544, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_01_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_17_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_17_01.mgf.gzip
INFO:root:(867, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_17_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_13_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_13_01.mgf.gzip
INFO:root:(1158, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_13_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_23_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_23_02(Jupiter).mgf.gzip
INFO:root:(2857, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                                proteins database   q-value
3        MIME_HUMAN((189-196))((P20774))        T  0.003552
4        APLP1_HUMAN((97-107))((P51693))        T  0.003552
10    NRX1A_HUMAN((1005-1019))((Q9ULB1))        T  0.002410
12        FSTL1_HUMAN((30-41))((Q12841))        T  0.003552
15       APOE_HUMAN((176-186))((P02649))        T  0.003552
...                                  ...      ...       ...
2813      7B2_HUMAN((181-192))((P05408))        T  0.006757
2818    P3IP1_HUMAN((141-156))((Q96FE7))        T  0.002410
2824     APLP1_HUMAN((97-107))((P51693))        T  0.003552
2828     A1BG_HUMAN((407-418))((P04217))        T  0.003552
2853       SORT_HUMAN((37-50))((Q99523))        T  0.002410

[334 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_23_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5892, removed: 66, remaining: 87
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5892, removed: 66, remaining: 87
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5892
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland  Thyroid    Brain  Prostate  Adrenal gland  Monocytes  \
0               0.07772  0.06012  0.04432   0.01574        0.01482    0.00884   

tissue  Placenta  Salivary gland    Ovary    Colon  ...  Oviduct  Appendix  \
0        0.00666         0.00626  0.00538  0.00159  ... -0.00857  -0.01259   

tissue  Smooth muscle  Urinary bladder   Spleen  Lymph node  Esophagus  \
0            -0.01342         -0.01397 -0.01453    -0.01629   -0.01663   

tissue   Testis     Lung  Bone marrow  
0      -0.02016 -0.02379     -0.05755  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_03_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_03_01.mgf.gzip
INFO:root:(1500, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_03_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_07_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_07_02Jupiter.mgf.gzip
INFO:root:(2694, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                             proteins database   q-value
12    VTNC_HUMAN((338-354))((P04004))        T  0.004608
14    VTNC_HUMAN((338-354))((P04004))        T  0.007491
33    APOE_HUMAN((210-225))((P02649))        T  0.004608
52    VTNC_HUMAN((338-354))((P04004))        T  0.004608
53    VTNC_HUMAN((338-354))((P04004))        T  0.004608
...                               ...      ...       ...
2657  VTNC_HUMAN((338-354))((P04004))        T  0.004608
2658  VTNC_HUMAN((338-354))((P04004))        T  0.004608
2674  VTNC_HUMAN((338-354))((P04004))        T  0.004608
2683  AACT_HUMAN((217-231))((P01011))        T  0.004608
2688  AACT_HUMAN((217-231))((P01011))        T  0.004608

[218 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_07_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5943, removed: 15, remaining: 36
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5943, removed: 15, remaining: 36
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5943
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Monocytes  Adipose tissue   Spleen   Kidney  Urinary bladder  \
0         0.05374         0.03814  0.01619  0.01237          0.00915   

tissue  Duodenum    Colon  Appendix   Rectum  Small intestine  ...  \
0        0.00715  0.00706   0.00319  0.00303          0.00257  ...   

tissue  Parotid gland  Adrenal gland  Esophagus  Thyroid  Prostate     Lung  \
0             -0.0045       -0.00468   -0.00535 -0.00553  -0.00562 -0.01019   

tissue  Endometrium    Brain   Testis  Bone marrow  
0          -0.01264 -0.01694 -0.02279     -0.04199  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_10_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_10_02(Jupiter).mgf.gzip
INFO:root:(3711, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                               proteins database   q-value
24       CO2_HUMAN((175-190))((P06681))        T  0.003344
57       ALS_HUMAN((566-596))((P35858))        T  0.003344
64     APOA4_HUMAN((267-280))((P06727))        T  0.003344
102     F13B_HUMAN((650-662))((P05160))        T  0.003344
113     F13B_HUMAN((650-662))((P05160))        T  0.003344
...                                 ...      ...       ...
3649  APOA_HUMAN((4241-4260))((P08519))        T  0.003344
3661    CD5L_HUMAN((110-140))((O43866))        T  0.003344
3666    PLMN_HUMAN((494-513))((P00747))        T  0.003344
3680    AACT_HUMAN((299-307))((P01011))        T  0.003344
3698   RARR2_HUMAN((114-126))((Q99969))        T  0.003344

[253 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_10_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5929, removed: 16, remaining: 50
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5929, removed: 16, remaining: 50
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5929
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue    Colon   Ovary  Appendix  Placenta  Small intestine  \
0              0.10315  0.02137  0.0167   0.01595   0.00592          0.00583   

tissue    Liver   Rectum  Salivary gland  Lymph node  ...  B-cells   Testis  \
0       0.00324  0.00301          0.0009     0.00024  ... -0.00688 -0.00732   

tissue  Thyroid  Esophagus  Smooth muscle   Spleen    Brain     Lung  \
0      -0.00768   -0.00788       -0.00888 -0.00895 -0.01065 -0.01293   

tissue  Endometrium  Bone marrow  
0          -0.01321     -0.05554  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_15_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_15_02Jupiter.mgf.gzip
INFO:root:(2737, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
6     PCSK9_HUMAN((511-526))((Q8NBP7))        T  0.004808
7     SULF2_HUMAN((548-561))((Q8IWU5))        T  0.004808
18        7B2_HUMAN((43-56))((P05408))        T  0.004808
42        7B2_HUMAN((43-56))((P05408))        T  0.004808
51        7B2_HUMAN((43-56))((P05408))        T  0.004808
...                                ...      ...       ...
2656   AATC_HUMAN((101-115))((P17174))        T  0.004808
2669   SPRC_HUMAN((141-151))((P09486))        T  0.004808
2690  RARR2_HUMAN((114-126))((Q99969))        T  0.004808
2720    CO2_HUMAN((175-190))((P06681))        T  0.004808
2721      CCKN_HUMAN((6-36))((P06307))        T  0.004808

[178 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_15_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5924, removed: 38, remaining: 55
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5924, removed: 38, remaining: 55
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5924
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue    Brain  Pituitary gland  Adipose tissue  Monocytes  Salivary gland  \
0       0.03797          0.03667         0.02191    0.01045         0.00922   

tissue    Colon  Smooth muscle    Ovary  Placenta   Kidney  ...  \
0       0.00767        0.00471  0.00433   0.00393  0.00371  ...   

tissue  Urinary bladder  Parotid gland  Oviduct  Prostate  Thyroid   Testis  \
0              -0.00353       -0.00412 -0.00515  -0.00627 -0.00776 -0.01233   

tissue  Lymph node  Esophagus     Lung  Bone marrow  
0         -0.01238   -0.01425 -0.01436     -0.05839  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_08_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_08_02Jupiter.mgf.gzip
INFO:root:(3377, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                             proteins database   q-value
4     C1QB_HUMAN((142-157))((P02746))        T  0.001972
18      APOA_HUMAN((79-92))((P08519))        T  0.001972
20    VTNC_HUMAN((338-354))((P04004))        T  0.001972
23    VTNC_HUMAN((338-354))((P04004))        T  0.001972
27    VTNC_HUMAN((338-354))((P04004))        T  0.001972
...                               ...      ...       ...
3349  VTNC_HUMAN((338-354))((P04004))        T  0.001972
3354  VTNC_HUMAN((338-354))((P04004))        T  0.001972
3356  VTNC_HUMAN((338-354))((P04004))        T  0.001972
3363  VTNC_HUMAN((338-354))((P04004))        T  0.001972
3375  VTNC_HUMAN((338-354))((P04004))        T  0.001972

[480 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_08_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5923, removed: 31, remaining: 56
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5923, removed: 31, remaining: 56
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5923
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Monocytes  Appendix    Colon  Urinary bladder  \
0              0.04756    0.03298    0.0188  0.01355          0.00826   

tissue  Placenta    Ovary  Lymph node  Stomach   Kidney  ...  Adrenal gland  \
0        0.00809  0.00511       0.005  0.00382  0.00357  ...       -0.00338   

tissue  Esophagus   Spleen  Parotid gland  Nasal Polyps  Thyroid  Endometrium  \
0        -0.00343 -0.00358       -0.00527      -0.00623 -0.00782     -0.00917   

tissue    Brain   Testis  Bone marrow  
0      -0.01775 -0.03146      -0.0469  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_15_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_15_01.mgf.gzip
INFO:root:(836, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_15_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_19_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_19_02Jupiter.mgf.gzip
INFO:root:(1349, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_19_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_17_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_17_01.mgf.gzip
INFO:root:(1059, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_17_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_17_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_17_02Jupiter.mgf.gzip
INFO:root:(2401, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_17_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_11_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_11_02Jupiter.mgf.gzip
INFO:root:(3433, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
4      CFAB_HUMAN((594-606))((P00751))        T  0.009009
10      CO2_HUMAN((175-190))((P06681))        T  0.009009
35      CO2_HUMAN((175-190))((P06681))        T  0.009009
39     A1BG_HUMAN((392-407))((P04217))        T  0.009009
57    APOA4_HUMAN((267-280))((P06727))        T  0.009009
...                                ...      ...       ...
3198   PLMN_HUMAN((493-513))((P00747))        T  0.009009
3232    PROS_HUMAN((91-112))((P07225))        T  0.009009
3338     GSTO1_HUMAN((1-26))((P78417))        T  0.009009
3360   PLMN_HUMAN((494-513))((P00747))        T  0.009009
3430   A1BG_HUMAN((392-407))((P04217))        T  0.009009

[89 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_11_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5953, removed: 12, remaining: 26
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5953, removed: 12, remaining: 26
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5953
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix    Ovary    Colon  Placenta   Kidney  \
0              0.07131   0.01633  0.00722  0.00472   0.00383  0.00159   

tissue  Salivary gland  Urinary bladder  Stomach    Liver  ...   Spleen  \
0              0.00109           0.0002 -0.00002 -0.00008  ... -0.00373   

tissue   Testis  Nasal Polyps  Esophagus  Thyroid  B-cells    Brain  \
0      -0.00406      -0.00419   -0.00437 -0.00442 -0.00484 -0.00525   

tissue  Endometrium     Lung  Bone marrow  
0          -0.00617 -0.00837     -0.03478  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_04_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_04_02Jupiter.mgf.gzip
INFO:root:(5150, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
5       CH082_HUMAN((16-40))((Q6P1X6))        T  0.007619
47       CYTC_HUMAN((35-52))((P01034))        T  0.002976
59    APOA4_HUMAN((254-265))((P06727))        T  0.004598
98    APOA4_HUMAN((254-265))((P06727))        T  0.004598
115    VTNC_HUMAN((338-354))((P04004))        T  0.006479
...                                ...      ...       ...
5036    ITIH2_HUMAN((43-51))((P19823))        T  0.007619
5068    CO2_HUMAN((677-688))((P06681))        T  0.002976
5078   CERU_HUMAN((485-501))((P00450))        T  0.002976
5099   CERU_HUMAN((485-501))((P00450))        T  0.002976
5116   FIBA_HUMAN((405-426))((P02671))        T  0.002976

[427 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_04_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5921, removed: 37, remaining: 58
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5921, removed: 37, remaining: 58
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5921
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue    Brain  Monocytes  Adipose tissue  Bone marrow   Spleen    Heart  \
0       0.07251     0.0483         0.04479      0.01498  0.00905  0.00158   

tissue  Placenta    Liver  Pituitary gland   Tonsil  ...  Stomach  \
0        0.00111  0.00031          0.00017  0.00004  ... -0.00599   

tissue  Urinary bladder  Smooth muscle  Esophagus   Kidney  Thyroid  \
0              -0.00635       -0.00958   -0.00988 -0.00993 -0.01508   

tissue  Lymph node  Endometrium     Lung   Testis  
0         -0.01654     -0.01803 -0.02279 -0.03544  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_10_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_10_01.mgf.gzip
INFO:root:(1167, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_10_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_09_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_09_02Jupiter.mgf.gzip
INFO:root:(4096, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                                proteins database   q-value
1       P3IP1_HUMAN((141-156))((Q96FE7))        T  0.002525
22        CO2_HUMAN((175-190))((P06681))        T  0.002525
24          CCKN_HUMAN((6-36))((P06307))        T  0.002525
34    COIA1_HUMAN((1599-1610))((P39060))        T  0.002525
51        BCAM_HUMAN((97-110))((P50895))        T  0.002525
...                                  ...      ...       ...
4025     THRB_HUMAN((178-199))((P00734))        T  0.002525
4050      CXL16_HUMAN((44-58))((Q9H2A7))        T  0.004926
4071      CATL1_HUMAN((55-68))((P07711))        T  0.002525
4081      VGF_HUMAN((208-217))((O15240))        T  0.004926
4083    CA2D1_HUMAN((690-705))((P54289))        T  0.002525

[379 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_09_02Jupiter.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5897, removed: 82, remaining: 82
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5897, removed: 82, remaining: 82
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5897
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Thyroid  Monocytes  Placenta  Endometrium  \
0               0.10271  0.03424  0.02756    0.01183   0.01005      0.00783   

tissue  Adipose tissue    Ovary   Colon  Salivary gland  ...  Lymph node  \
0              0.00667  0.00369  0.0035         0.00152  ...    -0.00826   

tissue  Nasal Polyps   Kidney  Smooth muscle  Stomach   Testis  \
0           -0.00939 -0.00963       -0.00964 -0.01133 -0.01226   

tissue  Urinary bladder   Spleen     Lung  Bone marrow  
0              -0.01256 -0.01329 -0.01971      -0.0706  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_15_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_15_02(Jupiter).mgf.gzip
INFO:root:(3003, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                               proteins database   q-value
74      VTNC_HUMAN((354-363))((P04004))        T  0.009434
88        FIBB_HUMAN((54-73))((P02675))        T  0.009434
112   A2MG_HUMAN((1004-1015))((P01023))        T  0.009434
184     CO8A_HUMAN((108-135))((P07357))        T  0.009434
186     CO8A_HUMAN((108-135))((P07357))        T  0.009434
...                                 ...      ...       ...
2709   RARR2_HUMAN((114-126))((Q99969))        T  0.009434
2790    A2GL_HUMAN((251-261))((P02750))        T  0.009434
2848      GSTO1_HUMAN((1-26))((P78417))        T  0.009434
2946     CO2_HUMAN((175-190))((P06681))        T  0.009434
2958   KLKB1_HUMAN((360-374))((P03952))        T  0.009434

[80 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_15_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5951, removed: 11, remaining: 28
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5951, removed: 11, remaining: 28
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5951
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix  Placenta    Ovary  Urinary bladder    Colon  \
0              0.06439   0.01541   0.01284  0.01114          0.00408  0.00228   

tissue  Lymph node  Salivary gland  Monocytes  Small intestine  ...  Thyroid  \
0          0.00073         0.00061     0.0005          0.00017  ...  -0.0046   

tissue  Parotid gland  Esophagus   Kidney  B-cells   Testis  Endometrium  \
0            -0.00509   -0.00543 -0.00559 -0.00704 -0.00818     -0.01056   

tissue  Smooth muscle   Brain  Bone marrow  
0            -0.01097 -0.0114     -0.01966  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_01_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_01_02(Jupiter).mgf.gzip
INFO:root:(2544, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_01_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_23_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_23_01.mgf.gzip
INFO:root:(691, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_23_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_24_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_24_02Jupiter.mgf.gzip
INFO:root:(2410, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_24_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_18_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_18_01.mgf.gzip
INFO:root:(433, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_18_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_16_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_16_02Jupiter.mgf.gzip
INFO:root:(2085, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_16_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_12_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_12_02Jupiter.mgf.gzip
INFO:root:(3201, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_12_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_19_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_19_01.mgf.gzip
INFO:root:(328, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_19_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_22_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_22_02(Jupiter).mgf.gzip
INFO:root:(1140, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                             proteins database   q-value
49    VTNC_HUMAN((354-363))((P04004))        T  0.009615
56    FA12_HUMAN((373-382))((P00748))        T  0.009615
57      CFAH_HUMAN((58-68))((P08603))        T  0.009615
60    HEMO_HUMAN((198-209))((P02790))        T  0.009615
61    CFAB_HUMAN((151-176))((P00751))        T  0.009615
...                               ...      ...       ...
1063  C1QC_HUMAN((127-140))((P02747))        T  0.009615
1070  A1BG_HUMAN((448-470))((P04217))        T  0.009615
1073  A1BG_HUMAN((448-470))((P04217))        T  0.009615
1074  A2GL_HUMAN((251-261))((P02750))        T  0.009615
1086  A1BG_HUMAN((448-470))((P04217))        T  0.009615

[75 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_22_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5952, removed: 6, remaining: 27
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5952, removed: 6, remaining: 27
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5952
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Pituitary gland  Urinary bladder  Placenta    Ovary  \
0              0.02384          0.00852          0.00748   0.00734  0.00686   

tissue   Testis  Monocytes     Lung  Stomach  Appendix  ...  Lymph node  \
0       0.00516    0.00358  0.00346  0.00274   0.00244  ...    -0.00135   

tissue   Rectum  Parotid gland  Oviduct  Prostate   Spleen  B-cells  \
0      -0.00137       -0.00156   -0.003  -0.00308 -0.00351 -0.00468   

tissue  Esophagus  Nasal Polyps  Bone marrow  
0        -0.00681      -0.00789     -0.03875  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fraction_01_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fraction_01_01.mgf.gzip
INFO:root:(755, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fraction_01_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_11_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_11_01.mgf.gzip
INFO:root:(976, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_11_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_20_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_20_02(Jupiter).mgf.gzip
INFO:root:(1740, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_20_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_20_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_20_01.mgf.gzip
INFO:root:(591, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Farction_20_01.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_13_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_13_02Jupiter.mgf.gzip
INFO:root:(3649, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_13_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_19_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_19_02(Jupiter).mgf.gzip
INFO:root:(1470, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_19_02(Jupiter).mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_20_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_20_02Jupiter.mgf.gzip
INFO:root:(1339, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/CSF_OGE_Fracction_20_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_22_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_22_02(Jupiter).mgf.gzip
INFO:root:(1884, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
7      PEDF_HUMAN((307-317))((P36955))        T  0.007752
9     FBLN3_HUMAN((316-329))((Q12805))        T  0.007752
14    P3IP1_HUMAN((141-156))((Q96FE7))        T  0.006452
28     MIME_HUMAN((189-196))((P20774))        T  0.009009
37      VGF_HUMAN((268-279))((O15240))        T  0.006452
...                                ...      ...       ...
1860   CALY_HUMAN((143-156))((Q9NYX4))        T  0.006452
1868      CFAB_HUMAN((3-33))((P00751))        T  0.009009
1870   VTNC_HUMAN((354-363))((P04004))        T  0.007752
1874    CBLN4_HUMAN((54-66))((Q9NTU7))        T  0.006452
1881  CH3L1_HUMAN((311-322))((P36222))        T  0.007752

[254 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_22_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5899, removed: 53, remaining: 80
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5899, removed: 53, remaining: 80
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5899
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue    Brain  Pituitary gland  Thyroid    Ovary  Adrenal gland  Prostate  \
0       0.08955          0.07684  0.03413  0.01382        0.01319    0.0119   

tissue  Stomach   Testis  Salivary gland  Placenta  ...  Adipose tissue  \
0       0.00515  0.00397          0.0026   0.00077  ...        -0.00474   

tissue  B-cells   Kidney  Urinary bladder  Lymph node  Endometrium  \
0        -0.005 -0.00989         -0.01018      -0.016     -0.01611   

tissue  Smooth muscle   Spleen     Lung  Bone marrow  
0            -0.01824 -0.02198 -0.04111     -0.07719  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_22_02Jupiter.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_22_02Jupiter.mgf.gzip
INFO:root:(1170, 17)
INFO:root:Starting ionbot_first_to_prot_quant
ERROR:root:No valid proteins found after filtering. Terminating function.
ERROR:root:No valid proteins found in PXD008029/Plasma_OGE_Fraction_22_02Jupiter.mgf.gzip. Skipping to the next file.
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/CSF_OGE_Fracction_02_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing CSF_OGE_Fracction_02_02(Jupiter).mgf.gzip
INFO:root:(4911, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
6        CYTC_HUMAN((35-51))((P01034))        T  0.001563
10    NPTXR_HUMAN((270-278))((O95502))        T  0.001563
20       PTGDS_HUMAN((9-39))((P41222))        T  0.001563
23    FRS1L_HUMAN((239-253))((Q9P0K9))        T  0.001563
24    NELL2_HUMAN((755-767))((Q99435))        T  0.001563
...                                ...      ...       ...
4851     AACT_HUMAN((12-42))((P01011))        T  0.002933
4852     CYTC_HUMAN((35-51))((P01034))        T  0.001563
4896     CYTC_HUMAN((35-51))((P01034))        T  0.001563
4903     CYTC_HUMAN((35-51))((P01034))        T  0.001563
4910     CYTC_HUMAN((35-51))((P01034))        T  0.001563

[641 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of CSF_OGE_Fracction_02_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5893, removed: 69, remaining: 86
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5893, removed: 69, remaining: 86
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5893
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Pituitary gland    Brain  Adrenal gland  Thyroid  Monocytes  Stomach  \
0               0.18336  0.14175        0.04826  0.01237    0.00801  0.00579   

tissue    Heart  Small intestine  Salivary gland  Nasal Polyps  ...  \
0       0.00208          0.00029        -0.00001      -0.00097  ...   

tissue  Urinary bladder  Smooth muscle  Adipose tissue  Endometrium  Spleen  \
0              -0.01391       -0.01399        -0.01479     -0.01482 -0.0189   

tissue  Kidney  Lymph node   Testis    Lung  Bone marrow  
0      -0.0207     -0.0225 -0.02509 -0.0589     -0.11712  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_21_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_21_02(Jupiter).mgf.gzip
INFO:root:(2448, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
9      AMBP_HUMAN((283-294))((P02760))        T  0.009009
11     VTNC_HUMAN((354-363))((P04004))        T  0.009009
23       CFAH_HUMAN((58-68))((P08603))        T  0.009009
34     HEMO_HUMAN((198-209))((P02790))        T  0.009009
43     AMBP_HUMAN((283-294))((P02760))        T  0.009009
...                                ...      ...       ...
2322    C1R_HUMAN((444-462))((P00736))        T  0.009009
2357    C4BPA_HUMAN((79-88))((P04003))        T  0.009009
2371  KLKB1_HUMAN((360-374))((P03952))        T  0.009009
2395    C1R_HUMAN((444-462))((P00736))        T  0.009009
2426    C1R_HUMAN((444-462))((P00736))        T  0.009009

[80 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_21_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5956, removed: 6, remaining: 23
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5956, removed: 6, remaining: 23
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5956
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Placenta  Urinary bladder    Ovary   Kidney  Appendix  \
0              0.01489   0.00989          0.00672  0.00508  0.00436   0.00385   

tissue  Salivary gland     Lung  Stomach    Liver  ...    Brain  \
0              0.00233  0.00207  0.00185  0.00054  ... -0.00223   

tissue  Smooth muscle  Parotid gland   Testis  Lymph node  Pituitary gland  \
0            -0.00229       -0.00242 -0.00276    -0.00337         -0.00342   

tissue   Spleen  Monocytes  Esophagus  B-cells  
0      -0.00459   -0.00488   -0.00512 -0.00594  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Fraction_06_02(Jupiter).mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Fraction_06_02(Jupiter).mgf.gzip
INFO:root:(3564, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                             proteins database   q-value
68    VTNC_HUMAN((338-354))((P04004))        T  0.007092
82    VTNC_HUMAN((338-354))((P04004))        T  0.007092
90    VTNC_HUMAN((338-354))((P04004))        T  0.007092
100   VTNC_HUMAN((338-354))((P04004))        T  0.007092
108   VTNC_HUMAN((338-354))((P04004))        T  0.007092
...                               ...      ...       ...
3401  COMP_HUMAN((224-248))((P49747))        T  0.007092
3489  THRB_HUMAN((178-199))((P00734))        T  0.007092
3492  CFAH_HUMAN((425-442))((P08603))        T  0.007092
3496  CFAH_HUMAN((425-442))((P08603))        T  0.007092
3558  VTNC_HUMAN((338-354))((P04004))        T  0.007092

[106 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Fraction_06_02(Jupiter).mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5954, removed: 12, remaining: 25
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5954, removed: 12, remaining: 25
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5954
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix  Placenta  Monocytes    Colon   Kidney  \
0                0.061   0.01814    0.0133    0.01066  0.00634  0.00608   

tissue  Urinary bladder   Spleen  Pituitary gland  Lymph node  ...    Heart  \
0               0.00476  0.00354           0.0022     0.00122  ... -0.00248   

tissue  Thyroid  Oviduct     Lung  Prostate  Esophagus  Endometrium    Brain  \
0      -0.00321 -0.00403 -0.00443  -0.00455   -0.00535     -0.00876 -0.01731   

tissue   Testis  Bone marrow  
0      -0.02651     -0.03616  

[1 rows x 34 columns]
INFO:root:Now running /home/compomics/conode53_pride/PRIDE_DATA/PXD008029/IONBOT_v0.11.3/Plasma_OGE_Farction_02_01.mgf.gzip/ionbot.first.csv
INFO:root:started processing Plasma_OGE_Farction_02_01.mgf.gzip
INFO:root:(986, 17)
INFO:root:Starting ionbot_first_to_prot_quant
INFO:root:                              proteins database   q-value
2        FIBB_HUMAN((30-45))((P02675))        T  0.006623
25      CO7_HUMAN((713-734))((P10643))        T  0.006623
29      C1S_HUMAN((221-246))((P09871))        T  0.006623
32        FIBA_HUMAN((6-36))((P02671))        T  0.006623
38     AMBP_HUMAN((335-350))((P02760))        T  0.006623
..                                 ...      ...       ...
931    CERU_HUMAN((721-733))((P00450))        T  0.006623
942  APOB_HUMAN((1587-1611))((P04114))        T  0.006623
953      FIBB_HUMAN((30-45))((P02675))        T  0.006623
956       FIBA_HUMAN((6-36))((P02671))        T  0.006623
979  TLN1_HUMAN((1542-1556))((Q9Y490))        T  0.006623

[126 rows x 3 columns]
INFO:root:Done with quant
INFO:root:starting prediction of Plasma_OGE_Farction_02_01.mgf.gzip
INFO:root:Starting MLMarker_reprocessing_quant
DEBUG:mlmarker.utils:Features added: 5949, removed: 19, remaining: 30
INFO:mlmarker.utils:Validated sample with 5979 features.
DEBUG:mlmarker.utils:Features added: 5949, removed: 19, remaining: 30
INFO:mlmarker.utils:Validated sample with 5979 features.
INFO:root:5949
INFO:root:5979
INFO:root:Done with predicting
INFO:root:tissue  Adipose tissue  Appendix    Ovary  Placenta  Lymph node   Colon  \
0              0.09407   0.02429  0.02272   0.01766     0.00461  0.0031   

tissue  Pituitary gland  Monocytes  Prostate  Salivary gland  ...  Oviduct  \
0               0.00244    0.00124   0.00037        -0.00013  ... -0.00604   

tissue  Esophagus  Smooth muscle  B-cells  Thyroid   Testis  Endometrium  \
0        -0.00644       -0.00654 -0.00671 -0.00806 -0.00971     -0.01249   

tissue    Brain     Lung  Bone marrow  
0      -0.01317 -0.01699     -0.05227  

[1 rows x 34 columns]
